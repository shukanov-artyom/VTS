//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace VTSWeb.VTSWebService.VTSWebService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainObjectDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.AgentVersionDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.VehicleDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsItemsGroupDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsItemDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsItemDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsValueDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.SettingsMoleculeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.SettingsAtomDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.PsaTraceDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.PsaParametersSetDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.PsaParameterDataDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.VehicleEventDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.SystemNewsDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.SystemNewsLocalizedDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.UserDto))]
    public partial class DomainObjectDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgentVersionDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class AgentVersionDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private string DownloadLinkField;
        
        private System.DateTime ReleasedDateField;
        
        private string VersionStringField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadLink {
            get {
                return this.DownloadLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadLinkField, value) != true)) {
                    this.DownloadLinkField = value;
                    this.RaisePropertyChanged("DownloadLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleasedDate {
            get {
                return this.ReleasedDateField;
            }
            set {
                if ((this.ReleasedDateField.Equals(value) != true)) {
                    this.ReleasedDateField = value;
                    this.RaisePropertyChanged("ReleasedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionString {
            get {
                return this.VersionStringField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionStringField, value) != true)) {
                    this.VersionStringField = value;
                    this.RaisePropertyChanged("VersionString");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class VehicleDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private int ManufacturerField;
        
        private int MileageField;
        
        private string ModelField;
        
        private int ProductionYearField;
        
        private System.DateTime RegisteredDateField;
        
        private string VinField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((this.ManufacturerField.Equals(value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductionYear {
            get {
                return this.ProductionYearField;
            }
            set {
                if ((this.ProductionYearField.Equals(value) != true)) {
                    this.ProductionYearField = value;
                    this.RaisePropertyChanged("ProductionYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegisteredDate {
            get {
                return this.RegisteredDateField;
            }
            set {
                if ((this.RegisteredDateField.Equals(value) != true)) {
                    this.RegisteredDateField = value;
                    this.RaisePropertyChanged("RegisteredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vin {
            get {
                return this.VinField;
            }
            set {
                if ((object.ReferenceEquals(this.VinField, value) != true)) {
                    this.VinField = value;
                    this.RaisePropertyChanged("Vin");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleCharacteristicsDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class VehicleCharacteristicsDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private string GeneralVehicleInfoField;
        
        private System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsItemsGroupDto> ItemGroupsField;
        
        private string LanguageField;
        
        private string VinField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralVehicleInfo {
            get {
                return this.GeneralVehicleInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralVehicleInfoField, value) != true)) {
                    this.GeneralVehicleInfoField = value;
                    this.RaisePropertyChanged("GeneralVehicleInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsItemsGroupDto> ItemGroups {
            get {
                return this.ItemGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemGroupsField, value) != true)) {
                    this.ItemGroupsField = value;
                    this.RaisePropertyChanged("ItemGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vin {
            get {
                return this.VinField;
            }
            set {
                if ((object.ReferenceEquals(this.VinField, value) != true)) {
                    this.VinField = value;
                    this.RaisePropertyChanged("Vin");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleCharacteristicsItemsGroupDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class VehicleCharacteristicsItemsGroupDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private long CharacteristicsIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsItemDto> ItemsField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CharacteristicsId {
            get {
                return this.CharacteristicsIdField;
            }
            set {
                if ((this.CharacteristicsIdField.Equals(value) != true)) {
                    this.CharacteristicsIdField = value;
                    this.RaisePropertyChanged("CharacteristicsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsItemDto> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleCharacteristicsItemDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class VehicleCharacteristicsItemDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private long GroupIdField;
        
        private string NameField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalyticStatisticsItemDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class AnalyticStatisticsItemDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private System.DateTime DateGeneratedField;
        
        private int TargetEngineFamilyTypeField;
        
        private int TargetEngineTypeField;
        
        private int TypeField;
        
        private System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsValueDto> ValuesField;
        
        private string VersionGeneratedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateGenerated {
            get {
                return this.DateGeneratedField;
            }
            set {
                if ((this.DateGeneratedField.Equals(value) != true)) {
                    this.DateGeneratedField = value;
                    this.RaisePropertyChanged("DateGenerated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetEngineFamilyType {
            get {
                return this.TargetEngineFamilyTypeField;
            }
            set {
                if ((this.TargetEngineFamilyTypeField.Equals(value) != true)) {
                    this.TargetEngineFamilyTypeField = value;
                    this.RaisePropertyChanged("TargetEngineFamilyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetEngineType {
            get {
                return this.TargetEngineTypeField;
            }
            set {
                if ((this.TargetEngineTypeField.Equals(value) != true)) {
                    this.TargetEngineTypeField = value;
                    this.RaisePropertyChanged("TargetEngineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsValueDto> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionGenerated {
            get {
                return this.VersionGeneratedField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionGeneratedField, value) != true)) {
                    this.VersionGeneratedField = value;
                    this.RaisePropertyChanged("VersionGenerated");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalyticStatisticsValueDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class AnalyticStatisticsValueDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private long AnalyticStatisticsItemIdField;
        
        private System.DateTime SourceDataCaptureDateTimeField;
        
        private long SourcePsaParametersSetIdField;
        
        private string SourceVinField;
        
        private double ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AnalyticStatisticsItemId {
            get {
                return this.AnalyticStatisticsItemIdField;
            }
            set {
                if ((this.AnalyticStatisticsItemIdField.Equals(value) != true)) {
                    this.AnalyticStatisticsItemIdField = value;
                    this.RaisePropertyChanged("AnalyticStatisticsItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SourceDataCaptureDateTime {
            get {
                return this.SourceDataCaptureDateTimeField;
            }
            set {
                if ((this.SourceDataCaptureDateTimeField.Equals(value) != true)) {
                    this.SourceDataCaptureDateTimeField = value;
                    this.RaisePropertyChanged("SourceDataCaptureDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SourcePsaParametersSetId {
            get {
                return this.SourcePsaParametersSetIdField;
            }
            set {
                if ((this.SourcePsaParametersSetIdField.Equals(value) != true)) {
                    this.SourcePsaParametersSetIdField = value;
                    this.RaisePropertyChanged("SourcePsaParametersSetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceVin {
            get {
                return this.SourceVinField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceVinField, value) != true)) {
                    this.SourceVinField = value;
                    this.RaisePropertyChanged("SourceVin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalyticRuleSettingsDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class AnalyticRuleSettingsDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private System.Nullable<int> EngineFamilyTypeField;
        
        private System.Nullable<int> EngineTypeField;
        
        private int ReliabilityField;
        
        private int RuleTypeField;
        
        private VTSWeb.VTSWebService.VTSWebService.SettingsMoleculeDto SettingsMoleculeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EngineFamilyType {
            get {
                return this.EngineFamilyTypeField;
            }
            set {
                if ((this.EngineFamilyTypeField.Equals(value) != true)) {
                    this.EngineFamilyTypeField = value;
                    this.RaisePropertyChanged("EngineFamilyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EngineType {
            get {
                return this.EngineTypeField;
            }
            set {
                if ((this.EngineTypeField.Equals(value) != true)) {
                    this.EngineTypeField = value;
                    this.RaisePropertyChanged("EngineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Reliability {
            get {
                return this.ReliabilityField;
            }
            set {
                if ((this.ReliabilityField.Equals(value) != true)) {
                    this.ReliabilityField = value;
                    this.RaisePropertyChanged("Reliability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleType {
            get {
                return this.RuleTypeField;
            }
            set {
                if ((this.RuleTypeField.Equals(value) != true)) {
                    this.RuleTypeField = value;
                    this.RaisePropertyChanged("RuleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VTSWeb.VTSWebService.VTSWebService.SettingsMoleculeDto SettingsMolecule {
            get {
                return this.SettingsMoleculeField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingsMoleculeField, value) != true)) {
                    this.SettingsMoleculeField = value;
                    this.RaisePropertyChanged("SettingsMolecule");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingsMoleculeDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class SettingsMoleculeDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private long AnalyticRuleSettingsIdField;
        
        private bool OverrideAcceptableField;
        
        private bool OverrideOptimalField;
        
        private VTSWeb.VTSWebService.VTSWebService.SettingsAtomDto PredefinedAtomField;
        
        private VTSWeb.VTSWebService.VTSWebService.SettingsAtomDto StatisticalAtomField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AnalyticRuleSettingsId {
            get {
                return this.AnalyticRuleSettingsIdField;
            }
            set {
                if ((this.AnalyticRuleSettingsIdField.Equals(value) != true)) {
                    this.AnalyticRuleSettingsIdField = value;
                    this.RaisePropertyChanged("AnalyticRuleSettingsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideAcceptable {
            get {
                return this.OverrideAcceptableField;
            }
            set {
                if ((this.OverrideAcceptableField.Equals(value) != true)) {
                    this.OverrideAcceptableField = value;
                    this.RaisePropertyChanged("OverrideAcceptable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideOptimal {
            get {
                return this.OverrideOptimalField;
            }
            set {
                if ((this.OverrideOptimalField.Equals(value) != true)) {
                    this.OverrideOptimalField = value;
                    this.RaisePropertyChanged("OverrideOptimal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VTSWeb.VTSWebService.VTSWebService.SettingsAtomDto PredefinedAtom {
            get {
                return this.PredefinedAtomField;
            }
            set {
                if ((object.ReferenceEquals(this.PredefinedAtomField, value) != true)) {
                    this.PredefinedAtomField = value;
                    this.RaisePropertyChanged("PredefinedAtom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VTSWeb.VTSWebService.VTSWebService.SettingsAtomDto StatisticalAtom {
            get {
                return this.StatisticalAtomField;
            }
            set {
                if ((object.ReferenceEquals(this.StatisticalAtomField, value) != true)) {
                    this.StatisticalAtomField = value;
                    this.RaisePropertyChanged("StatisticalAtom");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingsAtomDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class SettingsAtomDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private double MaxAcceptableField;
        
        private double MaxOptimalField;
        
        private double MinAcceptableField;
        
        private double MinOptimalField;
        
        private long MoleculeIdField;
        
        private int TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxAcceptable {
            get {
                return this.MaxAcceptableField;
            }
            set {
                if ((this.MaxAcceptableField.Equals(value) != true)) {
                    this.MaxAcceptableField = value;
                    this.RaisePropertyChanged("MaxAcceptable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxOptimal {
            get {
                return this.MaxOptimalField;
            }
            set {
                if ((this.MaxOptimalField.Equals(value) != true)) {
                    this.MaxOptimalField = value;
                    this.RaisePropertyChanged("MaxOptimal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinAcceptable {
            get {
                return this.MinAcceptableField;
            }
            set {
                if ((this.MinAcceptableField.Equals(value) != true)) {
                    this.MinAcceptableField = value;
                    this.RaisePropertyChanged("MinAcceptable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinOptimal {
            get {
                return this.MinOptimalField;
            }
            set {
                if ((this.MinOptimalField.Equals(value) != true)) {
                    this.MinOptimalField = value;
                    this.RaisePropertyChanged("MinOptimal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MoleculeId {
            get {
                return this.MoleculeIdField;
            }
            set {
                if ((this.MoleculeIdField.Equals(value) != true)) {
                    this.MoleculeIdField = value;
                    this.RaisePropertyChanged("MoleculeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PsaDatasetDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class PsaDatasetDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private System.DateTime ExportedDateField;
        
        private System.Guid GuidField;
        
        private long PsaVehicleIdField;
        
        private System.DateTime SavedDateField;
        
        private System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaTraceDto> TracesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExportedDate {
            get {
                return this.ExportedDateField;
            }
            set {
                if ((this.ExportedDateField.Equals(value) != true)) {
                    this.ExportedDateField = value;
                    this.RaisePropertyChanged("ExportedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PsaVehicleId {
            get {
                return this.PsaVehicleIdField;
            }
            set {
                if ((this.PsaVehicleIdField.Equals(value) != true)) {
                    this.PsaVehicleIdField = value;
                    this.RaisePropertyChanged("PsaVehicleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SavedDate {
            get {
                return this.SavedDateField;
            }
            set {
                if ((this.SavedDateField.Equals(value) != true)) {
                    this.SavedDateField = value;
                    this.RaisePropertyChanged("SavedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaTraceDto> Traces {
            get {
                return this.TracesField;
            }
            set {
                if ((object.ReferenceEquals(this.TracesField, value) != true)) {
                    this.TracesField = value;
                    this.RaisePropertyChanged("Traces");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PsaTraceDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class PsaTraceDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private string AddressField;
        
        private string ApplicationField;
        
        private System.DateTime DateField;
        
        private string FormatField;
        
        private int ManufacturerField;
        
        private int MileageField;
        
        private System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaParametersSetDto> ParametersSetsField;
        
        private string PhoneField;
        
        private string PhoneChannelField;
        
        private long PsaDatasetIdField;
        
        private string SavesetIdField;
        
        private string ToolNameField;
        
        private string ToolSerialNumberField;
        
        private string VehicleModelNameField;
        
        private string VinField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Format {
            get {
                return this.FormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatField, value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((this.ManufacturerField.Equals(value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaParametersSetDto> ParametersSets {
            get {
                return this.ParametersSetsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersSetsField, value) != true)) {
                    this.ParametersSetsField = value;
                    this.RaisePropertyChanged("ParametersSets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneChannel {
            get {
                return this.PhoneChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneChannelField, value) != true)) {
                    this.PhoneChannelField = value;
                    this.RaisePropertyChanged("PhoneChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PsaDatasetId {
            get {
                return this.PsaDatasetIdField;
            }
            set {
                if ((this.PsaDatasetIdField.Equals(value) != true)) {
                    this.PsaDatasetIdField = value;
                    this.RaisePropertyChanged("PsaDatasetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SavesetId {
            get {
                return this.SavesetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SavesetIdField, value) != true)) {
                    this.SavesetIdField = value;
                    this.RaisePropertyChanged("SavesetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolName {
            get {
                return this.ToolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolNameField, value) != true)) {
                    this.ToolNameField = value;
                    this.RaisePropertyChanged("ToolName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolSerialNumber {
            get {
                return this.ToolSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolSerialNumberField, value) != true)) {
                    this.ToolSerialNumberField = value;
                    this.RaisePropertyChanged("ToolSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleModelName {
            get {
                return this.VehicleModelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleModelNameField, value) != true)) {
                    this.VehicleModelNameField = value;
                    this.RaisePropertyChanged("VehicleModelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vin {
            get {
                return this.VinField;
            }
            set {
                if ((object.ReferenceEquals(this.VinField, value) != true)) {
                    this.VinField = value;
                    this.RaisePropertyChanged("Vin");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PsaParametersSetDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class PsaParametersSetDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private string AdditionalSourceInfoField;
        
        private string EcuLabelField;
        
        private string EcuNameField;
        
        private string OriginalTypeIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaParameterDataDto> ParametersField;
        
        private long PsaTraceIdField;
        
        private int TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalSourceInfo {
            get {
                return this.AdditionalSourceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalSourceInfoField, value) != true)) {
                    this.AdditionalSourceInfoField = value;
                    this.RaisePropertyChanged("AdditionalSourceInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EcuLabel {
            get {
                return this.EcuLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.EcuLabelField, value) != true)) {
                    this.EcuLabelField = value;
                    this.RaisePropertyChanged("EcuLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EcuName {
            get {
                return this.EcuNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EcuNameField, value) != true)) {
                    this.EcuNameField = value;
                    this.RaisePropertyChanged("EcuName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalTypeId {
            get {
                return this.OriginalTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalTypeIdField, value) != true)) {
                    this.OriginalTypeIdField = value;
                    this.RaisePropertyChanged("OriginalTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaParameterDataDto> Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PsaTraceId {
            get {
                return this.PsaTraceIdField;
            }
            set {
                if ((this.PsaTraceIdField.Equals(value) != true)) {
                    this.PsaTraceIdField = value;
                    this.RaisePropertyChanged("PsaTraceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PsaParameterDataDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class PsaParameterDataDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private string AdditionalSourceInfoField;
        
        private bool HasTimestampsField;
        
        private string OriginalTypeIdField;
        
        private long PsaParametersSetIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<int> TimestampsField;
        
        private int TypeField;
        
        private int UnitsField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalSourceInfo {
            get {
                return this.AdditionalSourceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalSourceInfoField, value) != true)) {
                    this.AdditionalSourceInfoField = value;
                    this.RaisePropertyChanged("AdditionalSourceInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasTimestamps {
            get {
                return this.HasTimestampsField;
            }
            set {
                if ((this.HasTimestampsField.Equals(value) != true)) {
                    this.HasTimestampsField = value;
                    this.RaisePropertyChanged("HasTimestamps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalTypeId {
            get {
                return this.OriginalTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalTypeIdField, value) != true)) {
                    this.OriginalTypeIdField = value;
                    this.RaisePropertyChanged("OriginalTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PsaParametersSetId {
            get {
                return this.PsaParametersSetIdField;
            }
            set {
                if ((this.PsaParametersSetIdField.Equals(value) != true)) {
                    this.PsaParametersSetIdField = value;
                    this.RaisePropertyChanged("PsaParametersSetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<int> Timestamps {
            get {
                return this.TimestampsField;
            }
            set {
                if ((object.ReferenceEquals(this.TimestampsField, value) != true)) {
                    this.TimestampsField = value;
                    this.RaisePropertyChanged("Timestamps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((this.UnitsField.Equals(value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleEventDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class VehicleEventDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private string CommentField;
        
        private System.DateTime DateField;
        
        private int MileageField;
        
        private int NextReplacementPeriodField;
        
        private System.Nullable<int> RedMileageField;
        
        private int TypeField;
        
        private long VehicleIdField;
        
        private System.Nullable<int> YellowMileageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NextReplacementPeriod {
            get {
                return this.NextReplacementPeriodField;
            }
            set {
                if ((this.NextReplacementPeriodField.Equals(value) != true)) {
                    this.NextReplacementPeriodField = value;
                    this.RaisePropertyChanged("NextReplacementPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RedMileage {
            get {
                return this.RedMileageField;
            }
            set {
                if ((this.RedMileageField.Equals(value) != true)) {
                    this.RedMileageField = value;
                    this.RaisePropertyChanged("RedMileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((this.VehicleIdField.Equals(value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> YellowMileage {
            get {
                return this.YellowMileageField;
            }
            set {
                if ((this.YellowMileageField.Equals(value) != true)) {
                    this.YellowMileageField = value;
                    this.RaisePropertyChanged("YellowMileage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemNewsDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class SystemNewsDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private System.DateTime DatePublishedField;
        
        private bool IsBlockedField;
        
        private System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsLocalizedDto> SystemNewsLocalizedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DatePublished {
            get {
                return this.DatePublishedField;
            }
            set {
                if ((this.DatePublishedField.Equals(value) != true)) {
                    this.DatePublishedField = value;
                    this.RaisePropertyChanged("DatePublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBlocked {
            get {
                return this.IsBlockedField;
            }
            set {
                if ((this.IsBlockedField.Equals(value) != true)) {
                    this.IsBlockedField = value;
                    this.RaisePropertyChanged("IsBlocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsLocalizedDto> SystemNewsLocalized {
            get {
                return this.SystemNewsLocalizedField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemNewsLocalizedField, value) != true)) {
                    this.SystemNewsLocalizedField = value;
                    this.RaisePropertyChanged("SystemNewsLocalized");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemNewsLocalizedDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class SystemNewsLocalizedDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private string HeaderField;
        
        private string LanguageField;
        
        private string NewsContentTextField;
        
        private long SystemNewsIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsContentText {
            get {
                return this.NewsContentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsContentTextField, value) != true)) {
                    this.NewsContentTextField = value;
                    this.RaisePropertyChanged("NewsContentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SystemNewsId {
            get {
                return this.SystemNewsIdField;
            }
            set {
                if ((this.SystemNewsIdField.Equals(value) != true)) {
                    this.SystemNewsIdField = value;
                    this.RaisePropertyChanged("SystemNewsId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class UserDto : VTSWeb.VTSWebService.VTSWebService.DomainObjectDto {
        
        private string EmailField;
        
        private string LoginField;
        
        private string NameField;
        
        private string PasswordHashField;
        
        private string PhoneField;
        
        private System.DateTime RegisteredDateField;
        
        private int RoleField;
        
        private string SurnameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegisteredDate {
            get {
                return this.RegisteredDateField;
            }
            set {
                if ((this.RegisteredDateField.Equals(value) != true)) {
                    this.RegisteredDateField = value;
                    this.RaisePropertyChanged("RegisteredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VtsWebServiceException", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService")]
    public partial class VtsWebServiceException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MessageField;
        
        private string StackTraceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleInformationDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class VehicleInformationDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private VTSWeb.VTSWebService.VTSWebService.EngineDto EngineField;
        
        private int ProductionYearField;
        
        private string VehicleModelField;
        
        private string VinField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VTSWeb.VTSWebService.VTSWebService.EngineDto Engine {
            get {
                return this.EngineField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineField, value) != true)) {
                    this.EngineField = value;
                    this.RaisePropertyChanged("Engine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductionYear {
            get {
                return this.ProductionYearField;
            }
            set {
                if ((this.ProductionYearField.Equals(value) != true)) {
                    this.ProductionYearField = value;
                    this.RaisePropertyChanged("ProductionYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleModel {
            get {
                return this.VehicleModelField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleModelField, value) != true)) {
                    this.VehicleModelField = value;
                    this.RaisePropertyChanged("VehicleModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vin {
            get {
                return this.VinField;
            }
            set {
                if ((object.ReferenceEquals(this.VinField, value) != true)) {
                    this.VinField = value;
                    this.RaisePropertyChanged("Vin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EngineDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class EngineDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DisplayNameField;
        
        private VTSWeb.VTSWebService.VTSWebService.EngineFamilyDto FamilyField;
        
        private int FuelTypeField;
        
        private int InjectionTypeField;
        
        private int TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VTSWeb.VTSWebService.VTSWebService.EngineFamilyDto Family {
            get {
                return this.FamilyField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyField, value) != true)) {
                    this.FamilyField = value;
                    this.RaisePropertyChanged("Family");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FuelType {
            get {
                return this.FuelTypeField;
            }
            set {
                if ((this.FuelTypeField.Equals(value) != true)) {
                    this.FuelTypeField = value;
                    this.RaisePropertyChanged("FuelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InjectionType {
            get {
                return this.InjectionTypeField;
            }
            set {
                if ((this.InjectionTypeField.Equals(value) != true)) {
                    this.InjectionTypeField = value;
                    this.RaisePropertyChanged("InjectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EngineFamilyDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class EngineFamilyDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DisplayNameField;
        
        private string LinkField;
        
        private int TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalyticStatisticsDto", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService.DataContracts")]
    public partial class AnalyticStatisticsDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsItemDto> ItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsItemDto> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VTSWebService.IVtsWebService")]
    public interface IVtsWebService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/CheckConnection", ReplyAction="http://tempuri.org/IVtsWebService/CheckConnectionResponse")]
        System.IAsyncResult BeginCheckConnection(System.AsyncCallback callback, object asyncState);
        
        string EndCheckConnection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/CheckUsernameAvailability", ReplyAction="http://tempuri.org/IVtsWebService/CheckUsernameAvailabilityResponse")]
        System.IAsyncResult BeginCheckUsernameAvailability(string username, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckUsernameAvailability(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/AuthenticateUser", ReplyAction="http://tempuri.org/IVtsWebService/AuthenticateUserResponse")]
        System.IAsyncResult BeginAuthenticateUser(string login, string passwordHash, System.AsyncCallback callback, object asyncState);
        
        VTSWeb.VTSWebService.VTSWebService.UserDto EndAuthenticateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetLastAgentVersion", ReplyAction="http://tempuri.org/IVtsWebService/GetLastAgentVersionResponse")]
        System.IAsyncResult BeginGetLastAgentVersion(System.AsyncCallback callback, object asyncState);
        
        VTSWeb.VTSWebService.VTSWebService.AgentVersionDto EndGetLastAgentVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/RegisterUser", ReplyAction="http://tempuri.org/IVtsWebService/RegisterUserResponse")]
        System.IAsyncResult BeginRegisterUser(VTSWeb.VTSWebService.VTSWebService.UserDto user, System.AsyncCallback callback, object asyncState);
        
        void EndRegisterUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetUserRoleByUserId", ReplyAction="http://tempuri.org/IVtsWebService/GetUserRoleByUserIdResponse")]
        System.IAsyncResult BeginGetUserRoleByUserId(long userId, System.AsyncCallback callback, object asyncState);
        
        int EndGetUserRoleByUserId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetPartnersVehiclesCount", ReplyAction="http://tempuri.org/IVtsWebService/GetPartnersVehiclesCountResponse")]
        System.IAsyncResult BeginGetPartnersVehiclesCount(long partnerId, System.AsyncCallback callback, object asyncState);
        
        int EndGetPartnersVehiclesCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetClientsForPartner", ReplyAction="http://tempuri.org/IVtsWebService/GetClientsForPartnerResponse")]
        System.IAsyncResult BeginGetClientsForPartner(string login, string passwordHash, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> EndGetClientsForPartner(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAllUsers", ReplyAction="http://tempuri.org/IVtsWebService/GetAllUsersResponse")]
        System.IAsyncResult BeginGetAllUsers(string administrativeLogin, string administrativePasswordHash, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> EndGetAllUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAllPartnerClients", ReplyAction="http://tempuri.org/IVtsWebService/GetAllPartnerClientsResponse")]
        System.IAsyncResult BeginGetAllPartnerClients(string partnerLogin, string partnerPasswordHash, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> EndGetAllPartnerClients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/ProvideAccessToVehicleForClientUsingEmail", ReplyAction="http://tempuri.org/IVtsWebService/ProvideAccessToVehicleForClientUsingEmailRespon" +
            "se")]
        System.IAsyncResult BeginProvideAccessToVehicleForClientUsingEmail(long vehicleId, string clientEmail, string partnerLogin, string partnerPasswordHash, System.AsyncCallback callback, object asyncState);
        
        void EndProvideAccessToVehicleForClientUsingEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/RevokeAccessToVehicleForClientUsingEmail", ReplyAction="http://tempuri.org/IVtsWebService/RevokeAccessToVehicleForClientUsingEmailRespons" +
            "e")]
        System.IAsyncResult BeginRevokeAccessToVehicleForClientUsingEmail(long vehicleId, string clientEmail, string partnerLogin, string partnerPasswordHash, System.AsyncCallback callback, object asyncState);
        
        void EndRevokeAccessToVehicleForClientUsingEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetUsersVehicles", ReplyAction="http://tempuri.org/IVtsWebService/GetUsersVehiclesResponse")]
        System.IAsyncResult BeginGetUsersVehicles(string login, string passwordHash, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto> EndGetUsersVehicles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetVehicleByVin", ReplyAction="http://tempuri.org/IVtsWebService/GetVehicleByVinResponse")]
        System.IAsyncResult BeginGetVehicleByVin(string vin, System.AsyncCallback callback, object asyncState);
        
        VTSWeb.VTSWebService.VTSWebService.VehicleDto EndGetVehicleByVin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/CheckWhetherVinIsSupported", ReplyAction="http://tempuri.org/IVtsWebService/CheckWhetherVinIsSupportedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VTSWeb.VTSWebService.VTSWebService.VtsWebServiceException), Action="http://tempuri.org/IVtsWebService/CheckWhetherVinIsSupportedVtsWebServiceExceptio" +
            "nFault", Name="VtsWebServiceException", Namespace="http://schemas.datacontract.org/2004/07/VTSWebService")]
        System.IAsyncResult BeginCheckWhetherVinIsSupported(string vin, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckWhetherVinIsSupported(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/CheckVinsReturnUnsupported", ReplyAction="http://tempuri.org/IVtsWebService/CheckVinsReturnUnsupportedResponse")]
        System.IAsyncResult BeginCheckVinsReturnUnsupported(System.Collections.ObjectModel.ObservableCollection<string> vins, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndCheckVinsReturnUnsupported(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetVehicleInformationByVin", ReplyAction="http://tempuri.org/IVtsWebService/GetVehicleInformationByVinResponse")]
        System.IAsyncResult BeginGetVehicleInformationByVin(string vin, System.AsyncCallback callback, object asyncState);
        
        VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto EndGetVehicleInformationByVin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/ReturnUnsupportedVinsFromTheList", ReplyAction="http://tempuri.org/IVtsWebService/ReturnUnsupportedVinsFromTheListResponse")]
        System.IAsyncResult BeginReturnUnsupportedVinsFromTheList(System.Collections.ObjectModel.ObservableCollection<string> vins, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndReturnUnsupportedVinsFromTheList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAgentVersions", ReplyAction="http://tempuri.org/IVtsWebService/GetAgentVersionsResponse")]
        System.IAsyncResult BeginGetAgentVersions(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AgentVersionDto> EndGetAgentVersions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/CheckVinsReturnUnregistered", ReplyAction="http://tempuri.org/IVtsWebService/CheckVinsReturnUnregisteredResponse")]
        System.IAsyncResult BeginCheckVinsReturnUnregistered(System.Collections.ObjectModel.ObservableCollection<string> vins, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndCheckVinsReturnUnregistered(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/RegisterVehicle", ReplyAction="http://tempuri.org/IVtsWebService/RegisterVehicleResponse")]
        System.IAsyncResult BeginRegisterVehicle(string vin, System.AsyncCallback callback, object asyncState);
        
        void EndRegisterVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/RegisterVehicles", ReplyAction="http://tempuri.org/IVtsWebService/RegisterVehiclesResponse")]
        System.IAsyncResult BeginRegisterVehicles(System.Collections.ObjectModel.ObservableCollection<string> vins, System.AsyncCallback callback, object asyncState);
        
        void EndRegisterVehicles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/AssociateVehicleWithUser", ReplyAction="http://tempuri.org/IVtsWebService/AssociateVehicleWithUserResponse")]
        System.IAsyncResult BeginAssociateVehicleWithUser(string vin, string userLogin, string userPasswordHash, System.AsyncCallback callback, object asyncState);
        
        void EndAssociateVehicleWithUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/AssociateVehiclesWithUser", ReplyAction="http://tempuri.org/IVtsWebService/AssociateVehiclesWithUserResponse")]
        System.IAsyncResult BeginAssociateVehiclesWithUser(System.Collections.ObjectModel.ObservableCollection<string> vin, string userLogin, string userPasswordHash, System.AsyncCallback callback, object asyncState);
        
        void EndAssociateVehiclesWithUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetVehicleCharacteristics", ReplyAction="http://tempuri.org/IVtsWebService/GetVehicleCharacteristicsResponse")]
        System.IAsyncResult BeginGetVehicleCharacteristics(string vin, int lang, System.AsyncCallback callback, object asyncState);
        
        VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsDto EndGetVehicleCharacteristics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetVehiclesInformation", ReplyAction="http://tempuri.org/IVtsWebService/GetVehiclesInformationResponse")]
        System.IAsyncResult BeginGetVehiclesInformation(System.Collections.ObjectModel.ObservableCollection<long> vehicleIds, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto> EndGetVehiclesInformation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetVehiclesForUser", ReplyAction="http://tempuri.org/IVtsWebService/GetVehiclesForUserResponse")]
        System.IAsyncResult BeginGetVehiclesForUser(string login, string passwordHash, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto> EndGetVehiclesForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetDesktopMessages", ReplyAction="http://tempuri.org/IVtsWebService/GetDesktopMessagesResponse")]
        System.IAsyncResult BeginGetDesktopMessages(string login, string passwordHash, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetDesktopMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/UpdateVehicleMileage", ReplyAction="http://tempuri.org/IVtsWebService/UpdateVehicleMileageResponse")]
        System.IAsyncResult BeginUpdateVehicleMileage(string vin, int newMileage, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateVehicleMileage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/SubmitAnalyticStatistics", ReplyAction="http://tempuri.org/IVtsWebService/SubmitAnalyticStatisticsResponse")]
        System.IAsyncResult BeginSubmitAnalyticStatistics(VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsDto statistics, System.AsyncCallback callback, object asyncState);
        
        void EndSubmitAnalyticStatistics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettings", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsResponse")]
        System.IAsyncResult BeginGetAnalyticRuleSettings(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByType", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeResponse")]
        System.IAsyncResult BeginGetAnalyticRuleSettingsByType(int type, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsByType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeAndEngineFamily", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeAndEngineFamilyRes" +
            "ponse")]
        System.IAsyncResult BeginGetAnalyticRuleSettingsByTypeAndEngineFamily(int type, int engineFamilyType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsByTypeAndEngineFamily(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeEngineFamilyAndEng" +
            "ineType", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeEngineFamilyAndEng" +
            "ineTypeResponse")]
        System.IAsyncResult BeginGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(int type, int engineFamilyType, int engineType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByEngineFamilyAndEngineT" +
            "ype", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByEngineFamilyAndEngineT" +
            "ypeResponse")]
        System.IAsyncResult BeginGetAnalyticRuleSettingsByEngineFamilyAndEngineType(int engineFamilyType, int engineType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsByEngineFamilyAndEngineType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByEngineFamily", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByEngineFamilyResponse")]
        System.IAsyncResult BeginGetAnalyticRuleSettingsByEngineFamily(int engineFamilyType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsByEngineFamily(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsDefaultByTypes", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsDefaultByTypesResponse")]
        System.IAsyncResult BeginGetAnalyticRuleSettingsDefaultByTypes(System.Collections.ObjectModel.ObservableCollection<int> types, int engineFamilyType, int engineType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsDefaultByTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsBySignature", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsBySignatureResponse")]
        System.IAsyncResult BeginGetAnalyticRuleSettingsBySignature(System.Collections.ObjectModel.ObservableCollection<int> signatureRuleTypes, System.Collections.ObjectModel.ObservableCollection<int> signatureEngineTypes, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsBySignature(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsWhereFamilyAndEngineIsNu" +
            "ll", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsWhereFamilyAndEngineIsNu" +
            "llResponse")]
        System.IAsyncResult BeginGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(int ruleType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsWhereEngineIsNull", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsWhereEngineIsNullRespons" +
            "e")]
        System.IAsyncResult BeginGetAnalyticRuleSettingsWhereEngineIsNull(int ruleType, int engineFamilyType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsWhereEngineIsNull(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByIds", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByIdsResponse")]
        System.IAsyncResult BeginGetAnalyticRuleSettingsByIds(System.Collections.ObjectModel.ObservableCollection<long> ids, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsByIds(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/SubmitAnalyticRuleSettings", ReplyAction="http://tempuri.org/IVtsWebService/SubmitAnalyticRuleSettingsResponse")]
        System.IAsyncResult BeginSubmitAnalyticRuleSettings(VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto settings, System.AsyncCallback callback, object asyncState);
        
        void EndSubmitAnalyticRuleSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/AggregateStatistics", ReplyAction="http://tempuri.org/IVtsWebService/AggregateStatisticsResponse")]
        System.IAsyncResult BeginAggregateStatistics(System.AsyncCallback callback, object asyncState);
        
        void EndAggregateStatistics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAvailableAnalyticStatisticsTypesForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetAvailableAnalyticStatisticsTypesForVehicleRe" +
            "sponse")]
        System.IAsyncResult BeginGetAvailableAnalyticStatisticsTypesForVehicle(string vin, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<int> EndGetAvailableAnalyticStatisticsTypesForVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAnalyticStatisticsPerVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticStatisticsPerVehicleResponse")]
        System.IAsyncResult BeginGetAnalyticStatisticsPerVehicle(string vin, int analyticRuleType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsValueDto> EndGetAnalyticStatisticsPerVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetSettingsForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetSettingsForVehicleResponse")]
        System.IAsyncResult BeginGetSettingsForVehicle(string vin, int ruleType, string login, string passwordHash, System.AsyncCallback callback, object asyncState);
        
        VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto EndGetSettingsForVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetAllSettingsForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetAllSettingsForVehicleResponse")]
        System.IAsyncResult BeginGetAllSettingsForVehicle(string vin, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAllSettingsForVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetDatasetsForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetDatasetsForVehicleResponse")]
        System.IAsyncResult BeginGetDatasetsForVehicle(string vin, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> EndGetDatasetsForVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetDatasetIdsForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetDatasetIdsForVehicleResponse")]
        System.IAsyncResult BeginGetDatasetIdsForVehicle(string vin, string userLogin, string userPasswordHash, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<long> EndGetDatasetIdsForVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetDatasetById", ReplyAction="http://tempuri.org/IVtsWebService/GetDatasetByIdResponse")]
        System.IAsyncResult BeginGetDatasetById(long id, string userLogin, string userPasswordHash, System.AsyncCallback callback, object asyncState);
        
        VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto EndGetDatasetById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/UploadDataset", ReplyAction="http://tempuri.org/IVtsWebService/UploadDatasetResponse")]
        System.IAsyncResult BeginUploadDataset(VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto dataset, System.AsyncCallback callback, object asyncState);
        
        void EndUploadDataset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/UploadDatasets", ReplyAction="http://tempuri.org/IVtsWebService/UploadDatasetsResponse")]
        System.IAsyncResult BeginUploadDatasets(System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> datasets, System.AsyncCallback callback, object asyncState);
        
        void EndUploadDatasets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/DeleteDataset", ReplyAction="http://tempuri.org/IVtsWebService/DeleteDatasetResponse")]
        System.IAsyncResult BeginDeleteDataset(long datasetId, string login, string passwordHash, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDataset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/DeleteTrace", ReplyAction="http://tempuri.org/IVtsWebService/DeleteTraceResponse")]
        System.IAsyncResult BeginDeleteTrace(long traceId, string login, string passwordHash, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteTrace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetDatasetsCount", ReplyAction="http://tempuri.org/IVtsWebService/GetDatasetsCountResponse")]
        System.IAsyncResult BeginGetDatasetsCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetDatasetsCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetDatasetsCountForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetDatasetsCountForVehicleResponse")]
        System.IAsyncResult BeginGetDatasetsCountForVehicle(long vehicleId, System.AsyncCallback callback, object asyncState);
        
        int EndGetDatasetsCountForVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetNextPageForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetNextPageForVehicleResponse")]
        System.IAsyncResult BeginGetNextPageForVehicle(long lastId, int pageSize, long vehicleId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> EndGetNextPageForVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetNextPage", ReplyAction="http://tempuri.org/IVtsWebService/GetNextPageResponse")]
        System.IAsyncResult BeginGetNextPage(long lastId, int pagesize, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> EndGetNextPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetUpcomingVehicleEvents", ReplyAction="http://tempuri.org/IVtsWebService/GetUpcomingVehicleEventsResponse")]
        System.IAsyncResult BeginGetUpcomingVehicleEvents(string login, string password, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto> EndGetUpcomingVehicleEvents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/GetVehicleEvents", ReplyAction="http://tempuri.org/IVtsWebService/GetVehicleEventsResponse")]
        System.IAsyncResult BeginGetVehicleEvents(string vin, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto> EndGetVehicleEvents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/SubmitVehicleEvent", ReplyAction="http://tempuri.org/IVtsWebService/SubmitVehicleEventResponse")]
        System.IAsyncResult BeginSubmitVehicleEvent(VTSWeb.VTSWebService.VTSWebService.VehicleEventDto e, System.AsyncCallback callback, object asyncState);
        
        void EndSubmitVehicleEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/DeleteVehicleEvent", ReplyAction="http://tempuri.org/IVtsWebService/DeleteVehicleEventResponse")]
        System.IAsyncResult BeginDeleteVehicleEvent(VTSWeb.VTSWebService.VTSWebService.VehicleEventDto e, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteVehicleEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/NewsGetLast", ReplyAction="http://tempuri.org/IVtsWebService/NewsGetLastResponse")]
        System.IAsyncResult BeginNewsGetLast(int topCount, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto> EndNewsGetLast(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/NewsGetAll", ReplyAction="http://tempuri.org/IVtsWebService/NewsGetAllResponse")]
        System.IAsyncResult BeginNewsGetAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto> EndNewsGetAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/NewsGet", ReplyAction="http://tempuri.org/IVtsWebService/NewsGetResponse")]
        System.IAsyncResult BeginNewsGet(long id, System.AsyncCallback callback, object asyncState);
        
        VTSWeb.VTSWebService.VTSWebService.SystemNewsDto EndNewsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/NewsUpdate", ReplyAction="http://tempuri.org/IVtsWebService/NewsUpdateResponse")]
        System.IAsyncResult BeginNewsUpdate(VTSWeb.VTSWebService.VTSWebService.SystemNewsDto item, System.AsyncCallback callback, object asyncState);
        
        void EndNewsUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/NewsPersist", ReplyAction="http://tempuri.org/IVtsWebService/NewsPersistResponse")]
        System.IAsyncResult BeginNewsPersist(VTSWeb.VTSWebService.VTSWebService.SystemNewsDto item, System.AsyncCallback callback, object asyncState);
        
        void EndNewsPersist(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/NewsDelete", ReplyAction="http://tempuri.org/IVtsWebService/NewsDeleteResponse")]
        System.IAsyncResult BeginNewsDelete(long id, System.AsyncCallback callback, object asyncState);
        
        void EndNewsDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVtsWebService/ReportUnrecognizedData", ReplyAction="http://tempuri.org/IVtsWebService/ReportUnrecognizedDataResponse")]
        System.IAsyncResult BeginReportUnrecognizedData(byte[] dataStream, System.AsyncCallback callback, object asyncState);
        
        void EndReportUnrecognizedData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVtsWebServiceChannel : VTSWeb.VTSWebService.VTSWebService.IVtsWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckUsernameAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckUsernameAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VTSWeb.VTSWebService.VTSWebService.UserDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VTSWeb.VTSWebService.VTSWebService.UserDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLastAgentVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastAgentVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VTSWeb.VTSWebService.VTSWebService.AgentVersionDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VTSWeb.VTSWebService.VTSWebService.AgentVersionDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserRoleByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserRoleByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPartnersVehiclesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPartnersVehiclesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientsForPartnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientsForPartnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPartnerClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPartnerClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersVehiclesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersVehiclesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVehicleByVinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVehicleByVinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VTSWeb.VTSWebService.VTSWebService.VehicleDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VTSWeb.VTSWebService.VTSWebService.VehicleDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckWhetherVinIsSupportedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckWhetherVinIsSupportedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckVinsReturnUnsupportedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckVinsReturnUnsupportedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVehicleInformationByVinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVehicleInformationByVinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnUnsupportedVinsFromTheListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnUnsupportedVinsFromTheListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAgentVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAgentVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AgentVersionDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AgentVersionDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckVinsReturnUnregisteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckVinsReturnUnregisteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVehicleCharacteristicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVehicleCharacteristicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVehiclesInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVehiclesInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVehiclesForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVehiclesForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDesktopMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDesktopMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalyticRuleSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalyticRuleSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalyticRuleSettingsByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalyticRuleSettingsByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalyticRuleSettingsByTypeAndEngineFamilyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalyticRuleSettingsByTypeAndEngineFamilyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalyticRuleSettingsByEngineFamilyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalyticRuleSettingsByEngineFamilyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalyticRuleSettingsDefaultByTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalyticRuleSettingsDefaultByTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalyticRuleSettingsBySignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalyticRuleSettingsBySignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalyticRuleSettingsWhereEngineIsNullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalyticRuleSettingsWhereEngineIsNullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalyticRuleSettingsByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalyticRuleSettingsByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAvailableAnalyticStatisticsTypesForVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAvailableAnalyticStatisticsTypesForVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalyticStatisticsPerVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalyticStatisticsPerVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsValueDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsValueDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSettingsForVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSettingsForVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllSettingsForVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllSettingsForVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDatasetsForVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDatasetsForVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDatasetIdsForVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDatasetIdsForVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<long> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<long>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDatasetByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDatasetByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDatasetsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDatasetsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDatasetsCountForVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDatasetsCountForVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNextPageForVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNextPageForVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNextPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNextPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUpcomingVehicleEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUpcomingVehicleEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVehicleEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVehicleEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsGetLastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewsGetLastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsGetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewsGetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VTSWeb.VTSWebService.VTSWebService.SystemNewsDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VTSWeb.VTSWebService.VTSWebService.SystemNewsDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VtsWebServiceClient : System.ServiceModel.ClientBase<VTSWeb.VTSWebService.VTSWebService.IVtsWebService>, VTSWeb.VTSWebService.VTSWebService.IVtsWebService {
        
        private BeginOperationDelegate onBeginCheckConnectionDelegate;
        
        private EndOperationDelegate onEndCheckConnectionDelegate;
        
        private System.Threading.SendOrPostCallback onCheckConnectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckUsernameAvailabilityDelegate;
        
        private EndOperationDelegate onEndCheckUsernameAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onCheckUsernameAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthenticateUserDelegate;
        
        private EndOperationDelegate onEndAuthenticateUserDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLastAgentVersionDelegate;
        
        private EndOperationDelegate onEndGetLastAgentVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastAgentVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterUserDelegate;
        
        private EndOperationDelegate onEndRegisterUserDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserRoleByUserIdDelegate;
        
        private EndOperationDelegate onEndGetUserRoleByUserIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserRoleByUserIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPartnersVehiclesCountDelegate;
        
        private EndOperationDelegate onEndGetPartnersVehiclesCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetPartnersVehiclesCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClientsForPartnerDelegate;
        
        private EndOperationDelegate onEndGetClientsForPartnerDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientsForPartnerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllUsersDelegate;
        
        private EndOperationDelegate onEndGetAllUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPartnerClientsDelegate;
        
        private EndOperationDelegate onEndGetAllPartnerClientsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPartnerClientsCompletedDelegate;
        
        private BeginOperationDelegate onBeginProvideAccessToVehicleForClientUsingEmailDelegate;
        
        private EndOperationDelegate onEndProvideAccessToVehicleForClientUsingEmailDelegate;
        
        private System.Threading.SendOrPostCallback onProvideAccessToVehicleForClientUsingEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginRevokeAccessToVehicleForClientUsingEmailDelegate;
        
        private EndOperationDelegate onEndRevokeAccessToVehicleForClientUsingEmailDelegate;
        
        private System.Threading.SendOrPostCallback onRevokeAccessToVehicleForClientUsingEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersVehiclesDelegate;
        
        private EndOperationDelegate onEndGetUsersVehiclesDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersVehiclesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVehicleByVinDelegate;
        
        private EndOperationDelegate onEndGetVehicleByVinDelegate;
        
        private System.Threading.SendOrPostCallback onGetVehicleByVinCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckWhetherVinIsSupportedDelegate;
        
        private EndOperationDelegate onEndCheckWhetherVinIsSupportedDelegate;
        
        private System.Threading.SendOrPostCallback onCheckWhetherVinIsSupportedCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckVinsReturnUnsupportedDelegate;
        
        private EndOperationDelegate onEndCheckVinsReturnUnsupportedDelegate;
        
        private System.Threading.SendOrPostCallback onCheckVinsReturnUnsupportedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVehicleInformationByVinDelegate;
        
        private EndOperationDelegate onEndGetVehicleInformationByVinDelegate;
        
        private System.Threading.SendOrPostCallback onGetVehicleInformationByVinCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnUnsupportedVinsFromTheListDelegate;
        
        private EndOperationDelegate onEndReturnUnsupportedVinsFromTheListDelegate;
        
        private System.Threading.SendOrPostCallback onReturnUnsupportedVinsFromTheListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAgentVersionsDelegate;
        
        private EndOperationDelegate onEndGetAgentVersionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAgentVersionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckVinsReturnUnregisteredDelegate;
        
        private EndOperationDelegate onEndCheckVinsReturnUnregisteredDelegate;
        
        private System.Threading.SendOrPostCallback onCheckVinsReturnUnregisteredCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterVehicleDelegate;
        
        private EndOperationDelegate onEndRegisterVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterVehiclesDelegate;
        
        private EndOperationDelegate onEndRegisterVehiclesDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterVehiclesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAssociateVehicleWithUserDelegate;
        
        private EndOperationDelegate onEndAssociateVehicleWithUserDelegate;
        
        private System.Threading.SendOrPostCallback onAssociateVehicleWithUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginAssociateVehiclesWithUserDelegate;
        
        private EndOperationDelegate onEndAssociateVehiclesWithUserDelegate;
        
        private System.Threading.SendOrPostCallback onAssociateVehiclesWithUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVehicleCharacteristicsDelegate;
        
        private EndOperationDelegate onEndGetVehicleCharacteristicsDelegate;
        
        private System.Threading.SendOrPostCallback onGetVehicleCharacteristicsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVehiclesInformationDelegate;
        
        private EndOperationDelegate onEndGetVehiclesInformationDelegate;
        
        private System.Threading.SendOrPostCallback onGetVehiclesInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVehiclesForUserDelegate;
        
        private EndOperationDelegate onEndGetVehiclesForUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetVehiclesForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDesktopMessagesDelegate;
        
        private EndOperationDelegate onEndGetDesktopMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetDesktopMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVehicleMileageDelegate;
        
        private EndOperationDelegate onEndUpdateVehicleMileageDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVehicleMileageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitAnalyticStatisticsDelegate;
        
        private EndOperationDelegate onEndSubmitAnalyticStatisticsDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitAnalyticStatisticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalyticRuleSettingsDelegate;
        
        private EndOperationDelegate onEndGetAnalyticRuleSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalyticRuleSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalyticRuleSettingsByTypeDelegate;
        
        private EndOperationDelegate onEndGetAnalyticRuleSettingsByTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalyticRuleSettingsByTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalyticRuleSettingsByTypeAndEngineFamilyDelegate;
        
        private EndOperationDelegate onEndGetAnalyticRuleSettingsByTypeAndEngineFamilyDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalyticRuleSettingsByTypeAndEngineFamilyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeDelegate;
        
        private EndOperationDelegate onEndGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeDelegate;
        
        private EndOperationDelegate onEndGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalyticRuleSettingsByEngineFamilyDelegate;
        
        private EndOperationDelegate onEndGetAnalyticRuleSettingsByEngineFamilyDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalyticRuleSettingsByEngineFamilyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalyticRuleSettingsDefaultByTypesDelegate;
        
        private EndOperationDelegate onEndGetAnalyticRuleSettingsDefaultByTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalyticRuleSettingsDefaultByTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalyticRuleSettingsBySignatureDelegate;
        
        private EndOperationDelegate onEndGetAnalyticRuleSettingsBySignatureDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalyticRuleSettingsBySignatureCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullDelegate;
        
        private EndOperationDelegate onEndGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalyticRuleSettingsWhereEngineIsNullDelegate;
        
        private EndOperationDelegate onEndGetAnalyticRuleSettingsWhereEngineIsNullDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalyticRuleSettingsWhereEngineIsNullCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalyticRuleSettingsByIdsDelegate;
        
        private EndOperationDelegate onEndGetAnalyticRuleSettingsByIdsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalyticRuleSettingsByIdsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitAnalyticRuleSettingsDelegate;
        
        private EndOperationDelegate onEndSubmitAnalyticRuleSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitAnalyticRuleSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAggregateStatisticsDelegate;
        
        private EndOperationDelegate onEndAggregateStatisticsDelegate;
        
        private System.Threading.SendOrPostCallback onAggregateStatisticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAvailableAnalyticStatisticsTypesForVehicleDelegate;
        
        private EndOperationDelegate onEndGetAvailableAnalyticStatisticsTypesForVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetAvailableAnalyticStatisticsTypesForVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalyticStatisticsPerVehicleDelegate;
        
        private EndOperationDelegate onEndGetAnalyticStatisticsPerVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalyticStatisticsPerVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSettingsForVehicleDelegate;
        
        private EndOperationDelegate onEndGetSettingsForVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetSettingsForVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllSettingsForVehicleDelegate;
        
        private EndOperationDelegate onEndGetAllSettingsForVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllSettingsForVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDatasetsForVehicleDelegate;
        
        private EndOperationDelegate onEndGetDatasetsForVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetDatasetsForVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDatasetIdsForVehicleDelegate;
        
        private EndOperationDelegate onEndGetDatasetIdsForVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetDatasetIdsForVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDatasetByIdDelegate;
        
        private EndOperationDelegate onEndGetDatasetByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetDatasetByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadDatasetDelegate;
        
        private EndOperationDelegate onEndUploadDatasetDelegate;
        
        private System.Threading.SendOrPostCallback onUploadDatasetCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadDatasetsDelegate;
        
        private EndOperationDelegate onEndUploadDatasetsDelegate;
        
        private System.Threading.SendOrPostCallback onUploadDatasetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDatasetDelegate;
        
        private EndOperationDelegate onEndDeleteDatasetDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDatasetCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTraceDelegate;
        
        private EndOperationDelegate onEndDeleteTraceDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTraceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDatasetsCountDelegate;
        
        private EndOperationDelegate onEndGetDatasetsCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetDatasetsCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDatasetsCountForVehicleDelegate;
        
        private EndOperationDelegate onEndGetDatasetsCountForVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetDatasetsCountForVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNextPageForVehicleDelegate;
        
        private EndOperationDelegate onEndGetNextPageForVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetNextPageForVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNextPageDelegate;
        
        private EndOperationDelegate onEndGetNextPageDelegate;
        
        private System.Threading.SendOrPostCallback onGetNextPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUpcomingVehicleEventsDelegate;
        
        private EndOperationDelegate onEndGetUpcomingVehicleEventsDelegate;
        
        private System.Threading.SendOrPostCallback onGetUpcomingVehicleEventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVehicleEventsDelegate;
        
        private EndOperationDelegate onEndGetVehicleEventsDelegate;
        
        private System.Threading.SendOrPostCallback onGetVehicleEventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitVehicleEventDelegate;
        
        private EndOperationDelegate onEndSubmitVehicleEventDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitVehicleEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVehicleEventDelegate;
        
        private EndOperationDelegate onEndDeleteVehicleEventDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVehicleEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewsGetLastDelegate;
        
        private EndOperationDelegate onEndNewsGetLastDelegate;
        
        private System.Threading.SendOrPostCallback onNewsGetLastCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewsGetAllDelegate;
        
        private EndOperationDelegate onEndNewsGetAllDelegate;
        
        private System.Threading.SendOrPostCallback onNewsGetAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewsGetDelegate;
        
        private EndOperationDelegate onEndNewsGetDelegate;
        
        private System.Threading.SendOrPostCallback onNewsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewsUpdateDelegate;
        
        private EndOperationDelegate onEndNewsUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onNewsUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewsPersistDelegate;
        
        private EndOperationDelegate onEndNewsPersistDelegate;
        
        private System.Threading.SendOrPostCallback onNewsPersistCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewsDeleteDelegate;
        
        private EndOperationDelegate onEndNewsDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onNewsDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportUnrecognizedDataDelegate;
        
        private EndOperationDelegate onEndReportUnrecognizedDataDelegate;
        
        private System.Threading.SendOrPostCallback onReportUnrecognizedDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public VtsWebServiceClient() {
        }
        
        public VtsWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VtsWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VtsWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VtsWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<CheckConnectionCompletedEventArgs> CheckConnectionCompleted;
        
        public event System.EventHandler<CheckUsernameAvailabilityCompletedEventArgs> CheckUsernameAvailabilityCompleted;
        
        public event System.EventHandler<AuthenticateUserCompletedEventArgs> AuthenticateUserCompleted;
        
        public event System.EventHandler<GetLastAgentVersionCompletedEventArgs> GetLastAgentVersionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RegisterUserCompleted;
        
        public event System.EventHandler<GetUserRoleByUserIdCompletedEventArgs> GetUserRoleByUserIdCompleted;
        
        public event System.EventHandler<GetPartnersVehiclesCountCompletedEventArgs> GetPartnersVehiclesCountCompleted;
        
        public event System.EventHandler<GetClientsForPartnerCompletedEventArgs> GetClientsForPartnerCompleted;
        
        public event System.EventHandler<GetAllUsersCompletedEventArgs> GetAllUsersCompleted;
        
        public event System.EventHandler<GetAllPartnerClientsCompletedEventArgs> GetAllPartnerClientsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ProvideAccessToVehicleForClientUsingEmailCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RevokeAccessToVehicleForClientUsingEmailCompleted;
        
        public event System.EventHandler<GetUsersVehiclesCompletedEventArgs> GetUsersVehiclesCompleted;
        
        public event System.EventHandler<GetVehicleByVinCompletedEventArgs> GetVehicleByVinCompleted;
        
        public event System.EventHandler<CheckWhetherVinIsSupportedCompletedEventArgs> CheckWhetherVinIsSupportedCompleted;
        
        public event System.EventHandler<CheckVinsReturnUnsupportedCompletedEventArgs> CheckVinsReturnUnsupportedCompleted;
        
        public event System.EventHandler<GetVehicleInformationByVinCompletedEventArgs> GetVehicleInformationByVinCompleted;
        
        public event System.EventHandler<ReturnUnsupportedVinsFromTheListCompletedEventArgs> ReturnUnsupportedVinsFromTheListCompleted;
        
        public event System.EventHandler<GetAgentVersionsCompletedEventArgs> GetAgentVersionsCompleted;
        
        public event System.EventHandler<CheckVinsReturnUnregisteredCompletedEventArgs> CheckVinsReturnUnregisteredCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RegisterVehicleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RegisterVehiclesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AssociateVehicleWithUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AssociateVehiclesWithUserCompleted;
        
        public event System.EventHandler<GetVehicleCharacteristicsCompletedEventArgs> GetVehicleCharacteristicsCompleted;
        
        public event System.EventHandler<GetVehiclesInformationCompletedEventArgs> GetVehiclesInformationCompleted;
        
        public event System.EventHandler<GetVehiclesForUserCompletedEventArgs> GetVehiclesForUserCompleted;
        
        public event System.EventHandler<GetDesktopMessagesCompletedEventArgs> GetDesktopMessagesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateVehicleMileageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitAnalyticStatisticsCompleted;
        
        public event System.EventHandler<GetAnalyticRuleSettingsCompletedEventArgs> GetAnalyticRuleSettingsCompleted;
        
        public event System.EventHandler<GetAnalyticRuleSettingsByTypeCompletedEventArgs> GetAnalyticRuleSettingsByTypeCompleted;
        
        public event System.EventHandler<GetAnalyticRuleSettingsByTypeAndEngineFamilyCompletedEventArgs> GetAnalyticRuleSettingsByTypeAndEngineFamilyCompleted;
        
        public event System.EventHandler<GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompletedEventArgs> GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompleted;
        
        public event System.EventHandler<GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompletedEventArgs> GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompleted;
        
        public event System.EventHandler<GetAnalyticRuleSettingsByEngineFamilyCompletedEventArgs> GetAnalyticRuleSettingsByEngineFamilyCompleted;
        
        public event System.EventHandler<GetAnalyticRuleSettingsDefaultByTypesCompletedEventArgs> GetAnalyticRuleSettingsDefaultByTypesCompleted;
        
        public event System.EventHandler<GetAnalyticRuleSettingsBySignatureCompletedEventArgs> GetAnalyticRuleSettingsBySignatureCompleted;
        
        public event System.EventHandler<GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompletedEventArgs> GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompleted;
        
        public event System.EventHandler<GetAnalyticRuleSettingsWhereEngineIsNullCompletedEventArgs> GetAnalyticRuleSettingsWhereEngineIsNullCompleted;
        
        public event System.EventHandler<GetAnalyticRuleSettingsByIdsCompletedEventArgs> GetAnalyticRuleSettingsByIdsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitAnalyticRuleSettingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AggregateStatisticsCompleted;
        
        public event System.EventHandler<GetAvailableAnalyticStatisticsTypesForVehicleCompletedEventArgs> GetAvailableAnalyticStatisticsTypesForVehicleCompleted;
        
        public event System.EventHandler<GetAnalyticStatisticsPerVehicleCompletedEventArgs> GetAnalyticStatisticsPerVehicleCompleted;
        
        public event System.EventHandler<GetSettingsForVehicleCompletedEventArgs> GetSettingsForVehicleCompleted;
        
        public event System.EventHandler<GetAllSettingsForVehicleCompletedEventArgs> GetAllSettingsForVehicleCompleted;
        
        public event System.EventHandler<GetDatasetsForVehicleCompletedEventArgs> GetDatasetsForVehicleCompleted;
        
        public event System.EventHandler<GetDatasetIdsForVehicleCompletedEventArgs> GetDatasetIdsForVehicleCompleted;
        
        public event System.EventHandler<GetDatasetByIdCompletedEventArgs> GetDatasetByIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadDatasetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadDatasetsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDatasetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteTraceCompleted;
        
        public event System.EventHandler<GetDatasetsCountCompletedEventArgs> GetDatasetsCountCompleted;
        
        public event System.EventHandler<GetDatasetsCountForVehicleCompletedEventArgs> GetDatasetsCountForVehicleCompleted;
        
        public event System.EventHandler<GetNextPageForVehicleCompletedEventArgs> GetNextPageForVehicleCompleted;
        
        public event System.EventHandler<GetNextPageCompletedEventArgs> GetNextPageCompleted;
        
        public event System.EventHandler<GetUpcomingVehicleEventsCompletedEventArgs> GetUpcomingVehicleEventsCompleted;
        
        public event System.EventHandler<GetVehicleEventsCompletedEventArgs> GetVehicleEventsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitVehicleEventCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteVehicleEventCompleted;
        
        public event System.EventHandler<NewsGetLastCompletedEventArgs> NewsGetLastCompleted;
        
        public event System.EventHandler<NewsGetAllCompletedEventArgs> NewsGetAllCompleted;
        
        public event System.EventHandler<NewsGetCompletedEventArgs> NewsGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> NewsUpdateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> NewsPersistCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> NewsDeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReportUnrecognizedDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginCheckConnection(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckConnection(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndCheckConnection(System.IAsyncResult result) {
            return base.Channel.EndCheckConnection(result);
        }
        
        private System.IAsyncResult OnBeginCheckConnection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginCheckConnection(callback, asyncState);
        }
        
        private object[] OnEndCheckConnection(System.IAsyncResult result) {
            string retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndCheckConnection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckConnectionCompleted(object state) {
            if ((this.CheckConnectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckConnectionCompleted(this, new CheckConnectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckConnectionAsync() {
            this.CheckConnectionAsync(null);
        }
        
        public void CheckConnectionAsync(object userState) {
            if ((this.onBeginCheckConnectionDelegate == null)) {
                this.onBeginCheckConnectionDelegate = new BeginOperationDelegate(this.OnBeginCheckConnection);
            }
            if ((this.onEndCheckConnectionDelegate == null)) {
                this.onEndCheckConnectionDelegate = new EndOperationDelegate(this.OnEndCheckConnection);
            }
            if ((this.onCheckConnectionCompletedDelegate == null)) {
                this.onCheckConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckConnectionCompleted);
            }
            base.InvokeAsync(this.onBeginCheckConnectionDelegate, null, this.onEndCheckConnectionDelegate, this.onCheckConnectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginCheckUsernameAvailability(string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckUsernameAvailability(username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndCheckUsernameAvailability(System.IAsyncResult result) {
            return base.Channel.EndCheckUsernameAvailability(result);
        }
        
        private System.IAsyncResult OnBeginCheckUsernameAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginCheckUsernameAvailability(username, callback, asyncState);
        }
        
        private object[] OnEndCheckUsernameAvailability(System.IAsyncResult result) {
            bool retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndCheckUsernameAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckUsernameAvailabilityCompleted(object state) {
            if ((this.CheckUsernameAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckUsernameAvailabilityCompleted(this, new CheckUsernameAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckUsernameAvailabilityAsync(string username) {
            this.CheckUsernameAvailabilityAsync(username, null);
        }
        
        public void CheckUsernameAvailabilityAsync(string username, object userState) {
            if ((this.onBeginCheckUsernameAvailabilityDelegate == null)) {
                this.onBeginCheckUsernameAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginCheckUsernameAvailability);
            }
            if ((this.onEndCheckUsernameAvailabilityDelegate == null)) {
                this.onEndCheckUsernameAvailabilityDelegate = new EndOperationDelegate(this.OnEndCheckUsernameAvailability);
            }
            if ((this.onCheckUsernameAvailabilityCompletedDelegate == null)) {
                this.onCheckUsernameAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckUsernameAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginCheckUsernameAvailabilityDelegate, new object[] {
                        username}, this.onEndCheckUsernameAvailabilityDelegate, this.onCheckUsernameAvailabilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginAuthenticateUser(string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticateUser(login, passwordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VTSWeb.VTSWebService.VTSWebService.UserDto VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndAuthenticateUser(System.IAsyncResult result) {
            return base.Channel.EndAuthenticateUser(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string passwordHash = ((string)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginAuthenticateUser(login, passwordHash, callback, asyncState);
        }
        
        private object[] OnEndAuthenticateUser(System.IAsyncResult result) {
            VTSWeb.VTSWebService.VTSWebService.UserDto retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndAuthenticateUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateUserCompleted(object state) {
            if ((this.AuthenticateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateUserAsync(string login, string passwordHash) {
            this.AuthenticateUserAsync(login, passwordHash, null);
        }
        
        public void AuthenticateUserAsync(string login, string passwordHash, object userState) {
            if ((this.onBeginAuthenticateUserDelegate == null)) {
                this.onBeginAuthenticateUserDelegate = new BeginOperationDelegate(this.OnBeginAuthenticateUser);
            }
            if ((this.onEndAuthenticateUserDelegate == null)) {
                this.onEndAuthenticateUserDelegate = new EndOperationDelegate(this.OnEndAuthenticateUser);
            }
            if ((this.onAuthenticateUserCompletedDelegate == null)) {
                this.onAuthenticateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateUserDelegate, new object[] {
                        login,
                        passwordHash}, this.onEndAuthenticateUserDelegate, this.onAuthenticateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetLastAgentVersion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastAgentVersion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VTSWeb.VTSWebService.VTSWebService.AgentVersionDto VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetLastAgentVersion(System.IAsyncResult result) {
            return base.Channel.EndGetLastAgentVersion(result);
        }
        
        private System.IAsyncResult OnBeginGetLastAgentVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetLastAgentVersion(callback, asyncState);
        }
        
        private object[] OnEndGetLastAgentVersion(System.IAsyncResult result) {
            VTSWeb.VTSWebService.VTSWebService.AgentVersionDto retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetLastAgentVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLastAgentVersionCompleted(object state) {
            if ((this.GetLastAgentVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastAgentVersionCompleted(this, new GetLastAgentVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastAgentVersionAsync() {
            this.GetLastAgentVersionAsync(null);
        }
        
        public void GetLastAgentVersionAsync(object userState) {
            if ((this.onBeginGetLastAgentVersionDelegate == null)) {
                this.onBeginGetLastAgentVersionDelegate = new BeginOperationDelegate(this.OnBeginGetLastAgentVersion);
            }
            if ((this.onEndGetLastAgentVersionDelegate == null)) {
                this.onEndGetLastAgentVersionDelegate = new EndOperationDelegate(this.OnEndGetLastAgentVersion);
            }
            if ((this.onGetLastAgentVersionCompletedDelegate == null)) {
                this.onGetLastAgentVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastAgentVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastAgentVersionDelegate, null, this.onEndGetLastAgentVersionDelegate, this.onGetLastAgentVersionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginRegisterUser(VTSWeb.VTSWebService.VTSWebService.UserDto user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndRegisterUser(System.IAsyncResult result) {
            base.Channel.EndRegisterUser(result);
        }
        
        private System.IAsyncResult OnBeginRegisterUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            VTSWeb.VTSWebService.VTSWebService.UserDto user = ((VTSWeb.VTSWebService.VTSWebService.UserDto)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginRegisterUser(user, callback, asyncState);
        }
        
        private object[] OnEndRegisterUser(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndRegisterUser(result);
            return null;
        }
        
        private void OnRegisterUserCompleted(object state) {
            if ((this.RegisterUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterUserAsync(VTSWeb.VTSWebService.VTSWebService.UserDto user) {
            this.RegisterUserAsync(user, null);
        }
        
        public void RegisterUserAsync(VTSWeb.VTSWebService.VTSWebService.UserDto user, object userState) {
            if ((this.onBeginRegisterUserDelegate == null)) {
                this.onBeginRegisterUserDelegate = new BeginOperationDelegate(this.OnBeginRegisterUser);
            }
            if ((this.onEndRegisterUserDelegate == null)) {
                this.onEndRegisterUserDelegate = new EndOperationDelegate(this.OnEndRegisterUser);
            }
            if ((this.onRegisterUserCompletedDelegate == null)) {
                this.onRegisterUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterUserCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterUserDelegate, new object[] {
                        user}, this.onEndRegisterUserDelegate, this.onRegisterUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetUserRoleByUserId(long userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserRoleByUserId(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetUserRoleByUserId(System.IAsyncResult result) {
            return base.Channel.EndGetUserRoleByUserId(result);
        }
        
        private System.IAsyncResult OnBeginGetUserRoleByUserId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long userId = ((long)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetUserRoleByUserId(userId, callback, asyncState);
        }
        
        private object[] OnEndGetUserRoleByUserId(System.IAsyncResult result) {
            int retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetUserRoleByUserId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserRoleByUserIdCompleted(object state) {
            if ((this.GetUserRoleByUserIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserRoleByUserIdCompleted(this, new GetUserRoleByUserIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserRoleByUserIdAsync(long userId) {
            this.GetUserRoleByUserIdAsync(userId, null);
        }
        
        public void GetUserRoleByUserIdAsync(long userId, object userState) {
            if ((this.onBeginGetUserRoleByUserIdDelegate == null)) {
                this.onBeginGetUserRoleByUserIdDelegate = new BeginOperationDelegate(this.OnBeginGetUserRoleByUserId);
            }
            if ((this.onEndGetUserRoleByUserIdDelegate == null)) {
                this.onEndGetUserRoleByUserIdDelegate = new EndOperationDelegate(this.OnEndGetUserRoleByUserId);
            }
            if ((this.onGetUserRoleByUserIdCompletedDelegate == null)) {
                this.onGetUserRoleByUserIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserRoleByUserIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserRoleByUserIdDelegate, new object[] {
                        userId}, this.onEndGetUserRoleByUserIdDelegate, this.onGetUserRoleByUserIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetPartnersVehiclesCount(long partnerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPartnersVehiclesCount(partnerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetPartnersVehiclesCount(System.IAsyncResult result) {
            return base.Channel.EndGetPartnersVehiclesCount(result);
        }
        
        private System.IAsyncResult OnBeginGetPartnersVehiclesCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long partnerId = ((long)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetPartnersVehiclesCount(partnerId, callback, asyncState);
        }
        
        private object[] OnEndGetPartnersVehiclesCount(System.IAsyncResult result) {
            int retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetPartnersVehiclesCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPartnersVehiclesCountCompleted(object state) {
            if ((this.GetPartnersVehiclesCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPartnersVehiclesCountCompleted(this, new GetPartnersVehiclesCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPartnersVehiclesCountAsync(long partnerId) {
            this.GetPartnersVehiclesCountAsync(partnerId, null);
        }
        
        public void GetPartnersVehiclesCountAsync(long partnerId, object userState) {
            if ((this.onBeginGetPartnersVehiclesCountDelegate == null)) {
                this.onBeginGetPartnersVehiclesCountDelegate = new BeginOperationDelegate(this.OnBeginGetPartnersVehiclesCount);
            }
            if ((this.onEndGetPartnersVehiclesCountDelegate == null)) {
                this.onEndGetPartnersVehiclesCountDelegate = new EndOperationDelegate(this.OnEndGetPartnersVehiclesCount);
            }
            if ((this.onGetPartnersVehiclesCountCompletedDelegate == null)) {
                this.onGetPartnersVehiclesCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPartnersVehiclesCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetPartnersVehiclesCountDelegate, new object[] {
                        partnerId}, this.onEndGetPartnersVehiclesCountDelegate, this.onGetPartnersVehiclesCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetClientsForPartner(string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClientsForPartner(login, passwordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetClientsForPartner(System.IAsyncResult result) {
            return base.Channel.EndGetClientsForPartner(result);
        }
        
        private System.IAsyncResult OnBeginGetClientsForPartner(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string passwordHash = ((string)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetClientsForPartner(login, passwordHash, callback, asyncState);
        }
        
        private object[] OnEndGetClientsForPartner(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetClientsForPartner(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientsForPartnerCompleted(object state) {
            if ((this.GetClientsForPartnerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientsForPartnerCompleted(this, new GetClientsForPartnerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientsForPartnerAsync(string login, string passwordHash) {
            this.GetClientsForPartnerAsync(login, passwordHash, null);
        }
        
        public void GetClientsForPartnerAsync(string login, string passwordHash, object userState) {
            if ((this.onBeginGetClientsForPartnerDelegate == null)) {
                this.onBeginGetClientsForPartnerDelegate = new BeginOperationDelegate(this.OnBeginGetClientsForPartner);
            }
            if ((this.onEndGetClientsForPartnerDelegate == null)) {
                this.onEndGetClientsForPartnerDelegate = new EndOperationDelegate(this.OnEndGetClientsForPartner);
            }
            if ((this.onGetClientsForPartnerCompletedDelegate == null)) {
                this.onGetClientsForPartnerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientsForPartnerCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientsForPartnerDelegate, new object[] {
                        login,
                        passwordHash}, this.onEndGetClientsForPartnerDelegate, this.onGetClientsForPartnerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAllUsers(string administrativeLogin, string administrativePasswordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllUsers(administrativeLogin, administrativePasswordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAllUsers(System.IAsyncResult result) {
            return base.Channel.EndGetAllUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string administrativeLogin = ((string)(inValues[0]));
            string administrativePasswordHash = ((string)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAllUsers(administrativeLogin, administrativePasswordHash, callback, asyncState);
        }
        
        private object[] OnEndGetAllUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAllUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllUsersCompleted(object state) {
            if ((this.GetAllUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllUsersAsync(string administrativeLogin, string administrativePasswordHash) {
            this.GetAllUsersAsync(administrativeLogin, administrativePasswordHash, null);
        }
        
        public void GetAllUsersAsync(string administrativeLogin, string administrativePasswordHash, object userState) {
            if ((this.onBeginGetAllUsersDelegate == null)) {
                this.onBeginGetAllUsersDelegate = new BeginOperationDelegate(this.OnBeginGetAllUsers);
            }
            if ((this.onEndGetAllUsersDelegate == null)) {
                this.onEndGetAllUsersDelegate = new EndOperationDelegate(this.OnEndGetAllUsers);
            }
            if ((this.onGetAllUsersCompletedDelegate == null)) {
                this.onGetAllUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllUsersDelegate, new object[] {
                        administrativeLogin,
                        administrativePasswordHash}, this.onEndGetAllUsersDelegate, this.onGetAllUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAllPartnerClients(string partnerLogin, string partnerPasswordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPartnerClients(partnerLogin, partnerPasswordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAllPartnerClients(System.IAsyncResult result) {
            return base.Channel.EndGetAllPartnerClients(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPartnerClients(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string partnerLogin = ((string)(inValues[0]));
            string partnerPasswordHash = ((string)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAllPartnerClients(partnerLogin, partnerPasswordHash, callback, asyncState);
        }
        
        private object[] OnEndGetAllPartnerClients(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAllPartnerClients(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPartnerClientsCompleted(object state) {
            if ((this.GetAllPartnerClientsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPartnerClientsCompleted(this, new GetAllPartnerClientsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPartnerClientsAsync(string partnerLogin, string partnerPasswordHash) {
            this.GetAllPartnerClientsAsync(partnerLogin, partnerPasswordHash, null);
        }
        
        public void GetAllPartnerClientsAsync(string partnerLogin, string partnerPasswordHash, object userState) {
            if ((this.onBeginGetAllPartnerClientsDelegate == null)) {
                this.onBeginGetAllPartnerClientsDelegate = new BeginOperationDelegate(this.OnBeginGetAllPartnerClients);
            }
            if ((this.onEndGetAllPartnerClientsDelegate == null)) {
                this.onEndGetAllPartnerClientsDelegate = new EndOperationDelegate(this.OnEndGetAllPartnerClients);
            }
            if ((this.onGetAllPartnerClientsCompletedDelegate == null)) {
                this.onGetAllPartnerClientsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPartnerClientsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPartnerClientsDelegate, new object[] {
                        partnerLogin,
                        partnerPasswordHash}, this.onEndGetAllPartnerClientsDelegate, this.onGetAllPartnerClientsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginProvideAccessToVehicleForClientUsingEmail(long vehicleId, string clientEmail, string partnerLogin, string partnerPasswordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProvideAccessToVehicleForClientUsingEmail(vehicleId, clientEmail, partnerLogin, partnerPasswordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndProvideAccessToVehicleForClientUsingEmail(System.IAsyncResult result) {
            base.Channel.EndProvideAccessToVehicleForClientUsingEmail(result);
        }
        
        private System.IAsyncResult OnBeginProvideAccessToVehicleForClientUsingEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long vehicleId = ((long)(inValues[0]));
            string clientEmail = ((string)(inValues[1]));
            string partnerLogin = ((string)(inValues[2]));
            string partnerPasswordHash = ((string)(inValues[3]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginProvideAccessToVehicleForClientUsingEmail(vehicleId, clientEmail, partnerLogin, partnerPasswordHash, callback, asyncState);
        }
        
        private object[] OnEndProvideAccessToVehicleForClientUsingEmail(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndProvideAccessToVehicleForClientUsingEmail(result);
            return null;
        }
        
        private void OnProvideAccessToVehicleForClientUsingEmailCompleted(object state) {
            if ((this.ProvideAccessToVehicleForClientUsingEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProvideAccessToVehicleForClientUsingEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProvideAccessToVehicleForClientUsingEmailAsync(long vehicleId, string clientEmail, string partnerLogin, string partnerPasswordHash) {
            this.ProvideAccessToVehicleForClientUsingEmailAsync(vehicleId, clientEmail, partnerLogin, partnerPasswordHash, null);
        }
        
        public void ProvideAccessToVehicleForClientUsingEmailAsync(long vehicleId, string clientEmail, string partnerLogin, string partnerPasswordHash, object userState) {
            if ((this.onBeginProvideAccessToVehicleForClientUsingEmailDelegate == null)) {
                this.onBeginProvideAccessToVehicleForClientUsingEmailDelegate = new BeginOperationDelegate(this.OnBeginProvideAccessToVehicleForClientUsingEmail);
            }
            if ((this.onEndProvideAccessToVehicleForClientUsingEmailDelegate == null)) {
                this.onEndProvideAccessToVehicleForClientUsingEmailDelegate = new EndOperationDelegate(this.OnEndProvideAccessToVehicleForClientUsingEmail);
            }
            if ((this.onProvideAccessToVehicleForClientUsingEmailCompletedDelegate == null)) {
                this.onProvideAccessToVehicleForClientUsingEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProvideAccessToVehicleForClientUsingEmailCompleted);
            }
            base.InvokeAsync(this.onBeginProvideAccessToVehicleForClientUsingEmailDelegate, new object[] {
                        vehicleId,
                        clientEmail,
                        partnerLogin,
                        partnerPasswordHash}, this.onEndProvideAccessToVehicleForClientUsingEmailDelegate, this.onProvideAccessToVehicleForClientUsingEmailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginRevokeAccessToVehicleForClientUsingEmail(long vehicleId, string clientEmail, string partnerLogin, string partnerPasswordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRevokeAccessToVehicleForClientUsingEmail(vehicleId, clientEmail, partnerLogin, partnerPasswordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndRevokeAccessToVehicleForClientUsingEmail(System.IAsyncResult result) {
            base.Channel.EndRevokeAccessToVehicleForClientUsingEmail(result);
        }
        
        private System.IAsyncResult OnBeginRevokeAccessToVehicleForClientUsingEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long vehicleId = ((long)(inValues[0]));
            string clientEmail = ((string)(inValues[1]));
            string partnerLogin = ((string)(inValues[2]));
            string partnerPasswordHash = ((string)(inValues[3]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginRevokeAccessToVehicleForClientUsingEmail(vehicleId, clientEmail, partnerLogin, partnerPasswordHash, callback, asyncState);
        }
        
        private object[] OnEndRevokeAccessToVehicleForClientUsingEmail(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndRevokeAccessToVehicleForClientUsingEmail(result);
            return null;
        }
        
        private void OnRevokeAccessToVehicleForClientUsingEmailCompleted(object state) {
            if ((this.RevokeAccessToVehicleForClientUsingEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RevokeAccessToVehicleForClientUsingEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RevokeAccessToVehicleForClientUsingEmailAsync(long vehicleId, string clientEmail, string partnerLogin, string partnerPasswordHash) {
            this.RevokeAccessToVehicleForClientUsingEmailAsync(vehicleId, clientEmail, partnerLogin, partnerPasswordHash, null);
        }
        
        public void RevokeAccessToVehicleForClientUsingEmailAsync(long vehicleId, string clientEmail, string partnerLogin, string partnerPasswordHash, object userState) {
            if ((this.onBeginRevokeAccessToVehicleForClientUsingEmailDelegate == null)) {
                this.onBeginRevokeAccessToVehicleForClientUsingEmailDelegate = new BeginOperationDelegate(this.OnBeginRevokeAccessToVehicleForClientUsingEmail);
            }
            if ((this.onEndRevokeAccessToVehicleForClientUsingEmailDelegate == null)) {
                this.onEndRevokeAccessToVehicleForClientUsingEmailDelegate = new EndOperationDelegate(this.OnEndRevokeAccessToVehicleForClientUsingEmail);
            }
            if ((this.onRevokeAccessToVehicleForClientUsingEmailCompletedDelegate == null)) {
                this.onRevokeAccessToVehicleForClientUsingEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRevokeAccessToVehicleForClientUsingEmailCompleted);
            }
            base.InvokeAsync(this.onBeginRevokeAccessToVehicleForClientUsingEmailDelegate, new object[] {
                        vehicleId,
                        clientEmail,
                        partnerLogin,
                        partnerPasswordHash}, this.onEndRevokeAccessToVehicleForClientUsingEmailDelegate, this.onRevokeAccessToVehicleForClientUsingEmailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetUsersVehicles(string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersVehicles(login, passwordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetUsersVehicles(System.IAsyncResult result) {
            return base.Channel.EndGetUsersVehicles(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersVehicles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string passwordHash = ((string)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetUsersVehicles(login, passwordHash, callback, asyncState);
        }
        
        private object[] OnEndGetUsersVehicles(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetUsersVehicles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersVehiclesCompleted(object state) {
            if ((this.GetUsersVehiclesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersVehiclesCompleted(this, new GetUsersVehiclesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersVehiclesAsync(string login, string passwordHash) {
            this.GetUsersVehiclesAsync(login, passwordHash, null);
        }
        
        public void GetUsersVehiclesAsync(string login, string passwordHash, object userState) {
            if ((this.onBeginGetUsersVehiclesDelegate == null)) {
                this.onBeginGetUsersVehiclesDelegate = new BeginOperationDelegate(this.OnBeginGetUsersVehicles);
            }
            if ((this.onEndGetUsersVehiclesDelegate == null)) {
                this.onEndGetUsersVehiclesDelegate = new EndOperationDelegate(this.OnEndGetUsersVehicles);
            }
            if ((this.onGetUsersVehiclesCompletedDelegate == null)) {
                this.onGetUsersVehiclesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersVehiclesCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersVehiclesDelegate, new object[] {
                        login,
                        passwordHash}, this.onEndGetUsersVehiclesDelegate, this.onGetUsersVehiclesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetVehicleByVin(string vin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVehicleByVin(vin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VTSWeb.VTSWebService.VTSWebService.VehicleDto VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetVehicleByVin(System.IAsyncResult result) {
            return base.Channel.EndGetVehicleByVin(result);
        }
        
        private System.IAsyncResult OnBeginGetVehicleByVin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetVehicleByVin(vin, callback, asyncState);
        }
        
        private object[] OnEndGetVehicleByVin(System.IAsyncResult result) {
            VTSWeb.VTSWebService.VTSWebService.VehicleDto retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetVehicleByVin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVehicleByVinCompleted(object state) {
            if ((this.GetVehicleByVinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVehicleByVinCompleted(this, new GetVehicleByVinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVehicleByVinAsync(string vin) {
            this.GetVehicleByVinAsync(vin, null);
        }
        
        public void GetVehicleByVinAsync(string vin, object userState) {
            if ((this.onBeginGetVehicleByVinDelegate == null)) {
                this.onBeginGetVehicleByVinDelegate = new BeginOperationDelegate(this.OnBeginGetVehicleByVin);
            }
            if ((this.onEndGetVehicleByVinDelegate == null)) {
                this.onEndGetVehicleByVinDelegate = new EndOperationDelegate(this.OnEndGetVehicleByVin);
            }
            if ((this.onGetVehicleByVinCompletedDelegate == null)) {
                this.onGetVehicleByVinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVehicleByVinCompleted);
            }
            base.InvokeAsync(this.onBeginGetVehicleByVinDelegate, new object[] {
                        vin}, this.onEndGetVehicleByVinDelegate, this.onGetVehicleByVinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginCheckWhetherVinIsSupported(string vin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckWhetherVinIsSupported(vin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndCheckWhetherVinIsSupported(System.IAsyncResult result) {
            return base.Channel.EndCheckWhetherVinIsSupported(result);
        }
        
        private System.IAsyncResult OnBeginCheckWhetherVinIsSupported(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginCheckWhetherVinIsSupported(vin, callback, asyncState);
        }
        
        private object[] OnEndCheckWhetherVinIsSupported(System.IAsyncResult result) {
            bool retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndCheckWhetherVinIsSupported(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckWhetherVinIsSupportedCompleted(object state) {
            if ((this.CheckWhetherVinIsSupportedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckWhetherVinIsSupportedCompleted(this, new CheckWhetherVinIsSupportedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckWhetherVinIsSupportedAsync(string vin) {
            this.CheckWhetherVinIsSupportedAsync(vin, null);
        }
        
        public void CheckWhetherVinIsSupportedAsync(string vin, object userState) {
            if ((this.onBeginCheckWhetherVinIsSupportedDelegate == null)) {
                this.onBeginCheckWhetherVinIsSupportedDelegate = new BeginOperationDelegate(this.OnBeginCheckWhetherVinIsSupported);
            }
            if ((this.onEndCheckWhetherVinIsSupportedDelegate == null)) {
                this.onEndCheckWhetherVinIsSupportedDelegate = new EndOperationDelegate(this.OnEndCheckWhetherVinIsSupported);
            }
            if ((this.onCheckWhetherVinIsSupportedCompletedDelegate == null)) {
                this.onCheckWhetherVinIsSupportedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckWhetherVinIsSupportedCompleted);
            }
            base.InvokeAsync(this.onBeginCheckWhetherVinIsSupportedDelegate, new object[] {
                        vin}, this.onEndCheckWhetherVinIsSupportedDelegate, this.onCheckWhetherVinIsSupportedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginCheckVinsReturnUnsupported(System.Collections.ObjectModel.ObservableCollection<string> vins, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckVinsReturnUnsupported(vins, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndCheckVinsReturnUnsupported(System.IAsyncResult result) {
            return base.Channel.EndCheckVinsReturnUnsupported(result);
        }
        
        private System.IAsyncResult OnBeginCheckVinsReturnUnsupported(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> vins = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginCheckVinsReturnUnsupported(vins, callback, asyncState);
        }
        
        private object[] OnEndCheckVinsReturnUnsupported(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndCheckVinsReturnUnsupported(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckVinsReturnUnsupportedCompleted(object state) {
            if ((this.CheckVinsReturnUnsupportedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckVinsReturnUnsupportedCompleted(this, new CheckVinsReturnUnsupportedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckVinsReturnUnsupportedAsync(System.Collections.ObjectModel.ObservableCollection<string> vins) {
            this.CheckVinsReturnUnsupportedAsync(vins, null);
        }
        
        public void CheckVinsReturnUnsupportedAsync(System.Collections.ObjectModel.ObservableCollection<string> vins, object userState) {
            if ((this.onBeginCheckVinsReturnUnsupportedDelegate == null)) {
                this.onBeginCheckVinsReturnUnsupportedDelegate = new BeginOperationDelegate(this.OnBeginCheckVinsReturnUnsupported);
            }
            if ((this.onEndCheckVinsReturnUnsupportedDelegate == null)) {
                this.onEndCheckVinsReturnUnsupportedDelegate = new EndOperationDelegate(this.OnEndCheckVinsReturnUnsupported);
            }
            if ((this.onCheckVinsReturnUnsupportedCompletedDelegate == null)) {
                this.onCheckVinsReturnUnsupportedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckVinsReturnUnsupportedCompleted);
            }
            base.InvokeAsync(this.onBeginCheckVinsReturnUnsupportedDelegate, new object[] {
                        vins}, this.onEndCheckVinsReturnUnsupportedDelegate, this.onCheckVinsReturnUnsupportedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetVehicleInformationByVin(string vin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVehicleInformationByVin(vin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetVehicleInformationByVin(System.IAsyncResult result) {
            return base.Channel.EndGetVehicleInformationByVin(result);
        }
        
        private System.IAsyncResult OnBeginGetVehicleInformationByVin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetVehicleInformationByVin(vin, callback, asyncState);
        }
        
        private object[] OnEndGetVehicleInformationByVin(System.IAsyncResult result) {
            VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetVehicleInformationByVin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVehicleInformationByVinCompleted(object state) {
            if ((this.GetVehicleInformationByVinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVehicleInformationByVinCompleted(this, new GetVehicleInformationByVinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVehicleInformationByVinAsync(string vin) {
            this.GetVehicleInformationByVinAsync(vin, null);
        }
        
        public void GetVehicleInformationByVinAsync(string vin, object userState) {
            if ((this.onBeginGetVehicleInformationByVinDelegate == null)) {
                this.onBeginGetVehicleInformationByVinDelegate = new BeginOperationDelegate(this.OnBeginGetVehicleInformationByVin);
            }
            if ((this.onEndGetVehicleInformationByVinDelegate == null)) {
                this.onEndGetVehicleInformationByVinDelegate = new EndOperationDelegate(this.OnEndGetVehicleInformationByVin);
            }
            if ((this.onGetVehicleInformationByVinCompletedDelegate == null)) {
                this.onGetVehicleInformationByVinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVehicleInformationByVinCompleted);
            }
            base.InvokeAsync(this.onBeginGetVehicleInformationByVinDelegate, new object[] {
                        vin}, this.onEndGetVehicleInformationByVinDelegate, this.onGetVehicleInformationByVinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginReturnUnsupportedVinsFromTheList(System.Collections.ObjectModel.ObservableCollection<string> vins, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnUnsupportedVinsFromTheList(vins, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndReturnUnsupportedVinsFromTheList(System.IAsyncResult result) {
            return base.Channel.EndReturnUnsupportedVinsFromTheList(result);
        }
        
        private System.IAsyncResult OnBeginReturnUnsupportedVinsFromTheList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> vins = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginReturnUnsupportedVinsFromTheList(vins, callback, asyncState);
        }
        
        private object[] OnEndReturnUnsupportedVinsFromTheList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndReturnUnsupportedVinsFromTheList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnUnsupportedVinsFromTheListCompleted(object state) {
            if ((this.ReturnUnsupportedVinsFromTheListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnUnsupportedVinsFromTheListCompleted(this, new ReturnUnsupportedVinsFromTheListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnUnsupportedVinsFromTheListAsync(System.Collections.ObjectModel.ObservableCollection<string> vins) {
            this.ReturnUnsupportedVinsFromTheListAsync(vins, null);
        }
        
        public void ReturnUnsupportedVinsFromTheListAsync(System.Collections.ObjectModel.ObservableCollection<string> vins, object userState) {
            if ((this.onBeginReturnUnsupportedVinsFromTheListDelegate == null)) {
                this.onBeginReturnUnsupportedVinsFromTheListDelegate = new BeginOperationDelegate(this.OnBeginReturnUnsupportedVinsFromTheList);
            }
            if ((this.onEndReturnUnsupportedVinsFromTheListDelegate == null)) {
                this.onEndReturnUnsupportedVinsFromTheListDelegate = new EndOperationDelegate(this.OnEndReturnUnsupportedVinsFromTheList);
            }
            if ((this.onReturnUnsupportedVinsFromTheListCompletedDelegate == null)) {
                this.onReturnUnsupportedVinsFromTheListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnUnsupportedVinsFromTheListCompleted);
            }
            base.InvokeAsync(this.onBeginReturnUnsupportedVinsFromTheListDelegate, new object[] {
                        vins}, this.onEndReturnUnsupportedVinsFromTheListDelegate, this.onReturnUnsupportedVinsFromTheListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAgentVersions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAgentVersions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AgentVersionDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAgentVersions(System.IAsyncResult result) {
            return base.Channel.EndGetAgentVersions(result);
        }
        
        private System.IAsyncResult OnBeginGetAgentVersions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAgentVersions(callback, asyncState);
        }
        
        private object[] OnEndGetAgentVersions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AgentVersionDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAgentVersions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAgentVersionsCompleted(object state) {
            if ((this.GetAgentVersionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAgentVersionsCompleted(this, new GetAgentVersionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAgentVersionsAsync() {
            this.GetAgentVersionsAsync(null);
        }
        
        public void GetAgentVersionsAsync(object userState) {
            if ((this.onBeginGetAgentVersionsDelegate == null)) {
                this.onBeginGetAgentVersionsDelegate = new BeginOperationDelegate(this.OnBeginGetAgentVersions);
            }
            if ((this.onEndGetAgentVersionsDelegate == null)) {
                this.onEndGetAgentVersionsDelegate = new EndOperationDelegate(this.OnEndGetAgentVersions);
            }
            if ((this.onGetAgentVersionsCompletedDelegate == null)) {
                this.onGetAgentVersionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAgentVersionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAgentVersionsDelegate, null, this.onEndGetAgentVersionsDelegate, this.onGetAgentVersionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginCheckVinsReturnUnregistered(System.Collections.ObjectModel.ObservableCollection<string> vins, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckVinsReturnUnregistered(vins, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndCheckVinsReturnUnregistered(System.IAsyncResult result) {
            return base.Channel.EndCheckVinsReturnUnregistered(result);
        }
        
        private System.IAsyncResult OnBeginCheckVinsReturnUnregistered(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> vins = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginCheckVinsReturnUnregistered(vins, callback, asyncState);
        }
        
        private object[] OnEndCheckVinsReturnUnregistered(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndCheckVinsReturnUnregistered(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckVinsReturnUnregisteredCompleted(object state) {
            if ((this.CheckVinsReturnUnregisteredCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckVinsReturnUnregisteredCompleted(this, new CheckVinsReturnUnregisteredCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckVinsReturnUnregisteredAsync(System.Collections.ObjectModel.ObservableCollection<string> vins) {
            this.CheckVinsReturnUnregisteredAsync(vins, null);
        }
        
        public void CheckVinsReturnUnregisteredAsync(System.Collections.ObjectModel.ObservableCollection<string> vins, object userState) {
            if ((this.onBeginCheckVinsReturnUnregisteredDelegate == null)) {
                this.onBeginCheckVinsReturnUnregisteredDelegate = new BeginOperationDelegate(this.OnBeginCheckVinsReturnUnregistered);
            }
            if ((this.onEndCheckVinsReturnUnregisteredDelegate == null)) {
                this.onEndCheckVinsReturnUnregisteredDelegate = new EndOperationDelegate(this.OnEndCheckVinsReturnUnregistered);
            }
            if ((this.onCheckVinsReturnUnregisteredCompletedDelegate == null)) {
                this.onCheckVinsReturnUnregisteredCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckVinsReturnUnregisteredCompleted);
            }
            base.InvokeAsync(this.onBeginCheckVinsReturnUnregisteredDelegate, new object[] {
                        vins}, this.onEndCheckVinsReturnUnregisteredDelegate, this.onCheckVinsReturnUnregisteredCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginRegisterVehicle(string vin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterVehicle(vin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndRegisterVehicle(System.IAsyncResult result) {
            base.Channel.EndRegisterVehicle(result);
        }
        
        private System.IAsyncResult OnBeginRegisterVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginRegisterVehicle(vin, callback, asyncState);
        }
        
        private object[] OnEndRegisterVehicle(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndRegisterVehicle(result);
            return null;
        }
        
        private void OnRegisterVehicleCompleted(object state) {
            if ((this.RegisterVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterVehicleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterVehicleAsync(string vin) {
            this.RegisterVehicleAsync(vin, null);
        }
        
        public void RegisterVehicleAsync(string vin, object userState) {
            if ((this.onBeginRegisterVehicleDelegate == null)) {
                this.onBeginRegisterVehicleDelegate = new BeginOperationDelegate(this.OnBeginRegisterVehicle);
            }
            if ((this.onEndRegisterVehicleDelegate == null)) {
                this.onEndRegisterVehicleDelegate = new EndOperationDelegate(this.OnEndRegisterVehicle);
            }
            if ((this.onRegisterVehicleCompletedDelegate == null)) {
                this.onRegisterVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterVehicleDelegate, new object[] {
                        vin}, this.onEndRegisterVehicleDelegate, this.onRegisterVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginRegisterVehicles(System.Collections.ObjectModel.ObservableCollection<string> vins, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterVehicles(vins, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndRegisterVehicles(System.IAsyncResult result) {
            base.Channel.EndRegisterVehicles(result);
        }
        
        private System.IAsyncResult OnBeginRegisterVehicles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> vins = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginRegisterVehicles(vins, callback, asyncState);
        }
        
        private object[] OnEndRegisterVehicles(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndRegisterVehicles(result);
            return null;
        }
        
        private void OnRegisterVehiclesCompleted(object state) {
            if ((this.RegisterVehiclesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterVehiclesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterVehiclesAsync(System.Collections.ObjectModel.ObservableCollection<string> vins) {
            this.RegisterVehiclesAsync(vins, null);
        }
        
        public void RegisterVehiclesAsync(System.Collections.ObjectModel.ObservableCollection<string> vins, object userState) {
            if ((this.onBeginRegisterVehiclesDelegate == null)) {
                this.onBeginRegisterVehiclesDelegate = new BeginOperationDelegate(this.OnBeginRegisterVehicles);
            }
            if ((this.onEndRegisterVehiclesDelegate == null)) {
                this.onEndRegisterVehiclesDelegate = new EndOperationDelegate(this.OnEndRegisterVehicles);
            }
            if ((this.onRegisterVehiclesCompletedDelegate == null)) {
                this.onRegisterVehiclesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterVehiclesCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterVehiclesDelegate, new object[] {
                        vins}, this.onEndRegisterVehiclesDelegate, this.onRegisterVehiclesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginAssociateVehicleWithUser(string vin, string userLogin, string userPasswordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAssociateVehicleWithUser(vin, userLogin, userPasswordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndAssociateVehicleWithUser(System.IAsyncResult result) {
            base.Channel.EndAssociateVehicleWithUser(result);
        }
        
        private System.IAsyncResult OnBeginAssociateVehicleWithUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            string userLogin = ((string)(inValues[1]));
            string userPasswordHash = ((string)(inValues[2]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginAssociateVehicleWithUser(vin, userLogin, userPasswordHash, callback, asyncState);
        }
        
        private object[] OnEndAssociateVehicleWithUser(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndAssociateVehicleWithUser(result);
            return null;
        }
        
        private void OnAssociateVehicleWithUserCompleted(object state) {
            if ((this.AssociateVehicleWithUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AssociateVehicleWithUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AssociateVehicleWithUserAsync(string vin, string userLogin, string userPasswordHash) {
            this.AssociateVehicleWithUserAsync(vin, userLogin, userPasswordHash, null);
        }
        
        public void AssociateVehicleWithUserAsync(string vin, string userLogin, string userPasswordHash, object userState) {
            if ((this.onBeginAssociateVehicleWithUserDelegate == null)) {
                this.onBeginAssociateVehicleWithUserDelegate = new BeginOperationDelegate(this.OnBeginAssociateVehicleWithUser);
            }
            if ((this.onEndAssociateVehicleWithUserDelegate == null)) {
                this.onEndAssociateVehicleWithUserDelegate = new EndOperationDelegate(this.OnEndAssociateVehicleWithUser);
            }
            if ((this.onAssociateVehicleWithUserCompletedDelegate == null)) {
                this.onAssociateVehicleWithUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAssociateVehicleWithUserCompleted);
            }
            base.InvokeAsync(this.onBeginAssociateVehicleWithUserDelegate, new object[] {
                        vin,
                        userLogin,
                        userPasswordHash}, this.onEndAssociateVehicleWithUserDelegate, this.onAssociateVehicleWithUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginAssociateVehiclesWithUser(System.Collections.ObjectModel.ObservableCollection<string> vin, string userLogin, string userPasswordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAssociateVehiclesWithUser(vin, userLogin, userPasswordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndAssociateVehiclesWithUser(System.IAsyncResult result) {
            base.Channel.EndAssociateVehiclesWithUser(result);
        }
        
        private System.IAsyncResult OnBeginAssociateVehiclesWithUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> vin = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            string userLogin = ((string)(inValues[1]));
            string userPasswordHash = ((string)(inValues[2]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginAssociateVehiclesWithUser(vin, userLogin, userPasswordHash, callback, asyncState);
        }
        
        private object[] OnEndAssociateVehiclesWithUser(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndAssociateVehiclesWithUser(result);
            return null;
        }
        
        private void OnAssociateVehiclesWithUserCompleted(object state) {
            if ((this.AssociateVehiclesWithUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AssociateVehiclesWithUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AssociateVehiclesWithUserAsync(System.Collections.ObjectModel.ObservableCollection<string> vin, string userLogin, string userPasswordHash) {
            this.AssociateVehiclesWithUserAsync(vin, userLogin, userPasswordHash, null);
        }
        
        public void AssociateVehiclesWithUserAsync(System.Collections.ObjectModel.ObservableCollection<string> vin, string userLogin, string userPasswordHash, object userState) {
            if ((this.onBeginAssociateVehiclesWithUserDelegate == null)) {
                this.onBeginAssociateVehiclesWithUserDelegate = new BeginOperationDelegate(this.OnBeginAssociateVehiclesWithUser);
            }
            if ((this.onEndAssociateVehiclesWithUserDelegate == null)) {
                this.onEndAssociateVehiclesWithUserDelegate = new EndOperationDelegate(this.OnEndAssociateVehiclesWithUser);
            }
            if ((this.onAssociateVehiclesWithUserCompletedDelegate == null)) {
                this.onAssociateVehiclesWithUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAssociateVehiclesWithUserCompleted);
            }
            base.InvokeAsync(this.onBeginAssociateVehiclesWithUserDelegate, new object[] {
                        vin,
                        userLogin,
                        userPasswordHash}, this.onEndAssociateVehiclesWithUserDelegate, this.onAssociateVehiclesWithUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetVehicleCharacteristics(string vin, int lang, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVehicleCharacteristics(vin, lang, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsDto VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetVehicleCharacteristics(System.IAsyncResult result) {
            return base.Channel.EndGetVehicleCharacteristics(result);
        }
        
        private System.IAsyncResult OnBeginGetVehicleCharacteristics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            int lang = ((int)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetVehicleCharacteristics(vin, lang, callback, asyncState);
        }
        
        private object[] OnEndGetVehicleCharacteristics(System.IAsyncResult result) {
            VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsDto retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetVehicleCharacteristics(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVehicleCharacteristicsCompleted(object state) {
            if ((this.GetVehicleCharacteristicsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVehicleCharacteristicsCompleted(this, new GetVehicleCharacteristicsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVehicleCharacteristicsAsync(string vin, int lang) {
            this.GetVehicleCharacteristicsAsync(vin, lang, null);
        }
        
        public void GetVehicleCharacteristicsAsync(string vin, int lang, object userState) {
            if ((this.onBeginGetVehicleCharacteristicsDelegate == null)) {
                this.onBeginGetVehicleCharacteristicsDelegate = new BeginOperationDelegate(this.OnBeginGetVehicleCharacteristics);
            }
            if ((this.onEndGetVehicleCharacteristicsDelegate == null)) {
                this.onEndGetVehicleCharacteristicsDelegate = new EndOperationDelegate(this.OnEndGetVehicleCharacteristics);
            }
            if ((this.onGetVehicleCharacteristicsCompletedDelegate == null)) {
                this.onGetVehicleCharacteristicsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVehicleCharacteristicsCompleted);
            }
            base.InvokeAsync(this.onBeginGetVehicleCharacteristicsDelegate, new object[] {
                        vin,
                        lang}, this.onEndGetVehicleCharacteristicsDelegate, this.onGetVehicleCharacteristicsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetVehiclesInformation(System.Collections.ObjectModel.ObservableCollection<long> vehicleIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVehiclesInformation(vehicleIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetVehiclesInformation(System.IAsyncResult result) {
            return base.Channel.EndGetVehiclesInformation(result);
        }
        
        private System.IAsyncResult OnBeginGetVehiclesInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<long> vehicleIds = ((System.Collections.ObjectModel.ObservableCollection<long>)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetVehiclesInformation(vehicleIds, callback, asyncState);
        }
        
        private object[] OnEndGetVehiclesInformation(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetVehiclesInformation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVehiclesInformationCompleted(object state) {
            if ((this.GetVehiclesInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVehiclesInformationCompleted(this, new GetVehiclesInformationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVehiclesInformationAsync(System.Collections.ObjectModel.ObservableCollection<long> vehicleIds) {
            this.GetVehiclesInformationAsync(vehicleIds, null);
        }
        
        public void GetVehiclesInformationAsync(System.Collections.ObjectModel.ObservableCollection<long> vehicleIds, object userState) {
            if ((this.onBeginGetVehiclesInformationDelegate == null)) {
                this.onBeginGetVehiclesInformationDelegate = new BeginOperationDelegate(this.OnBeginGetVehiclesInformation);
            }
            if ((this.onEndGetVehiclesInformationDelegate == null)) {
                this.onEndGetVehiclesInformationDelegate = new EndOperationDelegate(this.OnEndGetVehiclesInformation);
            }
            if ((this.onGetVehiclesInformationCompletedDelegate == null)) {
                this.onGetVehiclesInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVehiclesInformationCompleted);
            }
            base.InvokeAsync(this.onBeginGetVehiclesInformationDelegate, new object[] {
                        vehicleIds}, this.onEndGetVehiclesInformationDelegate, this.onGetVehiclesInformationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetVehiclesForUser(string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVehiclesForUser(login, passwordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetVehiclesForUser(System.IAsyncResult result) {
            return base.Channel.EndGetVehiclesForUser(result);
        }
        
        private System.IAsyncResult OnBeginGetVehiclesForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string passwordHash = ((string)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetVehiclesForUser(login, passwordHash, callback, asyncState);
        }
        
        private object[] OnEndGetVehiclesForUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetVehiclesForUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVehiclesForUserCompleted(object state) {
            if ((this.GetVehiclesForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVehiclesForUserCompleted(this, new GetVehiclesForUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVehiclesForUserAsync(string login, string passwordHash) {
            this.GetVehiclesForUserAsync(login, passwordHash, null);
        }
        
        public void GetVehiclesForUserAsync(string login, string passwordHash, object userState) {
            if ((this.onBeginGetVehiclesForUserDelegate == null)) {
                this.onBeginGetVehiclesForUserDelegate = new BeginOperationDelegate(this.OnBeginGetVehiclesForUser);
            }
            if ((this.onEndGetVehiclesForUserDelegate == null)) {
                this.onEndGetVehiclesForUserDelegate = new EndOperationDelegate(this.OnEndGetVehiclesForUser);
            }
            if ((this.onGetVehiclesForUserCompletedDelegate == null)) {
                this.onGetVehiclesForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVehiclesForUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetVehiclesForUserDelegate, new object[] {
                        login,
                        passwordHash}, this.onEndGetVehiclesForUserDelegate, this.onGetVehiclesForUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetDesktopMessages(string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDesktopMessages(login, passwordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetDesktopMessages(System.IAsyncResult result) {
            return base.Channel.EndGetDesktopMessages(result);
        }
        
        private System.IAsyncResult OnBeginGetDesktopMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string passwordHash = ((string)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetDesktopMessages(login, passwordHash, callback, asyncState);
        }
        
        private object[] OnEndGetDesktopMessages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetDesktopMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDesktopMessagesCompleted(object state) {
            if ((this.GetDesktopMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDesktopMessagesCompleted(this, new GetDesktopMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDesktopMessagesAsync(string login, string passwordHash) {
            this.GetDesktopMessagesAsync(login, passwordHash, null);
        }
        
        public void GetDesktopMessagesAsync(string login, string passwordHash, object userState) {
            if ((this.onBeginGetDesktopMessagesDelegate == null)) {
                this.onBeginGetDesktopMessagesDelegate = new BeginOperationDelegate(this.OnBeginGetDesktopMessages);
            }
            if ((this.onEndGetDesktopMessagesDelegate == null)) {
                this.onEndGetDesktopMessagesDelegate = new EndOperationDelegate(this.OnEndGetDesktopMessages);
            }
            if ((this.onGetDesktopMessagesCompletedDelegate == null)) {
                this.onGetDesktopMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDesktopMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetDesktopMessagesDelegate, new object[] {
                        login,
                        passwordHash}, this.onEndGetDesktopMessagesDelegate, this.onGetDesktopMessagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginUpdateVehicleMileage(string vin, int newMileage, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateVehicleMileage(vin, newMileage, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndUpdateVehicleMileage(System.IAsyncResult result) {
            base.Channel.EndUpdateVehicleMileage(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVehicleMileage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            int newMileage = ((int)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginUpdateVehicleMileage(vin, newMileage, callback, asyncState);
        }
        
        private object[] OnEndUpdateVehicleMileage(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndUpdateVehicleMileage(result);
            return null;
        }
        
        private void OnUpdateVehicleMileageCompleted(object state) {
            if ((this.UpdateVehicleMileageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVehicleMileageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVehicleMileageAsync(string vin, int newMileage) {
            this.UpdateVehicleMileageAsync(vin, newMileage, null);
        }
        
        public void UpdateVehicleMileageAsync(string vin, int newMileage, object userState) {
            if ((this.onBeginUpdateVehicleMileageDelegate == null)) {
                this.onBeginUpdateVehicleMileageDelegate = new BeginOperationDelegate(this.OnBeginUpdateVehicleMileage);
            }
            if ((this.onEndUpdateVehicleMileageDelegate == null)) {
                this.onEndUpdateVehicleMileageDelegate = new EndOperationDelegate(this.OnEndUpdateVehicleMileage);
            }
            if ((this.onUpdateVehicleMileageCompletedDelegate == null)) {
                this.onUpdateVehicleMileageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleMileageCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVehicleMileageDelegate, new object[] {
                        vin,
                        newMileage}, this.onEndUpdateVehicleMileageDelegate, this.onUpdateVehicleMileageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginSubmitAnalyticStatistics(VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsDto statistics, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitAnalyticStatistics(statistics, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndSubmitAnalyticStatistics(System.IAsyncResult result) {
            base.Channel.EndSubmitAnalyticStatistics(result);
        }
        
        private System.IAsyncResult OnBeginSubmitAnalyticStatistics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsDto statistics = ((VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsDto)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginSubmitAnalyticStatistics(statistics, callback, asyncState);
        }
        
        private object[] OnEndSubmitAnalyticStatistics(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndSubmitAnalyticStatistics(result);
            return null;
        }
        
        private void OnSubmitAnalyticStatisticsCompleted(object state) {
            if ((this.SubmitAnalyticStatisticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitAnalyticStatisticsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitAnalyticStatisticsAsync(VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsDto statistics) {
            this.SubmitAnalyticStatisticsAsync(statistics, null);
        }
        
        public void SubmitAnalyticStatisticsAsync(VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsDto statistics, object userState) {
            if ((this.onBeginSubmitAnalyticStatisticsDelegate == null)) {
                this.onBeginSubmitAnalyticStatisticsDelegate = new BeginOperationDelegate(this.OnBeginSubmitAnalyticStatistics);
            }
            if ((this.onEndSubmitAnalyticStatisticsDelegate == null)) {
                this.onEndSubmitAnalyticStatisticsDelegate = new EndOperationDelegate(this.OnEndSubmitAnalyticStatistics);
            }
            if ((this.onSubmitAnalyticStatisticsCompletedDelegate == null)) {
                this.onSubmitAnalyticStatisticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitAnalyticStatisticsCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitAnalyticStatisticsDelegate, new object[] {
                        statistics}, this.onEndSubmitAnalyticStatisticsDelegate, this.onSubmitAnalyticStatisticsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAnalyticRuleSettings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalyticRuleSettings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAnalyticRuleSettings(System.IAsyncResult result) {
            return base.Channel.EndGetAnalyticRuleSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalyticRuleSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAnalyticRuleSettings(callback, asyncState);
        }
        
        private object[] OnEndGetAnalyticRuleSettings(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAnalyticRuleSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalyticRuleSettingsCompleted(object state) {
            if ((this.GetAnalyticRuleSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalyticRuleSettingsCompleted(this, new GetAnalyticRuleSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalyticRuleSettingsAsync() {
            this.GetAnalyticRuleSettingsAsync(null);
        }
        
        public void GetAnalyticRuleSettingsAsync(object userState) {
            if ((this.onBeginGetAnalyticRuleSettingsDelegate == null)) {
                this.onBeginGetAnalyticRuleSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetAnalyticRuleSettings);
            }
            if ((this.onEndGetAnalyticRuleSettingsDelegate == null)) {
                this.onEndGetAnalyticRuleSettingsDelegate = new EndOperationDelegate(this.OnEndGetAnalyticRuleSettings);
            }
            if ((this.onGetAnalyticRuleSettingsCompletedDelegate == null)) {
                this.onGetAnalyticRuleSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalyticRuleSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalyticRuleSettingsDelegate, null, this.onEndGetAnalyticRuleSettingsDelegate, this.onGetAnalyticRuleSettingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAnalyticRuleSettingsByType(int type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalyticRuleSettingsByType(type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAnalyticRuleSettingsByType(System.IAsyncResult result) {
            return base.Channel.EndGetAnalyticRuleSettingsByType(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalyticRuleSettingsByType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int type = ((int)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAnalyticRuleSettingsByType(type, callback, asyncState);
        }
        
        private object[] OnEndGetAnalyticRuleSettingsByType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAnalyticRuleSettingsByType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalyticRuleSettingsByTypeCompleted(object state) {
            if ((this.GetAnalyticRuleSettingsByTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalyticRuleSettingsByTypeCompleted(this, new GetAnalyticRuleSettingsByTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalyticRuleSettingsByTypeAsync(int type) {
            this.GetAnalyticRuleSettingsByTypeAsync(type, null);
        }
        
        public void GetAnalyticRuleSettingsByTypeAsync(int type, object userState) {
            if ((this.onBeginGetAnalyticRuleSettingsByTypeDelegate == null)) {
                this.onBeginGetAnalyticRuleSettingsByTypeDelegate = new BeginOperationDelegate(this.OnBeginGetAnalyticRuleSettingsByType);
            }
            if ((this.onEndGetAnalyticRuleSettingsByTypeDelegate == null)) {
                this.onEndGetAnalyticRuleSettingsByTypeDelegate = new EndOperationDelegate(this.OnEndGetAnalyticRuleSettingsByType);
            }
            if ((this.onGetAnalyticRuleSettingsByTypeCompletedDelegate == null)) {
                this.onGetAnalyticRuleSettingsByTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalyticRuleSettingsByTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalyticRuleSettingsByTypeDelegate, new object[] {
                        type}, this.onEndGetAnalyticRuleSettingsByTypeDelegate, this.onGetAnalyticRuleSettingsByTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAnalyticRuleSettingsByTypeAndEngineFamily(int type, int engineFamilyType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalyticRuleSettingsByTypeAndEngineFamily(type, engineFamilyType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAnalyticRuleSettingsByTypeAndEngineFamily(System.IAsyncResult result) {
            return base.Channel.EndGetAnalyticRuleSettingsByTypeAndEngineFamily(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalyticRuleSettingsByTypeAndEngineFamily(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int type = ((int)(inValues[0]));
            int engineFamilyType = ((int)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAnalyticRuleSettingsByTypeAndEngineFamily(type, engineFamilyType, callback, asyncState);
        }
        
        private object[] OnEndGetAnalyticRuleSettingsByTypeAndEngineFamily(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAnalyticRuleSettingsByTypeAndEngineFamily(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalyticRuleSettingsByTypeAndEngineFamilyCompleted(object state) {
            if ((this.GetAnalyticRuleSettingsByTypeAndEngineFamilyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalyticRuleSettingsByTypeAndEngineFamilyCompleted(this, new GetAnalyticRuleSettingsByTypeAndEngineFamilyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalyticRuleSettingsByTypeAndEngineFamilyAsync(int type, int engineFamilyType) {
            this.GetAnalyticRuleSettingsByTypeAndEngineFamilyAsync(type, engineFamilyType, null);
        }
        
        public void GetAnalyticRuleSettingsByTypeAndEngineFamilyAsync(int type, int engineFamilyType, object userState) {
            if ((this.onBeginGetAnalyticRuleSettingsByTypeAndEngineFamilyDelegate == null)) {
                this.onBeginGetAnalyticRuleSettingsByTypeAndEngineFamilyDelegate = new BeginOperationDelegate(this.OnBeginGetAnalyticRuleSettingsByTypeAndEngineFamily);
            }
            if ((this.onEndGetAnalyticRuleSettingsByTypeAndEngineFamilyDelegate == null)) {
                this.onEndGetAnalyticRuleSettingsByTypeAndEngineFamilyDelegate = new EndOperationDelegate(this.OnEndGetAnalyticRuleSettingsByTypeAndEngineFamily);
            }
            if ((this.onGetAnalyticRuleSettingsByTypeAndEngineFamilyCompletedDelegate == null)) {
                this.onGetAnalyticRuleSettingsByTypeAndEngineFamilyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalyticRuleSettingsByTypeAndEngineFamilyCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalyticRuleSettingsByTypeAndEngineFamilyDelegate, new object[] {
                        type,
                        engineFamilyType}, this.onEndGetAnalyticRuleSettingsByTypeAndEngineFamilyDelegate, this.onGetAnalyticRuleSettingsByTypeAndEngineFamilyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(int type, int engineFamilyType, int engineType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(type, engineFamilyType, engineType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(System.IAsyncResult result) {
            return base.Channel.EndGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int type = ((int)(inValues[0]));
            int engineFamilyType = ((int)(inValues[1]));
            int engineType = ((int)(inValues[2]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(type, engineFamilyType, engineType, callback, asyncState);
        }
        
        private object[] OnEndGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompleted(object state) {
            if ((this.GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompleted(this, new GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeAsync(int type, int engineFamilyType, int engineType) {
            this.GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeAsync(type, engineFamilyType, engineType, null);
        }
        
        public void GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeAsync(int type, int engineFamilyType, int engineType, object userState) {
            if ((this.onBeginGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeDelegate == null)) {
                this.onBeginGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeDelegate = new BeginOperationDelegate(this.OnBeginGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType);
            }
            if ((this.onEndGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeDelegate == null)) {
                this.onEndGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeDelegate = new EndOperationDelegate(this.OnEndGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType);
            }
            if ((this.onGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompletedDelegate == null)) {
                this.onGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeDelegate, new object[] {
                        type,
                        engineFamilyType,
                        engineType}, this.onEndGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeDelegate, this.onGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAnalyticRuleSettingsByEngineFamilyAndEngineType(int engineFamilyType, int engineType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalyticRuleSettingsByEngineFamilyAndEngineType(engineFamilyType, engineType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAnalyticRuleSettingsByEngineFamilyAndEngineType(System.IAsyncResult result) {
            return base.Channel.EndGetAnalyticRuleSettingsByEngineFamilyAndEngineType(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalyticRuleSettingsByEngineFamilyAndEngineType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int engineFamilyType = ((int)(inValues[0]));
            int engineType = ((int)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAnalyticRuleSettingsByEngineFamilyAndEngineType(engineFamilyType, engineType, callback, asyncState);
        }
        
        private object[] OnEndGetAnalyticRuleSettingsByEngineFamilyAndEngineType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAnalyticRuleSettingsByEngineFamilyAndEngineType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompleted(object state) {
            if ((this.GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompleted(this, new GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeAsync(int engineFamilyType, int engineType) {
            this.GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeAsync(engineFamilyType, engineType, null);
        }
        
        public void GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeAsync(int engineFamilyType, int engineType, object userState) {
            if ((this.onBeginGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeDelegate == null)) {
                this.onBeginGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeDelegate = new BeginOperationDelegate(this.OnBeginGetAnalyticRuleSettingsByEngineFamilyAndEngineType);
            }
            if ((this.onEndGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeDelegate == null)) {
                this.onEndGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeDelegate = new EndOperationDelegate(this.OnEndGetAnalyticRuleSettingsByEngineFamilyAndEngineType);
            }
            if ((this.onGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompletedDelegate == null)) {
                this.onGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeDelegate, new object[] {
                        engineFamilyType,
                        engineType}, this.onEndGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeDelegate, this.onGetAnalyticRuleSettingsByEngineFamilyAndEngineTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAnalyticRuleSettingsByEngineFamily(int engineFamilyType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalyticRuleSettingsByEngineFamily(engineFamilyType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAnalyticRuleSettingsByEngineFamily(System.IAsyncResult result) {
            return base.Channel.EndGetAnalyticRuleSettingsByEngineFamily(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalyticRuleSettingsByEngineFamily(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int engineFamilyType = ((int)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAnalyticRuleSettingsByEngineFamily(engineFamilyType, callback, asyncState);
        }
        
        private object[] OnEndGetAnalyticRuleSettingsByEngineFamily(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAnalyticRuleSettingsByEngineFamily(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalyticRuleSettingsByEngineFamilyCompleted(object state) {
            if ((this.GetAnalyticRuleSettingsByEngineFamilyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalyticRuleSettingsByEngineFamilyCompleted(this, new GetAnalyticRuleSettingsByEngineFamilyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalyticRuleSettingsByEngineFamilyAsync(int engineFamilyType) {
            this.GetAnalyticRuleSettingsByEngineFamilyAsync(engineFamilyType, null);
        }
        
        public void GetAnalyticRuleSettingsByEngineFamilyAsync(int engineFamilyType, object userState) {
            if ((this.onBeginGetAnalyticRuleSettingsByEngineFamilyDelegate == null)) {
                this.onBeginGetAnalyticRuleSettingsByEngineFamilyDelegate = new BeginOperationDelegate(this.OnBeginGetAnalyticRuleSettingsByEngineFamily);
            }
            if ((this.onEndGetAnalyticRuleSettingsByEngineFamilyDelegate == null)) {
                this.onEndGetAnalyticRuleSettingsByEngineFamilyDelegate = new EndOperationDelegate(this.OnEndGetAnalyticRuleSettingsByEngineFamily);
            }
            if ((this.onGetAnalyticRuleSettingsByEngineFamilyCompletedDelegate == null)) {
                this.onGetAnalyticRuleSettingsByEngineFamilyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalyticRuleSettingsByEngineFamilyCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalyticRuleSettingsByEngineFamilyDelegate, new object[] {
                        engineFamilyType}, this.onEndGetAnalyticRuleSettingsByEngineFamilyDelegate, this.onGetAnalyticRuleSettingsByEngineFamilyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAnalyticRuleSettingsDefaultByTypes(System.Collections.ObjectModel.ObservableCollection<int> types, int engineFamilyType, int engineType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalyticRuleSettingsDefaultByTypes(types, engineFamilyType, engineType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAnalyticRuleSettingsDefaultByTypes(System.IAsyncResult result) {
            return base.Channel.EndGetAnalyticRuleSettingsDefaultByTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalyticRuleSettingsDefaultByTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> types = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            int engineFamilyType = ((int)(inValues[1]));
            int engineType = ((int)(inValues[2]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAnalyticRuleSettingsDefaultByTypes(types, engineFamilyType, engineType, callback, asyncState);
        }
        
        private object[] OnEndGetAnalyticRuleSettingsDefaultByTypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAnalyticRuleSettingsDefaultByTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalyticRuleSettingsDefaultByTypesCompleted(object state) {
            if ((this.GetAnalyticRuleSettingsDefaultByTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalyticRuleSettingsDefaultByTypesCompleted(this, new GetAnalyticRuleSettingsDefaultByTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalyticRuleSettingsDefaultByTypesAsync(System.Collections.ObjectModel.ObservableCollection<int> types, int engineFamilyType, int engineType) {
            this.GetAnalyticRuleSettingsDefaultByTypesAsync(types, engineFamilyType, engineType, null);
        }
        
        public void GetAnalyticRuleSettingsDefaultByTypesAsync(System.Collections.ObjectModel.ObservableCollection<int> types, int engineFamilyType, int engineType, object userState) {
            if ((this.onBeginGetAnalyticRuleSettingsDefaultByTypesDelegate == null)) {
                this.onBeginGetAnalyticRuleSettingsDefaultByTypesDelegate = new BeginOperationDelegate(this.OnBeginGetAnalyticRuleSettingsDefaultByTypes);
            }
            if ((this.onEndGetAnalyticRuleSettingsDefaultByTypesDelegate == null)) {
                this.onEndGetAnalyticRuleSettingsDefaultByTypesDelegate = new EndOperationDelegate(this.OnEndGetAnalyticRuleSettingsDefaultByTypes);
            }
            if ((this.onGetAnalyticRuleSettingsDefaultByTypesCompletedDelegate == null)) {
                this.onGetAnalyticRuleSettingsDefaultByTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalyticRuleSettingsDefaultByTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalyticRuleSettingsDefaultByTypesDelegate, new object[] {
                        types,
                        engineFamilyType,
                        engineType}, this.onEndGetAnalyticRuleSettingsDefaultByTypesDelegate, this.onGetAnalyticRuleSettingsDefaultByTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAnalyticRuleSettingsBySignature(System.Collections.ObjectModel.ObservableCollection<int> signatureRuleTypes, System.Collections.ObjectModel.ObservableCollection<int> signatureEngineTypes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalyticRuleSettingsBySignature(signatureRuleTypes, signatureEngineTypes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAnalyticRuleSettingsBySignature(System.IAsyncResult result) {
            return base.Channel.EndGetAnalyticRuleSettingsBySignature(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalyticRuleSettingsBySignature(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> signatureRuleTypes = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<int> signatureEngineTypes = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAnalyticRuleSettingsBySignature(signatureRuleTypes, signatureEngineTypes, callback, asyncState);
        }
        
        private object[] OnEndGetAnalyticRuleSettingsBySignature(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAnalyticRuleSettingsBySignature(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalyticRuleSettingsBySignatureCompleted(object state) {
            if ((this.GetAnalyticRuleSettingsBySignatureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalyticRuleSettingsBySignatureCompleted(this, new GetAnalyticRuleSettingsBySignatureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalyticRuleSettingsBySignatureAsync(System.Collections.ObjectModel.ObservableCollection<int> signatureRuleTypes, System.Collections.ObjectModel.ObservableCollection<int> signatureEngineTypes) {
            this.GetAnalyticRuleSettingsBySignatureAsync(signatureRuleTypes, signatureEngineTypes, null);
        }
        
        public void GetAnalyticRuleSettingsBySignatureAsync(System.Collections.ObjectModel.ObservableCollection<int> signatureRuleTypes, System.Collections.ObjectModel.ObservableCollection<int> signatureEngineTypes, object userState) {
            if ((this.onBeginGetAnalyticRuleSettingsBySignatureDelegate == null)) {
                this.onBeginGetAnalyticRuleSettingsBySignatureDelegate = new BeginOperationDelegate(this.OnBeginGetAnalyticRuleSettingsBySignature);
            }
            if ((this.onEndGetAnalyticRuleSettingsBySignatureDelegate == null)) {
                this.onEndGetAnalyticRuleSettingsBySignatureDelegate = new EndOperationDelegate(this.OnEndGetAnalyticRuleSettingsBySignature);
            }
            if ((this.onGetAnalyticRuleSettingsBySignatureCompletedDelegate == null)) {
                this.onGetAnalyticRuleSettingsBySignatureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalyticRuleSettingsBySignatureCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalyticRuleSettingsBySignatureDelegate, new object[] {
                        signatureRuleTypes,
                        signatureEngineTypes}, this.onEndGetAnalyticRuleSettingsBySignatureDelegate, this.onGetAnalyticRuleSettingsBySignatureCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(int ruleType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(ruleType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(System.IAsyncResult result) {
            return base.Channel.EndGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ruleType = ((int)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(ruleType, callback, asyncState);
        }
        
        private object[] OnEndGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompleted(object state) {
            if ((this.GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompleted(this, new GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullAsync(int ruleType) {
            this.GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullAsync(ruleType, null);
        }
        
        public void GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullAsync(int ruleType, object userState) {
            if ((this.onBeginGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullDelegate == null)) {
                this.onBeginGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullDelegate = new BeginOperationDelegate(this.OnBeginGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull);
            }
            if ((this.onEndGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullDelegate == null)) {
                this.onEndGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullDelegate = new EndOperationDelegate(this.OnEndGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull);
            }
            if ((this.onGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompletedDelegate == null)) {
                this.onGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullDelegate, new object[] {
                        ruleType}, this.onEndGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullDelegate, this.onGetAnalyticRuleSettingsWhereFamilyAndEngineIsNullCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAnalyticRuleSettingsWhereEngineIsNull(int ruleType, int engineFamilyType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalyticRuleSettingsWhereEngineIsNull(ruleType, engineFamilyType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAnalyticRuleSettingsWhereEngineIsNull(System.IAsyncResult result) {
            return base.Channel.EndGetAnalyticRuleSettingsWhereEngineIsNull(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalyticRuleSettingsWhereEngineIsNull(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ruleType = ((int)(inValues[0]));
            int engineFamilyType = ((int)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAnalyticRuleSettingsWhereEngineIsNull(ruleType, engineFamilyType, callback, asyncState);
        }
        
        private object[] OnEndGetAnalyticRuleSettingsWhereEngineIsNull(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAnalyticRuleSettingsWhereEngineIsNull(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalyticRuleSettingsWhereEngineIsNullCompleted(object state) {
            if ((this.GetAnalyticRuleSettingsWhereEngineIsNullCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalyticRuleSettingsWhereEngineIsNullCompleted(this, new GetAnalyticRuleSettingsWhereEngineIsNullCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalyticRuleSettingsWhereEngineIsNullAsync(int ruleType, int engineFamilyType) {
            this.GetAnalyticRuleSettingsWhereEngineIsNullAsync(ruleType, engineFamilyType, null);
        }
        
        public void GetAnalyticRuleSettingsWhereEngineIsNullAsync(int ruleType, int engineFamilyType, object userState) {
            if ((this.onBeginGetAnalyticRuleSettingsWhereEngineIsNullDelegate == null)) {
                this.onBeginGetAnalyticRuleSettingsWhereEngineIsNullDelegate = new BeginOperationDelegate(this.OnBeginGetAnalyticRuleSettingsWhereEngineIsNull);
            }
            if ((this.onEndGetAnalyticRuleSettingsWhereEngineIsNullDelegate == null)) {
                this.onEndGetAnalyticRuleSettingsWhereEngineIsNullDelegate = new EndOperationDelegate(this.OnEndGetAnalyticRuleSettingsWhereEngineIsNull);
            }
            if ((this.onGetAnalyticRuleSettingsWhereEngineIsNullCompletedDelegate == null)) {
                this.onGetAnalyticRuleSettingsWhereEngineIsNullCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalyticRuleSettingsWhereEngineIsNullCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalyticRuleSettingsWhereEngineIsNullDelegate, new object[] {
                        ruleType,
                        engineFamilyType}, this.onEndGetAnalyticRuleSettingsWhereEngineIsNullDelegate, this.onGetAnalyticRuleSettingsWhereEngineIsNullCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAnalyticRuleSettingsByIds(System.Collections.ObjectModel.ObservableCollection<long> ids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalyticRuleSettingsByIds(ids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAnalyticRuleSettingsByIds(System.IAsyncResult result) {
            return base.Channel.EndGetAnalyticRuleSettingsByIds(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalyticRuleSettingsByIds(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<long> ids = ((System.Collections.ObjectModel.ObservableCollection<long>)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAnalyticRuleSettingsByIds(ids, callback, asyncState);
        }
        
        private object[] OnEndGetAnalyticRuleSettingsByIds(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAnalyticRuleSettingsByIds(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalyticRuleSettingsByIdsCompleted(object state) {
            if ((this.GetAnalyticRuleSettingsByIdsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalyticRuleSettingsByIdsCompleted(this, new GetAnalyticRuleSettingsByIdsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalyticRuleSettingsByIdsAsync(System.Collections.ObjectModel.ObservableCollection<long> ids) {
            this.GetAnalyticRuleSettingsByIdsAsync(ids, null);
        }
        
        public void GetAnalyticRuleSettingsByIdsAsync(System.Collections.ObjectModel.ObservableCollection<long> ids, object userState) {
            if ((this.onBeginGetAnalyticRuleSettingsByIdsDelegate == null)) {
                this.onBeginGetAnalyticRuleSettingsByIdsDelegate = new BeginOperationDelegate(this.OnBeginGetAnalyticRuleSettingsByIds);
            }
            if ((this.onEndGetAnalyticRuleSettingsByIdsDelegate == null)) {
                this.onEndGetAnalyticRuleSettingsByIdsDelegate = new EndOperationDelegate(this.OnEndGetAnalyticRuleSettingsByIds);
            }
            if ((this.onGetAnalyticRuleSettingsByIdsCompletedDelegate == null)) {
                this.onGetAnalyticRuleSettingsByIdsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalyticRuleSettingsByIdsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalyticRuleSettingsByIdsDelegate, new object[] {
                        ids}, this.onEndGetAnalyticRuleSettingsByIdsDelegate, this.onGetAnalyticRuleSettingsByIdsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginSubmitAnalyticRuleSettings(VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto settings, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitAnalyticRuleSettings(settings, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndSubmitAnalyticRuleSettings(System.IAsyncResult result) {
            base.Channel.EndSubmitAnalyticRuleSettings(result);
        }
        
        private System.IAsyncResult OnBeginSubmitAnalyticRuleSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto settings = ((VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginSubmitAnalyticRuleSettings(settings, callback, asyncState);
        }
        
        private object[] OnEndSubmitAnalyticRuleSettings(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndSubmitAnalyticRuleSettings(result);
            return null;
        }
        
        private void OnSubmitAnalyticRuleSettingsCompleted(object state) {
            if ((this.SubmitAnalyticRuleSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitAnalyticRuleSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitAnalyticRuleSettingsAsync(VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto settings) {
            this.SubmitAnalyticRuleSettingsAsync(settings, null);
        }
        
        public void SubmitAnalyticRuleSettingsAsync(VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto settings, object userState) {
            if ((this.onBeginSubmitAnalyticRuleSettingsDelegate == null)) {
                this.onBeginSubmitAnalyticRuleSettingsDelegate = new BeginOperationDelegate(this.OnBeginSubmitAnalyticRuleSettings);
            }
            if ((this.onEndSubmitAnalyticRuleSettingsDelegate == null)) {
                this.onEndSubmitAnalyticRuleSettingsDelegate = new EndOperationDelegate(this.OnEndSubmitAnalyticRuleSettings);
            }
            if ((this.onSubmitAnalyticRuleSettingsCompletedDelegate == null)) {
                this.onSubmitAnalyticRuleSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitAnalyticRuleSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitAnalyticRuleSettingsDelegate, new object[] {
                        settings}, this.onEndSubmitAnalyticRuleSettingsDelegate, this.onSubmitAnalyticRuleSettingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginAggregateStatistics(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAggregateStatistics(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndAggregateStatistics(System.IAsyncResult result) {
            base.Channel.EndAggregateStatistics(result);
        }
        
        private System.IAsyncResult OnBeginAggregateStatistics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginAggregateStatistics(callback, asyncState);
        }
        
        private object[] OnEndAggregateStatistics(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndAggregateStatistics(result);
            return null;
        }
        
        private void OnAggregateStatisticsCompleted(object state) {
            if ((this.AggregateStatisticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AggregateStatisticsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AggregateStatisticsAsync() {
            this.AggregateStatisticsAsync(null);
        }
        
        public void AggregateStatisticsAsync(object userState) {
            if ((this.onBeginAggregateStatisticsDelegate == null)) {
                this.onBeginAggregateStatisticsDelegate = new BeginOperationDelegate(this.OnBeginAggregateStatistics);
            }
            if ((this.onEndAggregateStatisticsDelegate == null)) {
                this.onEndAggregateStatisticsDelegate = new EndOperationDelegate(this.OnEndAggregateStatistics);
            }
            if ((this.onAggregateStatisticsCompletedDelegate == null)) {
                this.onAggregateStatisticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAggregateStatisticsCompleted);
            }
            base.InvokeAsync(this.onBeginAggregateStatisticsDelegate, null, this.onEndAggregateStatisticsDelegate, this.onAggregateStatisticsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAvailableAnalyticStatisticsTypesForVehicle(string vin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAvailableAnalyticStatisticsTypesForVehicle(vin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<int> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAvailableAnalyticStatisticsTypesForVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetAvailableAnalyticStatisticsTypesForVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetAvailableAnalyticStatisticsTypesForVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAvailableAnalyticStatisticsTypesForVehicle(vin, callback, asyncState);
        }
        
        private object[] OnEndGetAvailableAnalyticStatisticsTypesForVehicle(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<int> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAvailableAnalyticStatisticsTypesForVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAvailableAnalyticStatisticsTypesForVehicleCompleted(object state) {
            if ((this.GetAvailableAnalyticStatisticsTypesForVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAvailableAnalyticStatisticsTypesForVehicleCompleted(this, new GetAvailableAnalyticStatisticsTypesForVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAvailableAnalyticStatisticsTypesForVehicleAsync(string vin) {
            this.GetAvailableAnalyticStatisticsTypesForVehicleAsync(vin, null);
        }
        
        public void GetAvailableAnalyticStatisticsTypesForVehicleAsync(string vin, object userState) {
            if ((this.onBeginGetAvailableAnalyticStatisticsTypesForVehicleDelegate == null)) {
                this.onBeginGetAvailableAnalyticStatisticsTypesForVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetAvailableAnalyticStatisticsTypesForVehicle);
            }
            if ((this.onEndGetAvailableAnalyticStatisticsTypesForVehicleDelegate == null)) {
                this.onEndGetAvailableAnalyticStatisticsTypesForVehicleDelegate = new EndOperationDelegate(this.OnEndGetAvailableAnalyticStatisticsTypesForVehicle);
            }
            if ((this.onGetAvailableAnalyticStatisticsTypesForVehicleCompletedDelegate == null)) {
                this.onGetAvailableAnalyticStatisticsTypesForVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvailableAnalyticStatisticsTypesForVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetAvailableAnalyticStatisticsTypesForVehicleDelegate, new object[] {
                        vin}, this.onEndGetAvailableAnalyticStatisticsTypesForVehicleDelegate, this.onGetAvailableAnalyticStatisticsTypesForVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAnalyticStatisticsPerVehicle(string vin, int analyticRuleType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalyticStatisticsPerVehicle(vin, analyticRuleType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsValueDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAnalyticStatisticsPerVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetAnalyticStatisticsPerVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalyticStatisticsPerVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            int analyticRuleType = ((int)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAnalyticStatisticsPerVehicle(vin, analyticRuleType, callback, asyncState);
        }
        
        private object[] OnEndGetAnalyticStatisticsPerVehicle(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsValueDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAnalyticStatisticsPerVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalyticStatisticsPerVehicleCompleted(object state) {
            if ((this.GetAnalyticStatisticsPerVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalyticStatisticsPerVehicleCompleted(this, new GetAnalyticStatisticsPerVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalyticStatisticsPerVehicleAsync(string vin, int analyticRuleType) {
            this.GetAnalyticStatisticsPerVehicleAsync(vin, analyticRuleType, null);
        }
        
        public void GetAnalyticStatisticsPerVehicleAsync(string vin, int analyticRuleType, object userState) {
            if ((this.onBeginGetAnalyticStatisticsPerVehicleDelegate == null)) {
                this.onBeginGetAnalyticStatisticsPerVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetAnalyticStatisticsPerVehicle);
            }
            if ((this.onEndGetAnalyticStatisticsPerVehicleDelegate == null)) {
                this.onEndGetAnalyticStatisticsPerVehicleDelegate = new EndOperationDelegate(this.OnEndGetAnalyticStatisticsPerVehicle);
            }
            if ((this.onGetAnalyticStatisticsPerVehicleCompletedDelegate == null)) {
                this.onGetAnalyticStatisticsPerVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalyticStatisticsPerVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalyticStatisticsPerVehicleDelegate, new object[] {
                        vin,
                        analyticRuleType}, this.onEndGetAnalyticStatisticsPerVehicleDelegate, this.onGetAnalyticStatisticsPerVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetSettingsForVehicle(string vin, int ruleType, string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSettingsForVehicle(vin, ruleType, login, passwordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetSettingsForVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetSettingsForVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetSettingsForVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            int ruleType = ((int)(inValues[1]));
            string login = ((string)(inValues[2]));
            string passwordHash = ((string)(inValues[3]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetSettingsForVehicle(vin, ruleType, login, passwordHash, callback, asyncState);
        }
        
        private object[] OnEndGetSettingsForVehicle(System.IAsyncResult result) {
            VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetSettingsForVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSettingsForVehicleCompleted(object state) {
            if ((this.GetSettingsForVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSettingsForVehicleCompleted(this, new GetSettingsForVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSettingsForVehicleAsync(string vin, int ruleType, string login, string passwordHash) {
            this.GetSettingsForVehicleAsync(vin, ruleType, login, passwordHash, null);
        }
        
        public void GetSettingsForVehicleAsync(string vin, int ruleType, string login, string passwordHash, object userState) {
            if ((this.onBeginGetSettingsForVehicleDelegate == null)) {
                this.onBeginGetSettingsForVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetSettingsForVehicle);
            }
            if ((this.onEndGetSettingsForVehicleDelegate == null)) {
                this.onEndGetSettingsForVehicleDelegate = new EndOperationDelegate(this.OnEndGetSettingsForVehicle);
            }
            if ((this.onGetSettingsForVehicleCompletedDelegate == null)) {
                this.onGetSettingsForVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSettingsForVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetSettingsForVehicleDelegate, new object[] {
                        vin,
                        ruleType,
                        login,
                        passwordHash}, this.onEndGetSettingsForVehicleDelegate, this.onGetSettingsForVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetAllSettingsForVehicle(string vin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllSettingsForVehicle(vin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetAllSettingsForVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetAllSettingsForVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetAllSettingsForVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetAllSettingsForVehicle(vin, callback, asyncState);
        }
        
        private object[] OnEndGetAllSettingsForVehicle(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetAllSettingsForVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllSettingsForVehicleCompleted(object state) {
            if ((this.GetAllSettingsForVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllSettingsForVehicleCompleted(this, new GetAllSettingsForVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllSettingsForVehicleAsync(string vin) {
            this.GetAllSettingsForVehicleAsync(vin, null);
        }
        
        public void GetAllSettingsForVehicleAsync(string vin, object userState) {
            if ((this.onBeginGetAllSettingsForVehicleDelegate == null)) {
                this.onBeginGetAllSettingsForVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetAllSettingsForVehicle);
            }
            if ((this.onEndGetAllSettingsForVehicleDelegate == null)) {
                this.onEndGetAllSettingsForVehicleDelegate = new EndOperationDelegate(this.OnEndGetAllSettingsForVehicle);
            }
            if ((this.onGetAllSettingsForVehicleCompletedDelegate == null)) {
                this.onGetAllSettingsForVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllSettingsForVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllSettingsForVehicleDelegate, new object[] {
                        vin}, this.onEndGetAllSettingsForVehicleDelegate, this.onGetAllSettingsForVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetDatasetsForVehicle(string vin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDatasetsForVehicle(vin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetDatasetsForVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetDatasetsForVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetDatasetsForVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetDatasetsForVehicle(vin, callback, asyncState);
        }
        
        private object[] OnEndGetDatasetsForVehicle(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetDatasetsForVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDatasetsForVehicleCompleted(object state) {
            if ((this.GetDatasetsForVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDatasetsForVehicleCompleted(this, new GetDatasetsForVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDatasetsForVehicleAsync(string vin) {
            this.GetDatasetsForVehicleAsync(vin, null);
        }
        
        public void GetDatasetsForVehicleAsync(string vin, object userState) {
            if ((this.onBeginGetDatasetsForVehicleDelegate == null)) {
                this.onBeginGetDatasetsForVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetDatasetsForVehicle);
            }
            if ((this.onEndGetDatasetsForVehicleDelegate == null)) {
                this.onEndGetDatasetsForVehicleDelegate = new EndOperationDelegate(this.OnEndGetDatasetsForVehicle);
            }
            if ((this.onGetDatasetsForVehicleCompletedDelegate == null)) {
                this.onGetDatasetsForVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDatasetsForVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetDatasetsForVehicleDelegate, new object[] {
                        vin}, this.onEndGetDatasetsForVehicleDelegate, this.onGetDatasetsForVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetDatasetIdsForVehicle(string vin, string userLogin, string userPasswordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDatasetIdsForVehicle(vin, userLogin, userPasswordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<long> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetDatasetIdsForVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetDatasetIdsForVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetDatasetIdsForVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            string userLogin = ((string)(inValues[1]));
            string userPasswordHash = ((string)(inValues[2]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetDatasetIdsForVehicle(vin, userLogin, userPasswordHash, callback, asyncState);
        }
        
        private object[] OnEndGetDatasetIdsForVehicle(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<long> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetDatasetIdsForVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDatasetIdsForVehicleCompleted(object state) {
            if ((this.GetDatasetIdsForVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDatasetIdsForVehicleCompleted(this, new GetDatasetIdsForVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDatasetIdsForVehicleAsync(string vin, string userLogin, string userPasswordHash) {
            this.GetDatasetIdsForVehicleAsync(vin, userLogin, userPasswordHash, null);
        }
        
        public void GetDatasetIdsForVehicleAsync(string vin, string userLogin, string userPasswordHash, object userState) {
            if ((this.onBeginGetDatasetIdsForVehicleDelegate == null)) {
                this.onBeginGetDatasetIdsForVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetDatasetIdsForVehicle);
            }
            if ((this.onEndGetDatasetIdsForVehicleDelegate == null)) {
                this.onEndGetDatasetIdsForVehicleDelegate = new EndOperationDelegate(this.OnEndGetDatasetIdsForVehicle);
            }
            if ((this.onGetDatasetIdsForVehicleCompletedDelegate == null)) {
                this.onGetDatasetIdsForVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDatasetIdsForVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetDatasetIdsForVehicleDelegate, new object[] {
                        vin,
                        userLogin,
                        userPasswordHash}, this.onEndGetDatasetIdsForVehicleDelegate, this.onGetDatasetIdsForVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetDatasetById(long id, string userLogin, string userPasswordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDatasetById(id, userLogin, userPasswordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetDatasetById(System.IAsyncResult result) {
            return base.Channel.EndGetDatasetById(result);
        }
        
        private System.IAsyncResult OnBeginGetDatasetById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long id = ((long)(inValues[0]));
            string userLogin = ((string)(inValues[1]));
            string userPasswordHash = ((string)(inValues[2]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetDatasetById(id, userLogin, userPasswordHash, callback, asyncState);
        }
        
        private object[] OnEndGetDatasetById(System.IAsyncResult result) {
            VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetDatasetById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDatasetByIdCompleted(object state) {
            if ((this.GetDatasetByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDatasetByIdCompleted(this, new GetDatasetByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDatasetByIdAsync(long id, string userLogin, string userPasswordHash) {
            this.GetDatasetByIdAsync(id, userLogin, userPasswordHash, null);
        }
        
        public void GetDatasetByIdAsync(long id, string userLogin, string userPasswordHash, object userState) {
            if ((this.onBeginGetDatasetByIdDelegate == null)) {
                this.onBeginGetDatasetByIdDelegate = new BeginOperationDelegate(this.OnBeginGetDatasetById);
            }
            if ((this.onEndGetDatasetByIdDelegate == null)) {
                this.onEndGetDatasetByIdDelegate = new EndOperationDelegate(this.OnEndGetDatasetById);
            }
            if ((this.onGetDatasetByIdCompletedDelegate == null)) {
                this.onGetDatasetByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDatasetByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetDatasetByIdDelegate, new object[] {
                        id,
                        userLogin,
                        userPasswordHash}, this.onEndGetDatasetByIdDelegate, this.onGetDatasetByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginUploadDataset(VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto dataset, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadDataset(dataset, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndUploadDataset(System.IAsyncResult result) {
            base.Channel.EndUploadDataset(result);
        }
        
        private System.IAsyncResult OnBeginUploadDataset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto dataset = ((VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginUploadDataset(dataset, callback, asyncState);
        }
        
        private object[] OnEndUploadDataset(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndUploadDataset(result);
            return null;
        }
        
        private void OnUploadDatasetCompleted(object state) {
            if ((this.UploadDatasetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadDatasetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadDatasetAsync(VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto dataset) {
            this.UploadDatasetAsync(dataset, null);
        }
        
        public void UploadDatasetAsync(VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto dataset, object userState) {
            if ((this.onBeginUploadDatasetDelegate == null)) {
                this.onBeginUploadDatasetDelegate = new BeginOperationDelegate(this.OnBeginUploadDataset);
            }
            if ((this.onEndUploadDatasetDelegate == null)) {
                this.onEndUploadDatasetDelegate = new EndOperationDelegate(this.OnEndUploadDataset);
            }
            if ((this.onUploadDatasetCompletedDelegate == null)) {
                this.onUploadDatasetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadDatasetCompleted);
            }
            base.InvokeAsync(this.onBeginUploadDatasetDelegate, new object[] {
                        dataset}, this.onEndUploadDatasetDelegate, this.onUploadDatasetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginUploadDatasets(System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> datasets, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadDatasets(datasets, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndUploadDatasets(System.IAsyncResult result) {
            base.Channel.EndUploadDatasets(result);
        }
        
        private System.IAsyncResult OnBeginUploadDatasets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> datasets = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto>)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginUploadDatasets(datasets, callback, asyncState);
        }
        
        private object[] OnEndUploadDatasets(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndUploadDatasets(result);
            return null;
        }
        
        private void OnUploadDatasetsCompleted(object state) {
            if ((this.UploadDatasetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadDatasetsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadDatasetsAsync(System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> datasets) {
            this.UploadDatasetsAsync(datasets, null);
        }
        
        public void UploadDatasetsAsync(System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> datasets, object userState) {
            if ((this.onBeginUploadDatasetsDelegate == null)) {
                this.onBeginUploadDatasetsDelegate = new BeginOperationDelegate(this.OnBeginUploadDatasets);
            }
            if ((this.onEndUploadDatasetsDelegate == null)) {
                this.onEndUploadDatasetsDelegate = new EndOperationDelegate(this.OnEndUploadDatasets);
            }
            if ((this.onUploadDatasetsCompletedDelegate == null)) {
                this.onUploadDatasetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadDatasetsCompleted);
            }
            base.InvokeAsync(this.onBeginUploadDatasetsDelegate, new object[] {
                        datasets}, this.onEndUploadDatasetsDelegate, this.onUploadDatasetsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginDeleteDataset(long datasetId, string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDataset(datasetId, login, passwordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndDeleteDataset(System.IAsyncResult result) {
            base.Channel.EndDeleteDataset(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDataset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long datasetId = ((long)(inValues[0]));
            string login = ((string)(inValues[1]));
            string passwordHash = ((string)(inValues[2]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginDeleteDataset(datasetId, login, passwordHash, callback, asyncState);
        }
        
        private object[] OnEndDeleteDataset(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndDeleteDataset(result);
            return null;
        }
        
        private void OnDeleteDatasetCompleted(object state) {
            if ((this.DeleteDatasetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDatasetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDatasetAsync(long datasetId, string login, string passwordHash) {
            this.DeleteDatasetAsync(datasetId, login, passwordHash, null);
        }
        
        public void DeleteDatasetAsync(long datasetId, string login, string passwordHash, object userState) {
            if ((this.onBeginDeleteDatasetDelegate == null)) {
                this.onBeginDeleteDatasetDelegate = new BeginOperationDelegate(this.OnBeginDeleteDataset);
            }
            if ((this.onEndDeleteDatasetDelegate == null)) {
                this.onEndDeleteDatasetDelegate = new EndOperationDelegate(this.OnEndDeleteDataset);
            }
            if ((this.onDeleteDatasetCompletedDelegate == null)) {
                this.onDeleteDatasetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDatasetCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDatasetDelegate, new object[] {
                        datasetId,
                        login,
                        passwordHash}, this.onEndDeleteDatasetDelegate, this.onDeleteDatasetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginDeleteTrace(long traceId, string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTrace(traceId, login, passwordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndDeleteTrace(System.IAsyncResult result) {
            base.Channel.EndDeleteTrace(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTrace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long traceId = ((long)(inValues[0]));
            string login = ((string)(inValues[1]));
            string passwordHash = ((string)(inValues[2]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginDeleteTrace(traceId, login, passwordHash, callback, asyncState);
        }
        
        private object[] OnEndDeleteTrace(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndDeleteTrace(result);
            return null;
        }
        
        private void OnDeleteTraceCompleted(object state) {
            if ((this.DeleteTraceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTraceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTraceAsync(long traceId, string login, string passwordHash) {
            this.DeleteTraceAsync(traceId, login, passwordHash, null);
        }
        
        public void DeleteTraceAsync(long traceId, string login, string passwordHash, object userState) {
            if ((this.onBeginDeleteTraceDelegate == null)) {
                this.onBeginDeleteTraceDelegate = new BeginOperationDelegate(this.OnBeginDeleteTrace);
            }
            if ((this.onEndDeleteTraceDelegate == null)) {
                this.onEndDeleteTraceDelegate = new EndOperationDelegate(this.OnEndDeleteTrace);
            }
            if ((this.onDeleteTraceCompletedDelegate == null)) {
                this.onDeleteTraceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTraceCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTraceDelegate, new object[] {
                        traceId,
                        login,
                        passwordHash}, this.onEndDeleteTraceDelegate, this.onDeleteTraceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetDatasetsCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDatasetsCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetDatasetsCount(System.IAsyncResult result) {
            return base.Channel.EndGetDatasetsCount(result);
        }
        
        private System.IAsyncResult OnBeginGetDatasetsCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetDatasetsCount(callback, asyncState);
        }
        
        private object[] OnEndGetDatasetsCount(System.IAsyncResult result) {
            int retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetDatasetsCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDatasetsCountCompleted(object state) {
            if ((this.GetDatasetsCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDatasetsCountCompleted(this, new GetDatasetsCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDatasetsCountAsync() {
            this.GetDatasetsCountAsync(null);
        }
        
        public void GetDatasetsCountAsync(object userState) {
            if ((this.onBeginGetDatasetsCountDelegate == null)) {
                this.onBeginGetDatasetsCountDelegate = new BeginOperationDelegate(this.OnBeginGetDatasetsCount);
            }
            if ((this.onEndGetDatasetsCountDelegate == null)) {
                this.onEndGetDatasetsCountDelegate = new EndOperationDelegate(this.OnEndGetDatasetsCount);
            }
            if ((this.onGetDatasetsCountCompletedDelegate == null)) {
                this.onGetDatasetsCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDatasetsCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetDatasetsCountDelegate, null, this.onEndGetDatasetsCountDelegate, this.onGetDatasetsCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetDatasetsCountForVehicle(long vehicleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDatasetsCountForVehicle(vehicleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetDatasetsCountForVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetDatasetsCountForVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetDatasetsCountForVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long vehicleId = ((long)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetDatasetsCountForVehicle(vehicleId, callback, asyncState);
        }
        
        private object[] OnEndGetDatasetsCountForVehicle(System.IAsyncResult result) {
            int retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetDatasetsCountForVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDatasetsCountForVehicleCompleted(object state) {
            if ((this.GetDatasetsCountForVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDatasetsCountForVehicleCompleted(this, new GetDatasetsCountForVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDatasetsCountForVehicleAsync(long vehicleId) {
            this.GetDatasetsCountForVehicleAsync(vehicleId, null);
        }
        
        public void GetDatasetsCountForVehicleAsync(long vehicleId, object userState) {
            if ((this.onBeginGetDatasetsCountForVehicleDelegate == null)) {
                this.onBeginGetDatasetsCountForVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetDatasetsCountForVehicle);
            }
            if ((this.onEndGetDatasetsCountForVehicleDelegate == null)) {
                this.onEndGetDatasetsCountForVehicleDelegate = new EndOperationDelegate(this.OnEndGetDatasetsCountForVehicle);
            }
            if ((this.onGetDatasetsCountForVehicleCompletedDelegate == null)) {
                this.onGetDatasetsCountForVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDatasetsCountForVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetDatasetsCountForVehicleDelegate, new object[] {
                        vehicleId}, this.onEndGetDatasetsCountForVehicleDelegate, this.onGetDatasetsCountForVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetNextPageForVehicle(long lastId, int pageSize, long vehicleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNextPageForVehicle(lastId, pageSize, vehicleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetNextPageForVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetNextPageForVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetNextPageForVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long lastId = ((long)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            long vehicleId = ((long)(inValues[2]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetNextPageForVehicle(lastId, pageSize, vehicleId, callback, asyncState);
        }
        
        private object[] OnEndGetNextPageForVehicle(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetNextPageForVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNextPageForVehicleCompleted(object state) {
            if ((this.GetNextPageForVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNextPageForVehicleCompleted(this, new GetNextPageForVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNextPageForVehicleAsync(long lastId, int pageSize, long vehicleId) {
            this.GetNextPageForVehicleAsync(lastId, pageSize, vehicleId, null);
        }
        
        public void GetNextPageForVehicleAsync(long lastId, int pageSize, long vehicleId, object userState) {
            if ((this.onBeginGetNextPageForVehicleDelegate == null)) {
                this.onBeginGetNextPageForVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetNextPageForVehicle);
            }
            if ((this.onEndGetNextPageForVehicleDelegate == null)) {
                this.onEndGetNextPageForVehicleDelegate = new EndOperationDelegate(this.OnEndGetNextPageForVehicle);
            }
            if ((this.onGetNextPageForVehicleCompletedDelegate == null)) {
                this.onGetNextPageForVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNextPageForVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetNextPageForVehicleDelegate, new object[] {
                        lastId,
                        pageSize,
                        vehicleId}, this.onEndGetNextPageForVehicleDelegate, this.onGetNextPageForVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetNextPage(long lastId, int pagesize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNextPage(lastId, pagesize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetNextPage(System.IAsyncResult result) {
            return base.Channel.EndGetNextPage(result);
        }
        
        private System.IAsyncResult OnBeginGetNextPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long lastId = ((long)(inValues[0]));
            int pagesize = ((int)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetNextPage(lastId, pagesize, callback, asyncState);
        }
        
        private object[] OnEndGetNextPage(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetNextPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNextPageCompleted(object state) {
            if ((this.GetNextPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNextPageCompleted(this, new GetNextPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNextPageAsync(long lastId, int pagesize) {
            this.GetNextPageAsync(lastId, pagesize, null);
        }
        
        public void GetNextPageAsync(long lastId, int pagesize, object userState) {
            if ((this.onBeginGetNextPageDelegate == null)) {
                this.onBeginGetNextPageDelegate = new BeginOperationDelegate(this.OnBeginGetNextPage);
            }
            if ((this.onEndGetNextPageDelegate == null)) {
                this.onEndGetNextPageDelegate = new EndOperationDelegate(this.OnEndGetNextPage);
            }
            if ((this.onGetNextPageCompletedDelegate == null)) {
                this.onGetNextPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNextPageCompleted);
            }
            base.InvokeAsync(this.onBeginGetNextPageDelegate, new object[] {
                        lastId,
                        pagesize}, this.onEndGetNextPageDelegate, this.onGetNextPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetUpcomingVehicleEvents(string login, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUpcomingVehicleEvents(login, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetUpcomingVehicleEvents(System.IAsyncResult result) {
            return base.Channel.EndGetUpcomingVehicleEvents(result);
        }
        
        private System.IAsyncResult OnBeginGetUpcomingVehicleEvents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetUpcomingVehicleEvents(login, password, callback, asyncState);
        }
        
        private object[] OnEndGetUpcomingVehicleEvents(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetUpcomingVehicleEvents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUpcomingVehicleEventsCompleted(object state) {
            if ((this.GetUpcomingVehicleEventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUpcomingVehicleEventsCompleted(this, new GetUpcomingVehicleEventsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUpcomingVehicleEventsAsync(string login, string password) {
            this.GetUpcomingVehicleEventsAsync(login, password, null);
        }
        
        public void GetUpcomingVehicleEventsAsync(string login, string password, object userState) {
            if ((this.onBeginGetUpcomingVehicleEventsDelegate == null)) {
                this.onBeginGetUpcomingVehicleEventsDelegate = new BeginOperationDelegate(this.OnBeginGetUpcomingVehicleEvents);
            }
            if ((this.onEndGetUpcomingVehicleEventsDelegate == null)) {
                this.onEndGetUpcomingVehicleEventsDelegate = new EndOperationDelegate(this.OnEndGetUpcomingVehicleEvents);
            }
            if ((this.onGetUpcomingVehicleEventsCompletedDelegate == null)) {
                this.onGetUpcomingVehicleEventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUpcomingVehicleEventsCompleted);
            }
            base.InvokeAsync(this.onBeginGetUpcomingVehicleEventsDelegate, new object[] {
                        login,
                        password}, this.onEndGetUpcomingVehicleEventsDelegate, this.onGetUpcomingVehicleEventsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginGetVehicleEvents(string vin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVehicleEvents(vin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndGetVehicleEvents(System.IAsyncResult result) {
            return base.Channel.EndGetVehicleEvents(result);
        }
        
        private System.IAsyncResult OnBeginGetVehicleEvents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vin = ((string)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginGetVehicleEvents(vin, callback, asyncState);
        }
        
        private object[] OnEndGetVehicleEvents(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndGetVehicleEvents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVehicleEventsCompleted(object state) {
            if ((this.GetVehicleEventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVehicleEventsCompleted(this, new GetVehicleEventsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVehicleEventsAsync(string vin) {
            this.GetVehicleEventsAsync(vin, null);
        }
        
        public void GetVehicleEventsAsync(string vin, object userState) {
            if ((this.onBeginGetVehicleEventsDelegate == null)) {
                this.onBeginGetVehicleEventsDelegate = new BeginOperationDelegate(this.OnBeginGetVehicleEvents);
            }
            if ((this.onEndGetVehicleEventsDelegate == null)) {
                this.onEndGetVehicleEventsDelegate = new EndOperationDelegate(this.OnEndGetVehicleEvents);
            }
            if ((this.onGetVehicleEventsCompletedDelegate == null)) {
                this.onGetVehicleEventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVehicleEventsCompleted);
            }
            base.InvokeAsync(this.onBeginGetVehicleEventsDelegate, new object[] {
                        vin}, this.onEndGetVehicleEventsDelegate, this.onGetVehicleEventsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginSubmitVehicleEvent(VTSWeb.VTSWebService.VTSWebService.VehicleEventDto e, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitVehicleEvent(e, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndSubmitVehicleEvent(System.IAsyncResult result) {
            base.Channel.EndSubmitVehicleEvent(result);
        }
        
        private System.IAsyncResult OnBeginSubmitVehicleEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            VTSWeb.VTSWebService.VTSWebService.VehicleEventDto e = ((VTSWeb.VTSWebService.VTSWebService.VehicleEventDto)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginSubmitVehicleEvent(e, callback, asyncState);
        }
        
        private object[] OnEndSubmitVehicleEvent(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndSubmitVehicleEvent(result);
            return null;
        }
        
        private void OnSubmitVehicleEventCompleted(object state) {
            if ((this.SubmitVehicleEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitVehicleEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitVehicleEventAsync(VTSWeb.VTSWebService.VTSWebService.VehicleEventDto e) {
            this.SubmitVehicleEventAsync(e, null);
        }
        
        public void SubmitVehicleEventAsync(VTSWeb.VTSWebService.VTSWebService.VehicleEventDto e, object userState) {
            if ((this.onBeginSubmitVehicleEventDelegate == null)) {
                this.onBeginSubmitVehicleEventDelegate = new BeginOperationDelegate(this.OnBeginSubmitVehicleEvent);
            }
            if ((this.onEndSubmitVehicleEventDelegate == null)) {
                this.onEndSubmitVehicleEventDelegate = new EndOperationDelegate(this.OnEndSubmitVehicleEvent);
            }
            if ((this.onSubmitVehicleEventCompletedDelegate == null)) {
                this.onSubmitVehicleEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitVehicleEventCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitVehicleEventDelegate, new object[] {
                        e}, this.onEndSubmitVehicleEventDelegate, this.onSubmitVehicleEventCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginDeleteVehicleEvent(VTSWeb.VTSWebService.VTSWebService.VehicleEventDto e, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVehicleEvent(e, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndDeleteVehicleEvent(System.IAsyncResult result) {
            base.Channel.EndDeleteVehicleEvent(result);
        }
        
        private System.IAsyncResult OnBeginDeleteVehicleEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            VTSWeb.VTSWebService.VTSWebService.VehicleEventDto e = ((VTSWeb.VTSWebService.VTSWebService.VehicleEventDto)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginDeleteVehicleEvent(e, callback, asyncState);
        }
        
        private object[] OnEndDeleteVehicleEvent(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndDeleteVehicleEvent(result);
            return null;
        }
        
        private void OnDeleteVehicleEventCompleted(object state) {
            if ((this.DeleteVehicleEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVehicleEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVehicleEventAsync(VTSWeb.VTSWebService.VTSWebService.VehicleEventDto e) {
            this.DeleteVehicleEventAsync(e, null);
        }
        
        public void DeleteVehicleEventAsync(VTSWeb.VTSWebService.VTSWebService.VehicleEventDto e, object userState) {
            if ((this.onBeginDeleteVehicleEventDelegate == null)) {
                this.onBeginDeleteVehicleEventDelegate = new BeginOperationDelegate(this.OnBeginDeleteVehicleEvent);
            }
            if ((this.onEndDeleteVehicleEventDelegate == null)) {
                this.onEndDeleteVehicleEventDelegate = new EndOperationDelegate(this.OnEndDeleteVehicleEvent);
            }
            if ((this.onDeleteVehicleEventCompletedDelegate == null)) {
                this.onDeleteVehicleEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVehicleEventCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVehicleEventDelegate, new object[] {
                        e}, this.onEndDeleteVehicleEventDelegate, this.onDeleteVehicleEventCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginNewsGetLast(int topCount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewsGetLast(topCount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndNewsGetLast(System.IAsyncResult result) {
            return base.Channel.EndNewsGetLast(result);
        }
        
        private System.IAsyncResult OnBeginNewsGetLast(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int topCount = ((int)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginNewsGetLast(topCount, callback, asyncState);
        }
        
        private object[] OnEndNewsGetLast(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndNewsGetLast(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewsGetLastCompleted(object state) {
            if ((this.NewsGetLastCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewsGetLastCompleted(this, new NewsGetLastCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewsGetLastAsync(int topCount) {
            this.NewsGetLastAsync(topCount, null);
        }
        
        public void NewsGetLastAsync(int topCount, object userState) {
            if ((this.onBeginNewsGetLastDelegate == null)) {
                this.onBeginNewsGetLastDelegate = new BeginOperationDelegate(this.OnBeginNewsGetLast);
            }
            if ((this.onEndNewsGetLastDelegate == null)) {
                this.onEndNewsGetLastDelegate = new EndOperationDelegate(this.OnEndNewsGetLast);
            }
            if ((this.onNewsGetLastCompletedDelegate == null)) {
                this.onNewsGetLastCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewsGetLastCompleted);
            }
            base.InvokeAsync(this.onBeginNewsGetLastDelegate, new object[] {
                        topCount}, this.onEndNewsGetLastDelegate, this.onNewsGetLastCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginNewsGetAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewsGetAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto> VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndNewsGetAll(System.IAsyncResult result) {
            return base.Channel.EndNewsGetAll(result);
        }
        
        private System.IAsyncResult OnBeginNewsGetAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginNewsGetAll(callback, asyncState);
        }
        
        private object[] OnEndNewsGetAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto> retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndNewsGetAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewsGetAllCompleted(object state) {
            if ((this.NewsGetAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewsGetAllCompleted(this, new NewsGetAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewsGetAllAsync() {
            this.NewsGetAllAsync(null);
        }
        
        public void NewsGetAllAsync(object userState) {
            if ((this.onBeginNewsGetAllDelegate == null)) {
                this.onBeginNewsGetAllDelegate = new BeginOperationDelegate(this.OnBeginNewsGetAll);
            }
            if ((this.onEndNewsGetAllDelegate == null)) {
                this.onEndNewsGetAllDelegate = new EndOperationDelegate(this.OnEndNewsGetAll);
            }
            if ((this.onNewsGetAllCompletedDelegate == null)) {
                this.onNewsGetAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewsGetAllCompleted);
            }
            base.InvokeAsync(this.onBeginNewsGetAllDelegate, null, this.onEndNewsGetAllDelegate, this.onNewsGetAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginNewsGet(long id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewsGet(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VTSWeb.VTSWebService.VTSWebService.SystemNewsDto VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndNewsGet(System.IAsyncResult result) {
            return base.Channel.EndNewsGet(result);
        }
        
        private System.IAsyncResult OnBeginNewsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long id = ((long)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginNewsGet(id, callback, asyncState);
        }
        
        private object[] OnEndNewsGet(System.IAsyncResult result) {
            VTSWeb.VTSWebService.VTSWebService.SystemNewsDto retVal = ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndNewsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewsGetCompleted(object state) {
            if ((this.NewsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewsGetCompleted(this, new NewsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewsGetAsync(long id) {
            this.NewsGetAsync(id, null);
        }
        
        public void NewsGetAsync(long id, object userState) {
            if ((this.onBeginNewsGetDelegate == null)) {
                this.onBeginNewsGetDelegate = new BeginOperationDelegate(this.OnBeginNewsGet);
            }
            if ((this.onEndNewsGetDelegate == null)) {
                this.onEndNewsGetDelegate = new EndOperationDelegate(this.OnEndNewsGet);
            }
            if ((this.onNewsGetCompletedDelegate == null)) {
                this.onNewsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewsGetCompleted);
            }
            base.InvokeAsync(this.onBeginNewsGetDelegate, new object[] {
                        id}, this.onEndNewsGetDelegate, this.onNewsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginNewsUpdate(VTSWeb.VTSWebService.VTSWebService.SystemNewsDto item, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewsUpdate(item, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndNewsUpdate(System.IAsyncResult result) {
            base.Channel.EndNewsUpdate(result);
        }
        
        private System.IAsyncResult OnBeginNewsUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            VTSWeb.VTSWebService.VTSWebService.SystemNewsDto item = ((VTSWeb.VTSWebService.VTSWebService.SystemNewsDto)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginNewsUpdate(item, callback, asyncState);
        }
        
        private object[] OnEndNewsUpdate(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndNewsUpdate(result);
            return null;
        }
        
        private void OnNewsUpdateCompleted(object state) {
            if ((this.NewsUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewsUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewsUpdateAsync(VTSWeb.VTSWebService.VTSWebService.SystemNewsDto item) {
            this.NewsUpdateAsync(item, null);
        }
        
        public void NewsUpdateAsync(VTSWeb.VTSWebService.VTSWebService.SystemNewsDto item, object userState) {
            if ((this.onBeginNewsUpdateDelegate == null)) {
                this.onBeginNewsUpdateDelegate = new BeginOperationDelegate(this.OnBeginNewsUpdate);
            }
            if ((this.onEndNewsUpdateDelegate == null)) {
                this.onEndNewsUpdateDelegate = new EndOperationDelegate(this.OnEndNewsUpdate);
            }
            if ((this.onNewsUpdateCompletedDelegate == null)) {
                this.onNewsUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewsUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginNewsUpdateDelegate, new object[] {
                        item}, this.onEndNewsUpdateDelegate, this.onNewsUpdateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginNewsPersist(VTSWeb.VTSWebService.VTSWebService.SystemNewsDto item, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewsPersist(item, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndNewsPersist(System.IAsyncResult result) {
            base.Channel.EndNewsPersist(result);
        }
        
        private System.IAsyncResult OnBeginNewsPersist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            VTSWeb.VTSWebService.VTSWebService.SystemNewsDto item = ((VTSWeb.VTSWebService.VTSWebService.SystemNewsDto)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginNewsPersist(item, callback, asyncState);
        }
        
        private object[] OnEndNewsPersist(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndNewsPersist(result);
            return null;
        }
        
        private void OnNewsPersistCompleted(object state) {
            if ((this.NewsPersistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewsPersistCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewsPersistAsync(VTSWeb.VTSWebService.VTSWebService.SystemNewsDto item) {
            this.NewsPersistAsync(item, null);
        }
        
        public void NewsPersistAsync(VTSWeb.VTSWebService.VTSWebService.SystemNewsDto item, object userState) {
            if ((this.onBeginNewsPersistDelegate == null)) {
                this.onBeginNewsPersistDelegate = new BeginOperationDelegate(this.OnBeginNewsPersist);
            }
            if ((this.onEndNewsPersistDelegate == null)) {
                this.onEndNewsPersistDelegate = new EndOperationDelegate(this.OnEndNewsPersist);
            }
            if ((this.onNewsPersistCompletedDelegate == null)) {
                this.onNewsPersistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewsPersistCompleted);
            }
            base.InvokeAsync(this.onBeginNewsPersistDelegate, new object[] {
                        item}, this.onEndNewsPersistDelegate, this.onNewsPersistCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginNewsDelete(long id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewsDelete(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndNewsDelete(System.IAsyncResult result) {
            base.Channel.EndNewsDelete(result);
        }
        
        private System.IAsyncResult OnBeginNewsDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long id = ((long)(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginNewsDelete(id, callback, asyncState);
        }
        
        private object[] OnEndNewsDelete(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndNewsDelete(result);
            return null;
        }
        
        private void OnNewsDeleteCompleted(object state) {
            if ((this.NewsDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewsDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewsDeleteAsync(long id) {
            this.NewsDeleteAsync(id, null);
        }
        
        public void NewsDeleteAsync(long id, object userState) {
            if ((this.onBeginNewsDeleteDelegate == null)) {
                this.onBeginNewsDeleteDelegate = new BeginOperationDelegate(this.OnBeginNewsDelete);
            }
            if ((this.onEndNewsDeleteDelegate == null)) {
                this.onEndNewsDeleteDelegate = new EndOperationDelegate(this.OnEndNewsDelete);
            }
            if ((this.onNewsDeleteCompletedDelegate == null)) {
                this.onNewsDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewsDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginNewsDeleteDelegate, new object[] {
                        id}, this.onEndNewsDeleteDelegate, this.onNewsDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VTSWeb.VTSWebService.VTSWebService.IVtsWebService.BeginReportUnrecognizedData(byte[] dataStream, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportUnrecognizedData(dataStream, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void VTSWeb.VTSWebService.VTSWebService.IVtsWebService.EndReportUnrecognizedData(System.IAsyncResult result) {
            base.Channel.EndReportUnrecognizedData(result);
        }
        
        private System.IAsyncResult OnBeginReportUnrecognizedData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] dataStream = ((byte[])(inValues[0]));
            return ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).BeginReportUnrecognizedData(dataStream, callback, asyncState);
        }
        
        private object[] OnEndReportUnrecognizedData(System.IAsyncResult result) {
            ((VTSWeb.VTSWebService.VTSWebService.IVtsWebService)(this)).EndReportUnrecognizedData(result);
            return null;
        }
        
        private void OnReportUnrecognizedDataCompleted(object state) {
            if ((this.ReportUnrecognizedDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportUnrecognizedDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportUnrecognizedDataAsync(byte[] dataStream) {
            this.ReportUnrecognizedDataAsync(dataStream, null);
        }
        
        public void ReportUnrecognizedDataAsync(byte[] dataStream, object userState) {
            if ((this.onBeginReportUnrecognizedDataDelegate == null)) {
                this.onBeginReportUnrecognizedDataDelegate = new BeginOperationDelegate(this.OnBeginReportUnrecognizedData);
            }
            if ((this.onEndReportUnrecognizedDataDelegate == null)) {
                this.onEndReportUnrecognizedDataDelegate = new EndOperationDelegate(this.OnEndReportUnrecognizedData);
            }
            if ((this.onReportUnrecognizedDataCompletedDelegate == null)) {
                this.onReportUnrecognizedDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportUnrecognizedDataCompleted);
            }
            base.InvokeAsync(this.onBeginReportUnrecognizedDataDelegate, new object[] {
                        dataStream}, this.onEndReportUnrecognizedDataDelegate, this.onReportUnrecognizedDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override VTSWeb.VTSWebService.VTSWebService.IVtsWebService CreateChannel() {
            return new VtsWebServiceClientChannel(this);
        }
        
        private class VtsWebServiceClientChannel : ChannelBase<VTSWeb.VTSWebService.VTSWebService.IVtsWebService>, VTSWeb.VTSWebService.VTSWebService.IVtsWebService {
            
            public VtsWebServiceClientChannel(System.ServiceModel.ClientBase<VTSWeb.VTSWebService.VTSWebService.IVtsWebService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCheckConnection(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CheckConnection", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCheckConnection(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CheckConnection", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckUsernameAvailability(string username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = username;
                System.IAsyncResult _result = base.BeginInvoke("CheckUsernameAvailability", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCheckUsernameAvailability(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CheckUsernameAvailability", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuthenticateUser(string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = login;
                _args[1] = passwordHash;
                System.IAsyncResult _result = base.BeginInvoke("AuthenticateUser", _args, callback, asyncState);
                return _result;
            }
            
            public VTSWeb.VTSWebService.VTSWebService.UserDto EndAuthenticateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                VTSWeb.VTSWebService.VTSWebService.UserDto _result = ((VTSWeb.VTSWebService.VTSWebService.UserDto)(base.EndInvoke("AuthenticateUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLastAgentVersion(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLastAgentVersion", _args, callback, asyncState);
                return _result;
            }
            
            public VTSWeb.VTSWebService.VTSWebService.AgentVersionDto EndGetLastAgentVersion(System.IAsyncResult result) {
                object[] _args = new object[0];
                VTSWeb.VTSWebService.VTSWebService.AgentVersionDto _result = ((VTSWeb.VTSWebService.VTSWebService.AgentVersionDto)(base.EndInvoke("GetLastAgentVersion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegisterUser(VTSWeb.VTSWebService.VTSWebService.UserDto user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("RegisterUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRegisterUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RegisterUser", _args, result);
            }
            
            public System.IAsyncResult BeginGetUserRoleByUserId(long userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetUserRoleByUserId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetUserRoleByUserId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetUserRoleByUserId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPartnersVehiclesCount(long partnerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = partnerId;
                System.IAsyncResult _result = base.BeginInvoke("GetPartnersVehiclesCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetPartnersVehiclesCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetPartnersVehiclesCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetClientsForPartner(string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = login;
                _args[1] = passwordHash;
                System.IAsyncResult _result = base.BeginInvoke("GetClientsForPartner", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> EndGetClientsForPartner(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto>)(base.EndInvoke("GetClientsForPartner", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllUsers(string administrativeLogin, string administrativePasswordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = administrativeLogin;
                _args[1] = administrativePasswordHash;
                System.IAsyncResult _result = base.BeginInvoke("GetAllUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> EndGetAllUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto>)(base.EndInvoke("GetAllUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllPartnerClients(string partnerLogin, string partnerPasswordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = partnerLogin;
                _args[1] = partnerPasswordHash;
                System.IAsyncResult _result = base.BeginInvoke("GetAllPartnerClients", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> EndGetAllPartnerClients(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.UserDto>)(base.EndInvoke("GetAllPartnerClients", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProvideAccessToVehicleForClientUsingEmail(long vehicleId, string clientEmail, string partnerLogin, string partnerPasswordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = vehicleId;
                _args[1] = clientEmail;
                _args[2] = partnerLogin;
                _args[3] = partnerPasswordHash;
                System.IAsyncResult _result = base.BeginInvoke("ProvideAccessToVehicleForClientUsingEmail", _args, callback, asyncState);
                return _result;
            }
            
            public void EndProvideAccessToVehicleForClientUsingEmail(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ProvideAccessToVehicleForClientUsingEmail", _args, result);
            }
            
            public System.IAsyncResult BeginRevokeAccessToVehicleForClientUsingEmail(long vehicleId, string clientEmail, string partnerLogin, string partnerPasswordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = vehicleId;
                _args[1] = clientEmail;
                _args[2] = partnerLogin;
                _args[3] = partnerPasswordHash;
                System.IAsyncResult _result = base.BeginInvoke("RevokeAccessToVehicleForClientUsingEmail", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRevokeAccessToVehicleForClientUsingEmail(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RevokeAccessToVehicleForClientUsingEmail", _args, result);
            }
            
            public System.IAsyncResult BeginGetUsersVehicles(string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = login;
                _args[1] = passwordHash;
                System.IAsyncResult _result = base.BeginInvoke("GetUsersVehicles", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto> EndGetUsersVehicles(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto>)(base.EndInvoke("GetUsersVehicles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVehicleByVin(string vin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vin;
                System.IAsyncResult _result = base.BeginInvoke("GetVehicleByVin", _args, callback, asyncState);
                return _result;
            }
            
            public VTSWeb.VTSWebService.VTSWebService.VehicleDto EndGetVehicleByVin(System.IAsyncResult result) {
                object[] _args = new object[0];
                VTSWeb.VTSWebService.VTSWebService.VehicleDto _result = ((VTSWeb.VTSWebService.VTSWebService.VehicleDto)(base.EndInvoke("GetVehicleByVin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckWhetherVinIsSupported(string vin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vin;
                System.IAsyncResult _result = base.BeginInvoke("CheckWhetherVinIsSupported", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCheckWhetherVinIsSupported(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CheckWhetherVinIsSupported", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckVinsReturnUnsupported(System.Collections.ObjectModel.ObservableCollection<string> vins, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vins;
                System.IAsyncResult _result = base.BeginInvoke("CheckVinsReturnUnsupported", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndCheckVinsReturnUnsupported(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("CheckVinsReturnUnsupported", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVehicleInformationByVin(string vin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vin;
                System.IAsyncResult _result = base.BeginInvoke("GetVehicleInformationByVin", _args, callback, asyncState);
                return _result;
            }
            
            public VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto EndGetVehicleInformationByVin(System.IAsyncResult result) {
                object[] _args = new object[0];
                VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto _result = ((VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto)(base.EndInvoke("GetVehicleInformationByVin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnUnsupportedVinsFromTheList(System.Collections.ObjectModel.ObservableCollection<string> vins, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vins;
                System.IAsyncResult _result = base.BeginInvoke("ReturnUnsupportedVinsFromTheList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndReturnUnsupportedVinsFromTheList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("ReturnUnsupportedVinsFromTheList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAgentVersions(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAgentVersions", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AgentVersionDto> EndGetAgentVersions(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AgentVersionDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AgentVersionDto>)(base.EndInvoke("GetAgentVersions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckVinsReturnUnregistered(System.Collections.ObjectModel.ObservableCollection<string> vins, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vins;
                System.IAsyncResult _result = base.BeginInvoke("CheckVinsReturnUnregistered", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndCheckVinsReturnUnregistered(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("CheckVinsReturnUnregistered", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegisterVehicle(string vin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vin;
                System.IAsyncResult _result = base.BeginInvoke("RegisterVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRegisterVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RegisterVehicle", _args, result);
            }
            
            public System.IAsyncResult BeginRegisterVehicles(System.Collections.ObjectModel.ObservableCollection<string> vins, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vins;
                System.IAsyncResult _result = base.BeginInvoke("RegisterVehicles", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRegisterVehicles(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RegisterVehicles", _args, result);
            }
            
            public System.IAsyncResult BeginAssociateVehicleWithUser(string vin, string userLogin, string userPasswordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = vin;
                _args[1] = userLogin;
                _args[2] = userPasswordHash;
                System.IAsyncResult _result = base.BeginInvoke("AssociateVehicleWithUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAssociateVehicleWithUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AssociateVehicleWithUser", _args, result);
            }
            
            public System.IAsyncResult BeginAssociateVehiclesWithUser(System.Collections.ObjectModel.ObservableCollection<string> vin, string userLogin, string userPasswordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = vin;
                _args[1] = userLogin;
                _args[2] = userPasswordHash;
                System.IAsyncResult _result = base.BeginInvoke("AssociateVehiclesWithUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAssociateVehiclesWithUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AssociateVehiclesWithUser", _args, result);
            }
            
            public System.IAsyncResult BeginGetVehicleCharacteristics(string vin, int lang, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = vin;
                _args[1] = lang;
                System.IAsyncResult _result = base.BeginInvoke("GetVehicleCharacteristics", _args, callback, asyncState);
                return _result;
            }
            
            public VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsDto EndGetVehicleCharacteristics(System.IAsyncResult result) {
                object[] _args = new object[0];
                VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsDto _result = ((VTSWeb.VTSWebService.VTSWebService.VehicleCharacteristicsDto)(base.EndInvoke("GetVehicleCharacteristics", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVehiclesInformation(System.Collections.ObjectModel.ObservableCollection<long> vehicleIds, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicleIds;
                System.IAsyncResult _result = base.BeginInvoke("GetVehiclesInformation", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto> EndGetVehiclesInformation(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleInformationDto>)(base.EndInvoke("GetVehiclesInformation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVehiclesForUser(string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = login;
                _args[1] = passwordHash;
                System.IAsyncResult _result = base.BeginInvoke("GetVehiclesForUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto> EndGetVehiclesForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleDto>)(base.EndInvoke("GetVehiclesForUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDesktopMessages(string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = login;
                _args[1] = passwordHash;
                System.IAsyncResult _result = base.BeginInvoke("GetDesktopMessages", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetDesktopMessages(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetDesktopMessages", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateVehicleMileage(string vin, int newMileage, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = vin;
                _args[1] = newMileage;
                System.IAsyncResult _result = base.BeginInvoke("UpdateVehicleMileage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateVehicleMileage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateVehicleMileage", _args, result);
            }
            
            public System.IAsyncResult BeginSubmitAnalyticStatistics(VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsDto statistics, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = statistics;
                System.IAsyncResult _result = base.BeginInvoke("SubmitAnalyticStatistics", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSubmitAnalyticStatistics(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SubmitAnalyticStatistics", _args, result);
            }
            
            public System.IAsyncResult BeginGetAnalyticRuleSettings(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAnalyticRuleSettings", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettings(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(base.EndInvoke("GetAnalyticRuleSettings", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalyticRuleSettingsByType(int type, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = type;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalyticRuleSettingsByType", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsByType(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(base.EndInvoke("GetAnalyticRuleSettingsByType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalyticRuleSettingsByTypeAndEngineFamily(int type, int engineFamilyType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = type;
                _args[1] = engineFamilyType;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalyticRuleSettingsByTypeAndEngineFamily", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsByTypeAndEngineFamily(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(base.EndInvoke("GetAnalyticRuleSettingsByTypeAndEngineFamily", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(int type, int engineFamilyType, int engineType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = type;
                _args[1] = engineFamilyType;
                _args[2] = engineType;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(base.EndInvoke("GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalyticRuleSettingsByEngineFamilyAndEngineType(int engineFamilyType, int engineType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = engineFamilyType;
                _args[1] = engineType;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalyticRuleSettingsByEngineFamilyAndEngineType", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsByEngineFamilyAndEngineType(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(base.EndInvoke("GetAnalyticRuleSettingsByEngineFamilyAndEngineType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalyticRuleSettingsByEngineFamily(int engineFamilyType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = engineFamilyType;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalyticRuleSettingsByEngineFamily", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsByEngineFamily(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(base.EndInvoke("GetAnalyticRuleSettingsByEngineFamily", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalyticRuleSettingsDefaultByTypes(System.Collections.ObjectModel.ObservableCollection<int> types, int engineFamilyType, int engineType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = types;
                _args[1] = engineFamilyType;
                _args[2] = engineType;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalyticRuleSettingsDefaultByTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsDefaultByTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(base.EndInvoke("GetAnalyticRuleSettingsDefaultByTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalyticRuleSettingsBySignature(System.Collections.ObjectModel.ObservableCollection<int> signatureRuleTypes, System.Collections.ObjectModel.ObservableCollection<int> signatureEngineTypes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = signatureRuleTypes;
                _args[1] = signatureEngineTypes;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalyticRuleSettingsBySignature", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsBySignature(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(base.EndInvoke("GetAnalyticRuleSettingsBySignature", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(int ruleType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ruleType;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalyticRuleSettingsWhereFamilyAndEngineIsNull", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(base.EndInvoke("GetAnalyticRuleSettingsWhereFamilyAndEngineIsNull", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalyticRuleSettingsWhereEngineIsNull(int ruleType, int engineFamilyType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ruleType;
                _args[1] = engineFamilyType;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalyticRuleSettingsWhereEngineIsNull", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsWhereEngineIsNull(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(base.EndInvoke("GetAnalyticRuleSettingsWhereEngineIsNull", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalyticRuleSettingsByIds(System.Collections.ObjectModel.ObservableCollection<long> ids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ids;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalyticRuleSettingsByIds", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAnalyticRuleSettingsByIds(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(base.EndInvoke("GetAnalyticRuleSettingsByIds", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSubmitAnalyticRuleSettings(VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto settings, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = settings;
                System.IAsyncResult _result = base.BeginInvoke("SubmitAnalyticRuleSettings", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSubmitAnalyticRuleSettings(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SubmitAnalyticRuleSettings", _args, result);
            }
            
            public System.IAsyncResult BeginAggregateStatistics(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("AggregateStatistics", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAggregateStatistics(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AggregateStatistics", _args, result);
            }
            
            public System.IAsyncResult BeginGetAvailableAnalyticStatisticsTypesForVehicle(string vin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vin;
                System.IAsyncResult _result = base.BeginInvoke("GetAvailableAnalyticStatisticsTypesForVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<int> EndGetAvailableAnalyticStatisticsTypesForVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<int> _result = ((System.Collections.ObjectModel.ObservableCollection<int>)(base.EndInvoke("GetAvailableAnalyticStatisticsTypesForVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalyticStatisticsPerVehicle(string vin, int analyticRuleType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = vin;
                _args[1] = analyticRuleType;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalyticStatisticsPerVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsValueDto> EndGetAnalyticStatisticsPerVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsValueDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticStatisticsValueDto>)(base.EndInvoke("GetAnalyticStatisticsPerVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSettingsForVehicle(string vin, int ruleType, string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = vin;
                _args[1] = ruleType;
                _args[2] = login;
                _args[3] = passwordHash;
                System.IAsyncResult _result = base.BeginInvoke("GetSettingsForVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto EndGetSettingsForVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto _result = ((VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto)(base.EndInvoke("GetSettingsForVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllSettingsForVehicle(string vin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vin;
                System.IAsyncResult _result = base.BeginInvoke("GetAllSettingsForVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> EndGetAllSettingsForVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.AnalyticRuleSettingsDto>)(base.EndInvoke("GetAllSettingsForVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDatasetsForVehicle(string vin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vin;
                System.IAsyncResult _result = base.BeginInvoke("GetDatasetsForVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> EndGetDatasetsForVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto>)(base.EndInvoke("GetDatasetsForVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDatasetIdsForVehicle(string vin, string userLogin, string userPasswordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = vin;
                _args[1] = userLogin;
                _args[2] = userPasswordHash;
                System.IAsyncResult _result = base.BeginInvoke("GetDatasetIdsForVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<long> EndGetDatasetIdsForVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<long> _result = ((System.Collections.ObjectModel.ObservableCollection<long>)(base.EndInvoke("GetDatasetIdsForVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDatasetById(long id, string userLogin, string userPasswordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = id;
                _args[1] = userLogin;
                _args[2] = userPasswordHash;
                System.IAsyncResult _result = base.BeginInvoke("GetDatasetById", _args, callback, asyncState);
                return _result;
            }
            
            public VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto EndGetDatasetById(System.IAsyncResult result) {
                object[] _args = new object[0];
                VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto _result = ((VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto)(base.EndInvoke("GetDatasetById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadDataset(VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto dataset, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = dataset;
                System.IAsyncResult _result = base.BeginInvoke("UploadDataset", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadDataset(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadDataset", _args, result);
            }
            
            public System.IAsyncResult BeginUploadDatasets(System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> datasets, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = datasets;
                System.IAsyncResult _result = base.BeginInvoke("UploadDatasets", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadDatasets(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadDatasets", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteDataset(long datasetId, string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = datasetId;
                _args[1] = login;
                _args[2] = passwordHash;
                System.IAsyncResult _result = base.BeginInvoke("DeleteDataset", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteDataset(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteDataset", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteTrace(long traceId, string login, string passwordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = traceId;
                _args[1] = login;
                _args[2] = passwordHash;
                System.IAsyncResult _result = base.BeginInvoke("DeleteTrace", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteTrace(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteTrace", _args, result);
            }
            
            public System.IAsyncResult BeginGetDatasetsCount(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDatasetsCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetDatasetsCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetDatasetsCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDatasetsCountForVehicle(long vehicleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicleId;
                System.IAsyncResult _result = base.BeginInvoke("GetDatasetsCountForVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetDatasetsCountForVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetDatasetsCountForVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNextPageForVehicle(long lastId, int pageSize, long vehicleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = lastId;
                _args[1] = pageSize;
                _args[2] = vehicleId;
                System.IAsyncResult _result = base.BeginInvoke("GetNextPageForVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> EndGetNextPageForVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto>)(base.EndInvoke("GetNextPageForVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNextPage(long lastId, int pagesize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = lastId;
                _args[1] = pagesize;
                System.IAsyncResult _result = base.BeginInvoke("GetNextPage", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> EndGetNextPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.PsaDatasetDto>)(base.EndInvoke("GetNextPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUpcomingVehicleEvents(string login, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = login;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("GetUpcomingVehicleEvents", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto> EndGetUpcomingVehicleEvents(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto>)(base.EndInvoke("GetUpcomingVehicleEvents", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVehicleEvents(string vin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vin;
                System.IAsyncResult _result = base.BeginInvoke("GetVehicleEvents", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto> EndGetVehicleEvents(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.VehicleEventDto>)(base.EndInvoke("GetVehicleEvents", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSubmitVehicleEvent(VTSWeb.VTSWebService.VTSWebService.VehicleEventDto e, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = e;
                System.IAsyncResult _result = base.BeginInvoke("SubmitVehicleEvent", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSubmitVehicleEvent(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SubmitVehicleEvent", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteVehicleEvent(VTSWeb.VTSWebService.VTSWebService.VehicleEventDto e, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = e;
                System.IAsyncResult _result = base.BeginInvoke("DeleteVehicleEvent", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteVehicleEvent(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteVehicleEvent", _args, result);
            }
            
            public System.IAsyncResult BeginNewsGetLast(int topCount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = topCount;
                System.IAsyncResult _result = base.BeginInvoke("NewsGetLast", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto> EndNewsGetLast(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto>)(base.EndInvoke("NewsGetLast", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNewsGetAll(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("NewsGetAll", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto> EndNewsGetAll(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto> _result = ((System.Collections.ObjectModel.ObservableCollection<VTSWeb.VTSWebService.VTSWebService.SystemNewsDto>)(base.EndInvoke("NewsGetAll", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNewsGet(long id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("NewsGet", _args, callback, asyncState);
                return _result;
            }
            
            public VTSWeb.VTSWebService.VTSWebService.SystemNewsDto EndNewsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                VTSWeb.VTSWebService.VTSWebService.SystemNewsDto _result = ((VTSWeb.VTSWebService.VTSWebService.SystemNewsDto)(base.EndInvoke("NewsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNewsUpdate(VTSWeb.VTSWebService.VTSWebService.SystemNewsDto item, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = item;
                System.IAsyncResult _result = base.BeginInvoke("NewsUpdate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNewsUpdate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("NewsUpdate", _args, result);
            }
            
            public System.IAsyncResult BeginNewsPersist(VTSWeb.VTSWebService.VTSWebService.SystemNewsDto item, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = item;
                System.IAsyncResult _result = base.BeginInvoke("NewsPersist", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNewsPersist(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("NewsPersist", _args, result);
            }
            
            public System.IAsyncResult BeginNewsDelete(long id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("NewsDelete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNewsDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("NewsDelete", _args, result);
            }
            
            public System.IAsyncResult BeginReportUnrecognizedData(byte[] dataStream, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = dataStream;
                System.IAsyncResult _result = base.BeginInvoke("ReportUnrecognizedData", _args, callback, asyncState);
                return _result;
            }
            
            public void EndReportUnrecognizedData(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ReportUnrecognizedData", _args, result);
            }
        }
    }
}
