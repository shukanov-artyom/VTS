//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tester.serv {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="serv.IVtsWebService")]
    public interface IVtsWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/CheckConnection", ReplyAction="http://tempuri.org/IVtsWebService/CheckConnectionResponse")]
        string CheckConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/CheckConnection", ReplyAction="http://tempuri.org/IVtsWebService/CheckConnectionResponse")]
        System.Threading.Tasks.Task<string> CheckConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/CheckUsernameAvailability", ReplyAction="http://tempuri.org/IVtsWebService/CheckUsernameAvailabilityResponse")]
        bool CheckUsernameAvailability(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/CheckUsernameAvailability", ReplyAction="http://tempuri.org/IVtsWebService/CheckUsernameAvailabilityResponse")]
        System.Threading.Tasks.Task<bool> CheckUsernameAvailabilityAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/AuthenticateUser", ReplyAction="http://tempuri.org/IVtsWebService/AuthenticateUserResponse")]
        VTSWebService.DataContracts.UserDto AuthenticateUser(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/AuthenticateUser", ReplyAction="http://tempuri.org/IVtsWebService/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.UserDto> AuthenticateUserAsync(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetLastAgentVersion", ReplyAction="http://tempuri.org/IVtsWebService/GetLastAgentVersionResponse")]
        VTSWebService.DataContracts.AgentVersionDto GetLastAgentVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetLastAgentVersion", ReplyAction="http://tempuri.org/IVtsWebService/GetLastAgentVersionResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AgentVersionDto> GetLastAgentVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/RegisterUser", ReplyAction="http://tempuri.org/IVtsWebService/RegisterUserResponse")]
        void RegisterUser(VTSWebService.DataContracts.UserDto user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/RegisterUser", ReplyAction="http://tempuri.org/IVtsWebService/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync(VTSWebService.DataContracts.UserDto user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetUserRoleByUserId", ReplyAction="http://tempuri.org/IVtsWebService/GetUserRoleByUserIdResponse")]
        int GetUserRoleByUserId(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetUserRoleByUserId", ReplyAction="http://tempuri.org/IVtsWebService/GetUserRoleByUserIdResponse")]
        System.Threading.Tasks.Task<int> GetUserRoleByUserIdAsync(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetPartnersVehiclesCount", ReplyAction="http://tempuri.org/IVtsWebService/GetPartnersVehiclesCountResponse")]
        int GetPartnersVehiclesCount(long partnerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetPartnersVehiclesCount", ReplyAction="http://tempuri.org/IVtsWebService/GetPartnersVehiclesCountResponse")]
        System.Threading.Tasks.Task<int> GetPartnersVehiclesCountAsync(long partnerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetClientsForPartner", ReplyAction="http://tempuri.org/IVtsWebService/GetClientsForPartnerResponse")]
        VTSWebService.DataContracts.UserDto[] GetClientsForPartner(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetClientsForPartner", ReplyAction="http://tempuri.org/IVtsWebService/GetClientsForPartnerResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.UserDto[]> GetClientsForPartnerAsync(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAllUsers", ReplyAction="http://tempuri.org/IVtsWebService/GetAllUsersResponse")]
        VTSWebService.DataContracts.UserDto[] GetAllUsers(string administrativeLogin, string administrativePasswordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAllUsers", ReplyAction="http://tempuri.org/IVtsWebService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.UserDto[]> GetAllUsersAsync(string administrativeLogin, string administrativePasswordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetUsersVehicles", ReplyAction="http://tempuri.org/IVtsWebService/GetUsersVehiclesResponse")]
        VTSWebService.DataContracts.VehicleDto[] GetUsersVehicles(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetUsersVehicles", ReplyAction="http://tempuri.org/IVtsWebService/GetUsersVehiclesResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleDto[]> GetUsersVehiclesAsync(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetVehicleByVin", ReplyAction="http://tempuri.org/IVtsWebService/GetVehicleByVinResponse")]
        VTSWebService.DataContracts.VehicleDto GetVehicleByVin(string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetVehicleByVin", ReplyAction="http://tempuri.org/IVtsWebService/GetVehicleByVinResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleDto> GetVehicleByVinAsync(string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/CheckWhetherVinIsSupported", ReplyAction="http://tempuri.org/IVtsWebService/CheckWhetherVinIsSupportedResponse")]
        bool CheckWhetherVinIsSupported(string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/CheckWhetherVinIsSupported", ReplyAction="http://tempuri.org/IVtsWebService/CheckWhetherVinIsSupportedResponse")]
        System.Threading.Tasks.Task<bool> CheckWhetherVinIsSupportedAsync(string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/CheckVinsReturnUnsupported", ReplyAction="http://tempuri.org/IVtsWebService/CheckVinsReturnUnsupportedResponse")]
        string[] CheckVinsReturnUnsupported(string[] vins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/CheckVinsReturnUnsupported", ReplyAction="http://tempuri.org/IVtsWebService/CheckVinsReturnUnsupportedResponse")]
        System.Threading.Tasks.Task<string[]> CheckVinsReturnUnsupportedAsync(string[] vins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetVehicleInformationByVin", ReplyAction="http://tempuri.org/IVtsWebService/GetVehicleInformationByVinResponse")]
        VTSWebService.DataContracts.VehicleInformationDto GetVehicleInformationByVin(string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetVehicleInformationByVin", ReplyAction="http://tempuri.org/IVtsWebService/GetVehicleInformationByVinResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleInformationDto> GetVehicleInformationByVinAsync(string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/ReturnUnsupportedVinsFromTheList", ReplyAction="http://tempuri.org/IVtsWebService/ReturnUnsupportedVinsFromTheListResponse")]
        string[] ReturnUnsupportedVinsFromTheList(string[] vins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/ReturnUnsupportedVinsFromTheList", ReplyAction="http://tempuri.org/IVtsWebService/ReturnUnsupportedVinsFromTheListResponse")]
        System.Threading.Tasks.Task<string[]> ReturnUnsupportedVinsFromTheListAsync(string[] vins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAgentVersions", ReplyAction="http://tempuri.org/IVtsWebService/GetAgentVersionsResponse")]
        VTSWebService.DataContracts.AgentVersionDto[] GetAgentVersions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAgentVersions", ReplyAction="http://tempuri.org/IVtsWebService/GetAgentVersionsResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AgentVersionDto[]> GetAgentVersionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/CheckVinsReturnUnregistered", ReplyAction="http://tempuri.org/IVtsWebService/CheckVinsReturnUnregisteredResponse")]
        string[] CheckVinsReturnUnregistered(string[] vins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/CheckVinsReturnUnregistered", ReplyAction="http://tempuri.org/IVtsWebService/CheckVinsReturnUnregisteredResponse")]
        System.Threading.Tasks.Task<string[]> CheckVinsReturnUnregisteredAsync(string[] vins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/RegisterVehicle", ReplyAction="http://tempuri.org/IVtsWebService/RegisterVehicleResponse")]
        void RegisterVehicle(string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/RegisterVehicle", ReplyAction="http://tempuri.org/IVtsWebService/RegisterVehicleResponse")]
        System.Threading.Tasks.Task RegisterVehicleAsync(string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/RegisterVehicles", ReplyAction="http://tempuri.org/IVtsWebService/RegisterVehiclesResponse")]
        void RegisterVehicles(string[] vins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/RegisterVehicles", ReplyAction="http://tempuri.org/IVtsWebService/RegisterVehiclesResponse")]
        System.Threading.Tasks.Task RegisterVehiclesAsync(string[] vins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/AssociateVehicleWithUser", ReplyAction="http://tempuri.org/IVtsWebService/AssociateVehicleWithUserResponse")]
        void AssociateVehicleWithUser(string vin, string userLogin, string userPasswordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/AssociateVehicleWithUser", ReplyAction="http://tempuri.org/IVtsWebService/AssociateVehicleWithUserResponse")]
        System.Threading.Tasks.Task AssociateVehicleWithUserAsync(string vin, string userLogin, string userPasswordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/AssociateVehiclesWithUser", ReplyAction="http://tempuri.org/IVtsWebService/AssociateVehiclesWithUserResponse")]
        void AssociateVehiclesWithUser(string[] vin, string userLogin, string userPasswordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/AssociateVehiclesWithUser", ReplyAction="http://tempuri.org/IVtsWebService/AssociateVehiclesWithUserResponse")]
        System.Threading.Tasks.Task AssociateVehiclesWithUserAsync(string[] vin, string userLogin, string userPasswordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetVehicleCharacteristics", ReplyAction="http://tempuri.org/IVtsWebService/GetVehicleCharacteristicsResponse")]
        VTSWebService.DataContracts.VehicleCharacteristicsDto GetVehicleCharacteristics(string vin, int lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetVehicleCharacteristics", ReplyAction="http://tempuri.org/IVtsWebService/GetVehicleCharacteristicsResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleCharacteristicsDto> GetVehicleCharacteristicsAsync(string vin, int lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetVehiclesInformation", ReplyAction="http://tempuri.org/IVtsWebService/GetVehiclesInformationResponse")]
        VTSWebService.DataContracts.VehicleInformationDto[] GetVehiclesInformation(long[] vehicleIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetVehiclesInformation", ReplyAction="http://tempuri.org/IVtsWebService/GetVehiclesInformationResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleInformationDto[]> GetVehiclesInformationAsync(long[] vehicleIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetVehiclesForUser", ReplyAction="http://tempuri.org/IVtsWebService/GetVehiclesForUserResponse")]
        VTSWebService.DataContracts.VehicleDto[] GetVehiclesForUser(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetVehiclesForUser", ReplyAction="http://tempuri.org/IVtsWebService/GetVehiclesForUserResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleDto[]> GetVehiclesForUserAsync(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetVehicleEvents", ReplyAction="http://tempuri.org/IVtsWebService/GetVehicleEventsResponse")]
        VTSWebService.DataContracts.VehicleEventDto[] GetVehicleEvents(string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetVehicleEvents", ReplyAction="http://tempuri.org/IVtsWebService/GetVehicleEventsResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleEventDto[]> GetVehicleEventsAsync(string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/SubmitVehicleEvent", ReplyAction="http://tempuri.org/IVtsWebService/SubmitVehicleEventResponse")]
        void SubmitVehicleEvent(VTSWebService.DataContracts.VehicleEventDto e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/SubmitVehicleEvent", ReplyAction="http://tempuri.org/IVtsWebService/SubmitVehicleEventResponse")]
        System.Threading.Tasks.Task SubmitVehicleEventAsync(VTSWebService.DataContracts.VehicleEventDto e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/DeleteVehicleEvent", ReplyAction="http://tempuri.org/IVtsWebService/DeleteVehicleEventResponse")]
        void DeleteVehicleEvent(VTSWebService.DataContracts.VehicleEventDto e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/DeleteVehicleEvent", ReplyAction="http://tempuri.org/IVtsWebService/DeleteVehicleEventResponse")]
        System.Threading.Tasks.Task DeleteVehicleEventAsync(VTSWebService.DataContracts.VehicleEventDto e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetDesktopMessages", ReplyAction="http://tempuri.org/IVtsWebService/GetDesktopMessagesResponse")]
        string[] GetDesktopMessages(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetDesktopMessages", ReplyAction="http://tempuri.org/IVtsWebService/GetDesktopMessagesResponse")]
        System.Threading.Tasks.Task<string[]> GetDesktopMessagesAsync(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/UpdateVehicleMileage", ReplyAction="http://tempuri.org/IVtsWebService/UpdateVehicleMileageResponse")]
        void UpdateVehicleMileage(string vin, int newMileage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/UpdateVehicleMileage", ReplyAction="http://tempuri.org/IVtsWebService/UpdateVehicleMileageResponse")]
        System.Threading.Tasks.Task UpdateVehicleMileageAsync(string vin, int newMileage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/SubmitAnalyticStatistics", ReplyAction="http://tempuri.org/IVtsWebService/SubmitAnalyticStatisticsResponse")]
        void SubmitAnalyticStatistics(VTSWebService.DataContracts.AnalyticStatisticsDto statistics);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/SubmitAnalyticStatistics", ReplyAction="http://tempuri.org/IVtsWebService/SubmitAnalyticStatisticsResponse")]
        System.Threading.Tasks.Task SubmitAnalyticStatisticsAsync(VTSWebService.DataContracts.AnalyticStatisticsDto statistics);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettings", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsResponse")]
        VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettings", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByType", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeResponse")]
        VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsByType(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByType", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsByTypeAsync(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeAndEngineFamily", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeAndEngineFamilyRes" +
            "ponse")]
        VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsByTypeAndEngineFamily(int type, int engineFamilyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeAndEngineFamily", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeAndEngineFamilyRes" +
            "ponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsByTypeAndEngineFamilyAsync(int type, int engineFamilyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeEngineFamilyAndEng" +
            "ineType", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeEngineFamilyAndEng" +
            "ineTypeResponse")]
        VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(int type, int engineFamilyType, int engineType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeEngineFamilyAndEng" +
            "ineType", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByTypeEngineFamilyAndEng" +
            "ineTypeResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeAsync(int type, int engineFamilyType, int engineType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByEngineFamilyAndEngineT" +
            "ype", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByEngineFamilyAndEngineT" +
            "ypeResponse")]
        VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsByEngineFamilyAndEngineType(int engineFamilyType, int engineType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByEngineFamilyAndEngineT" +
            "ype", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByEngineFamilyAndEngineT" +
            "ypeResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeAsync(int engineFamilyType, int engineType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByEngineFamily", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByEngineFamilyResponse")]
        VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsByEngineFamily(int engineFamilyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByEngineFamily", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByEngineFamilyResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsByEngineFamilyAsync(int engineFamilyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsDefaultByTypes", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsDefaultByTypesResponse")]
        VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsDefaultByTypes(int[] types, int engineFamilyType, int engineType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsDefaultByTypes", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsDefaultByTypesResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsDefaultByTypesAsync(int[] types, int engineFamilyType, int engineType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsBySignature", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsBySignatureResponse")]
        VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsBySignature(int[] signatureRuleTypes, int[] signatureEngineTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsBySignature", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsBySignatureResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsBySignatureAsync(int[] signatureRuleTypes, int[] signatureEngineTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsWhereFamilyAndEngineIsNu" +
            "ll", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsWhereFamilyAndEngineIsNu" +
            "llResponse")]
        VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(int ruleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsWhereFamilyAndEngineIsNu" +
            "ll", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsWhereFamilyAndEngineIsNu" +
            "llResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullAsync(int ruleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsWhereEngineIsNull", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsWhereEngineIsNullRespons" +
            "e")]
        VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsWhereEngineIsNull(int ruleType, int engineFamilyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsWhereEngineIsNull", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsWhereEngineIsNullRespons" +
            "e")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsWhereEngineIsNullAsync(int ruleType, int engineFamilyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByIds", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByIdsResponse")]
        VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsByIds(long[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByIds", ReplyAction="http://tempuri.org/IVtsWebService/GetAnalyticRuleSettingsByIdsResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsByIdsAsync(long[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/SubmitAnalyticRuleSettings", ReplyAction="http://tempuri.org/IVtsWebService/SubmitAnalyticRuleSettingsResponse")]
        void SubmitAnalyticRuleSettings(VTSWebService.DataContracts.AnalyticRuleSettingsDto settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/SubmitAnalyticRuleSettings", ReplyAction="http://tempuri.org/IVtsWebService/SubmitAnalyticRuleSettingsResponse")]
        System.Threading.Tasks.Task SubmitAnalyticRuleSettingsAsync(VTSWebService.DataContracts.AnalyticRuleSettingsDto settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/AggregateStatistics", ReplyAction="http://tempuri.org/IVtsWebService/AggregateStatisticsResponse")]
        void AggregateStatistics();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/AggregateStatistics", ReplyAction="http://tempuri.org/IVtsWebService/AggregateStatisticsResponse")]
        System.Threading.Tasks.Task AggregateStatisticsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetDatasetsForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetDatasetsForVehicleResponse")]
        VTSWebService.DataContracts.PsaDatasetDto[] GetDatasetsForVehicle(string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetDatasetsForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetDatasetsForVehicleResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.PsaDatasetDto[]> GetDatasetsForVehicleAsync(string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/UploadDataset", ReplyAction="http://tempuri.org/IVtsWebService/UploadDatasetResponse")]
        void UploadDataset(VTSWebService.DataContracts.PsaDatasetDto dataset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/UploadDataset", ReplyAction="http://tempuri.org/IVtsWebService/UploadDatasetResponse")]
        System.Threading.Tasks.Task UploadDatasetAsync(VTSWebService.DataContracts.PsaDatasetDto dataset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/UploadDatasets", ReplyAction="http://tempuri.org/IVtsWebService/UploadDatasetsResponse")]
        void UploadDatasets(VTSWebService.DataContracts.PsaDatasetDto[] datasets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/UploadDatasets", ReplyAction="http://tempuri.org/IVtsWebService/UploadDatasetsResponse")]
        System.Threading.Tasks.Task UploadDatasetsAsync(VTSWebService.DataContracts.PsaDatasetDto[] datasets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/DeleteDataset", ReplyAction="http://tempuri.org/IVtsWebService/DeleteDatasetResponse")]
        void DeleteDataset(long datasetId, string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/DeleteDataset", ReplyAction="http://tempuri.org/IVtsWebService/DeleteDatasetResponse")]
        System.Threading.Tasks.Task DeleteDatasetAsync(long datasetId, string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/DeleteTrace", ReplyAction="http://tempuri.org/IVtsWebService/DeleteTraceResponse")]
        void DeleteTrace(long traceId, string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/DeleteTrace", ReplyAction="http://tempuri.org/IVtsWebService/DeleteTraceResponse")]
        System.Threading.Tasks.Task DeleteTraceAsync(long traceId, string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetDatasetsCount", ReplyAction="http://tempuri.org/IVtsWebService/GetDatasetsCountResponse")]
        int GetDatasetsCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetDatasetsCount", ReplyAction="http://tempuri.org/IVtsWebService/GetDatasetsCountResponse")]
        System.Threading.Tasks.Task<int> GetDatasetsCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetDatasetsCountForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetDatasetsCountForVehicleResponse")]
        int GetDatasetsCountForVehicle(long vehicleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetDatasetsCountForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetDatasetsCountForVehicleResponse")]
        System.Threading.Tasks.Task<int> GetDatasetsCountForVehicleAsync(long vehicleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetNextPageForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetNextPageForVehicleResponse")]
        VTSWebService.DataContracts.PsaDatasetDto[] GetNextPageForVehicle(long lastId, int pageSize, long vehicleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetNextPageForVehicle", ReplyAction="http://tempuri.org/IVtsWebService/GetNextPageForVehicleResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.PsaDatasetDto[]> GetNextPageForVehicleAsync(long lastId, int pageSize, long vehicleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetNextPage", ReplyAction="http://tempuri.org/IVtsWebService/GetNextPageResponse")]
        VTSWebService.DataContracts.PsaDatasetDto[] GetNextPage(long lastId, int pagesize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/GetNextPage", ReplyAction="http://tempuri.org/IVtsWebService/GetNextPageResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.PsaDatasetDto[]> GetNextPageAsync(long lastId, int pagesize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/NewsGetLast", ReplyAction="http://tempuri.org/IVtsWebService/NewsGetLastResponse")]
        VTSWebService.DataContracts.SystemNewsDto[] NewsGetLast(int topCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/NewsGetLast", ReplyAction="http://tempuri.org/IVtsWebService/NewsGetLastResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.SystemNewsDto[]> NewsGetLastAsync(int topCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/NewsGetAll", ReplyAction="http://tempuri.org/IVtsWebService/NewsGetAllResponse")]
        VTSWebService.DataContracts.SystemNewsDto[] NewsGetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/NewsGetAll", ReplyAction="http://tempuri.org/IVtsWebService/NewsGetAllResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.SystemNewsDto[]> NewsGetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/NewsGet", ReplyAction="http://tempuri.org/IVtsWebService/NewsGetResponse")]
        VTSWebService.DataContracts.SystemNewsDto NewsGet(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/NewsGet", ReplyAction="http://tempuri.org/IVtsWebService/NewsGetResponse")]
        System.Threading.Tasks.Task<VTSWebService.DataContracts.SystemNewsDto> NewsGetAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/NewsUpdate", ReplyAction="http://tempuri.org/IVtsWebService/NewsUpdateResponse")]
        void NewsUpdate(VTSWebService.DataContracts.SystemNewsDto item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/NewsUpdate", ReplyAction="http://tempuri.org/IVtsWebService/NewsUpdateResponse")]
        System.Threading.Tasks.Task NewsUpdateAsync(VTSWebService.DataContracts.SystemNewsDto item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/NewsPersist", ReplyAction="http://tempuri.org/IVtsWebService/NewsPersistResponse")]
        void NewsPersist(VTSWebService.DataContracts.SystemNewsDto item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/NewsPersist", ReplyAction="http://tempuri.org/IVtsWebService/NewsPersistResponse")]
        System.Threading.Tasks.Task NewsPersistAsync(VTSWebService.DataContracts.SystemNewsDto item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/NewsDelete", ReplyAction="http://tempuri.org/IVtsWebService/NewsDeleteResponse")]
        void NewsDelete(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtsWebService/NewsDelete", ReplyAction="http://tempuri.org/IVtsWebService/NewsDeleteResponse")]
        System.Threading.Tasks.Task NewsDeleteAsync(long id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVtsWebServiceChannel : Tester.serv.IVtsWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VtsWebServiceClient : System.ServiceModel.ClientBase<Tester.serv.IVtsWebService>, Tester.serv.IVtsWebService {
        
        public VtsWebServiceClient() {
        }
        
        public VtsWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VtsWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VtsWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VtsWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CheckConnection() {
            return base.Channel.CheckConnection();
        }
        
        public System.Threading.Tasks.Task<string> CheckConnectionAsync() {
            return base.Channel.CheckConnectionAsync();
        }
        
        public bool CheckUsernameAvailability(string username) {
            return base.Channel.CheckUsernameAvailability(username);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUsernameAvailabilityAsync(string username) {
            return base.Channel.CheckUsernameAvailabilityAsync(username);
        }
        
        public VTSWebService.DataContracts.UserDto AuthenticateUser(string login, string passwordHash) {
            return base.Channel.AuthenticateUser(login, passwordHash);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.UserDto> AuthenticateUserAsync(string login, string passwordHash) {
            return base.Channel.AuthenticateUserAsync(login, passwordHash);
        }
        
        public VTSWebService.DataContracts.AgentVersionDto GetLastAgentVersion() {
            return base.Channel.GetLastAgentVersion();
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AgentVersionDto> GetLastAgentVersionAsync() {
            return base.Channel.GetLastAgentVersionAsync();
        }
        
        public void RegisterUser(VTSWebService.DataContracts.UserDto user) {
            base.Channel.RegisterUser(user);
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync(VTSWebService.DataContracts.UserDto user) {
            return base.Channel.RegisterUserAsync(user);
        }
        
        public int GetUserRoleByUserId(long userId) {
            return base.Channel.GetUserRoleByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<int> GetUserRoleByUserIdAsync(long userId) {
            return base.Channel.GetUserRoleByUserIdAsync(userId);
        }
        
        public int GetPartnersVehiclesCount(long partnerId) {
            return base.Channel.GetPartnersVehiclesCount(partnerId);
        }
        
        public System.Threading.Tasks.Task<int> GetPartnersVehiclesCountAsync(long partnerId) {
            return base.Channel.GetPartnersVehiclesCountAsync(partnerId);
        }
        
        public VTSWebService.DataContracts.UserDto[] GetClientsForPartner(string login, string passwordHash) {
            return base.Channel.GetClientsForPartner(login, passwordHash);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.UserDto[]> GetClientsForPartnerAsync(string login, string passwordHash) {
            return base.Channel.GetClientsForPartnerAsync(login, passwordHash);
        }
        
        public VTSWebService.DataContracts.UserDto[] GetAllUsers(string administrativeLogin, string administrativePasswordHash) {
            return base.Channel.GetAllUsers(administrativeLogin, administrativePasswordHash);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.UserDto[]> GetAllUsersAsync(string administrativeLogin, string administrativePasswordHash) {
            return base.Channel.GetAllUsersAsync(administrativeLogin, administrativePasswordHash);
        }
        
        public VTSWebService.DataContracts.VehicleDto[] GetUsersVehicles(string login, string passwordHash) {
            return base.Channel.GetUsersVehicles(login, passwordHash);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleDto[]> GetUsersVehiclesAsync(string login, string passwordHash) {
            return base.Channel.GetUsersVehiclesAsync(login, passwordHash);
        }
        
        public VTSWebService.DataContracts.VehicleDto GetVehicleByVin(string vin) {
            return base.Channel.GetVehicleByVin(vin);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleDto> GetVehicleByVinAsync(string vin) {
            return base.Channel.GetVehicleByVinAsync(vin);
        }
        
        public bool CheckWhetherVinIsSupported(string vin) {
            return base.Channel.CheckWhetherVinIsSupported(vin);
        }
        
        public System.Threading.Tasks.Task<bool> CheckWhetherVinIsSupportedAsync(string vin) {
            return base.Channel.CheckWhetherVinIsSupportedAsync(vin);
        }
        
        public string[] CheckVinsReturnUnsupported(string[] vins) {
            return base.Channel.CheckVinsReturnUnsupported(vins);
        }
        
        public System.Threading.Tasks.Task<string[]> CheckVinsReturnUnsupportedAsync(string[] vins) {
            return base.Channel.CheckVinsReturnUnsupportedAsync(vins);
        }
        
        public VTSWebService.DataContracts.VehicleInformationDto GetVehicleInformationByVin(string vin) {
            return base.Channel.GetVehicleInformationByVin(vin);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleInformationDto> GetVehicleInformationByVinAsync(string vin) {
            return base.Channel.GetVehicleInformationByVinAsync(vin);
        }
        
        public string[] ReturnUnsupportedVinsFromTheList(string[] vins) {
            return base.Channel.ReturnUnsupportedVinsFromTheList(vins);
        }
        
        public System.Threading.Tasks.Task<string[]> ReturnUnsupportedVinsFromTheListAsync(string[] vins) {
            return base.Channel.ReturnUnsupportedVinsFromTheListAsync(vins);
        }
        
        public VTSWebService.DataContracts.AgentVersionDto[] GetAgentVersions() {
            return base.Channel.GetAgentVersions();
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AgentVersionDto[]> GetAgentVersionsAsync() {
            return base.Channel.GetAgentVersionsAsync();
        }
        
        public string[] CheckVinsReturnUnregistered(string[] vins) {
            return base.Channel.CheckVinsReturnUnregistered(vins);
        }
        
        public System.Threading.Tasks.Task<string[]> CheckVinsReturnUnregisteredAsync(string[] vins) {
            return base.Channel.CheckVinsReturnUnregisteredAsync(vins);
        }
        
        public void RegisterVehicle(string vin) {
            base.Channel.RegisterVehicle(vin);
        }
        
        public System.Threading.Tasks.Task RegisterVehicleAsync(string vin) {
            return base.Channel.RegisterVehicleAsync(vin);
        }
        
        public void RegisterVehicles(string[] vins) {
            base.Channel.RegisterVehicles(vins);
        }
        
        public System.Threading.Tasks.Task RegisterVehiclesAsync(string[] vins) {
            return base.Channel.RegisterVehiclesAsync(vins);
        }
        
        public void AssociateVehicleWithUser(string vin, string userLogin, string userPasswordHash) {
            base.Channel.AssociateVehicleWithUser(vin, userLogin, userPasswordHash);
        }
        
        public System.Threading.Tasks.Task AssociateVehicleWithUserAsync(string vin, string userLogin, string userPasswordHash) {
            return base.Channel.AssociateVehicleWithUserAsync(vin, userLogin, userPasswordHash);
        }
        
        public void AssociateVehiclesWithUser(string[] vin, string userLogin, string userPasswordHash) {
            base.Channel.AssociateVehiclesWithUser(vin, userLogin, userPasswordHash);
        }
        
        public System.Threading.Tasks.Task AssociateVehiclesWithUserAsync(string[] vin, string userLogin, string userPasswordHash) {
            return base.Channel.AssociateVehiclesWithUserAsync(vin, userLogin, userPasswordHash);
        }
        
        public VTSWebService.DataContracts.VehicleCharacteristicsDto GetVehicleCharacteristics(string vin, int lang) {
            return base.Channel.GetVehicleCharacteristics(vin, lang);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleCharacteristicsDto> GetVehicleCharacteristicsAsync(string vin, int lang) {
            return base.Channel.GetVehicleCharacteristicsAsync(vin, lang);
        }
        
        public VTSWebService.DataContracts.VehicleInformationDto[] GetVehiclesInformation(long[] vehicleIds) {
            return base.Channel.GetVehiclesInformation(vehicleIds);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleInformationDto[]> GetVehiclesInformationAsync(long[] vehicleIds) {
            return base.Channel.GetVehiclesInformationAsync(vehicleIds);
        }
        
        public VTSWebService.DataContracts.VehicleDto[] GetVehiclesForUser(string login, string passwordHash) {
            return base.Channel.GetVehiclesForUser(login, passwordHash);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleDto[]> GetVehiclesForUserAsync(string login, string passwordHash) {
            return base.Channel.GetVehiclesForUserAsync(login, passwordHash);
        }
        
        public VTSWebService.DataContracts.VehicleEventDto[] GetVehicleEvents(string vin) {
            return base.Channel.GetVehicleEvents(vin);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.VehicleEventDto[]> GetVehicleEventsAsync(string vin) {
            return base.Channel.GetVehicleEventsAsync(vin);
        }
        
        public void SubmitVehicleEvent(VTSWebService.DataContracts.VehicleEventDto e) {
            base.Channel.SubmitVehicleEvent(e);
        }
        
        public System.Threading.Tasks.Task SubmitVehicleEventAsync(VTSWebService.DataContracts.VehicleEventDto e) {
            return base.Channel.SubmitVehicleEventAsync(e);
        }
        
        public void DeleteVehicleEvent(VTSWebService.DataContracts.VehicleEventDto e) {
            base.Channel.DeleteVehicleEvent(e);
        }
        
        public System.Threading.Tasks.Task DeleteVehicleEventAsync(VTSWebService.DataContracts.VehicleEventDto e) {
            return base.Channel.DeleteVehicleEventAsync(e);
        }
        
        public string[] GetDesktopMessages(string login, string passwordHash) {
            return base.Channel.GetDesktopMessages(login, passwordHash);
        }
        
        public System.Threading.Tasks.Task<string[]> GetDesktopMessagesAsync(string login, string passwordHash) {
            return base.Channel.GetDesktopMessagesAsync(login, passwordHash);
        }
        
        public void UpdateVehicleMileage(string vin, int newMileage) {
            base.Channel.UpdateVehicleMileage(vin, newMileage);
        }
        
        public System.Threading.Tasks.Task UpdateVehicleMileageAsync(string vin, int newMileage) {
            return base.Channel.UpdateVehicleMileageAsync(vin, newMileage);
        }
        
        public void SubmitAnalyticStatistics(VTSWebService.DataContracts.AnalyticStatisticsDto statistics) {
            base.Channel.SubmitAnalyticStatistics(statistics);
        }
        
        public System.Threading.Tasks.Task SubmitAnalyticStatisticsAsync(VTSWebService.DataContracts.AnalyticStatisticsDto statistics) {
            return base.Channel.SubmitAnalyticStatisticsAsync(statistics);
        }
        
        public VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettings() {
            return base.Channel.GetAnalyticRuleSettings();
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsAsync() {
            return base.Channel.GetAnalyticRuleSettingsAsync();
        }
        
        public VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsByType(int type) {
            return base.Channel.GetAnalyticRuleSettingsByType(type);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsByTypeAsync(int type) {
            return base.Channel.GetAnalyticRuleSettingsByTypeAsync(type);
        }
        
        public VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsByTypeAndEngineFamily(int type, int engineFamilyType) {
            return base.Channel.GetAnalyticRuleSettingsByTypeAndEngineFamily(type, engineFamilyType);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsByTypeAndEngineFamilyAsync(int type, int engineFamilyType) {
            return base.Channel.GetAnalyticRuleSettingsByTypeAndEngineFamilyAsync(type, engineFamilyType);
        }
        
        public VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(int type, int engineFamilyType, int engineType) {
            return base.Channel.GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineType(type, engineFamilyType, engineType);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeAsync(int type, int engineFamilyType, int engineType) {
            return base.Channel.GetAnalyticRuleSettingsByTypeEngineFamilyAndEngineTypeAsync(type, engineFamilyType, engineType);
        }
        
        public VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsByEngineFamilyAndEngineType(int engineFamilyType, int engineType) {
            return base.Channel.GetAnalyticRuleSettingsByEngineFamilyAndEngineType(engineFamilyType, engineType);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeAsync(int engineFamilyType, int engineType) {
            return base.Channel.GetAnalyticRuleSettingsByEngineFamilyAndEngineTypeAsync(engineFamilyType, engineType);
        }
        
        public VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsByEngineFamily(int engineFamilyType) {
            return base.Channel.GetAnalyticRuleSettingsByEngineFamily(engineFamilyType);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsByEngineFamilyAsync(int engineFamilyType) {
            return base.Channel.GetAnalyticRuleSettingsByEngineFamilyAsync(engineFamilyType);
        }
        
        public VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsDefaultByTypes(int[] types, int engineFamilyType, int engineType) {
            return base.Channel.GetAnalyticRuleSettingsDefaultByTypes(types, engineFamilyType, engineType);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsDefaultByTypesAsync(int[] types, int engineFamilyType, int engineType) {
            return base.Channel.GetAnalyticRuleSettingsDefaultByTypesAsync(types, engineFamilyType, engineType);
        }
        
        public VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsBySignature(int[] signatureRuleTypes, int[] signatureEngineTypes) {
            return base.Channel.GetAnalyticRuleSettingsBySignature(signatureRuleTypes, signatureEngineTypes);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsBySignatureAsync(int[] signatureRuleTypes, int[] signatureEngineTypes) {
            return base.Channel.GetAnalyticRuleSettingsBySignatureAsync(signatureRuleTypes, signatureEngineTypes);
        }
        
        public VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(int ruleType) {
            return base.Channel.GetAnalyticRuleSettingsWhereFamilyAndEngineIsNull(ruleType);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullAsync(int ruleType) {
            return base.Channel.GetAnalyticRuleSettingsWhereFamilyAndEngineIsNullAsync(ruleType);
        }
        
        public VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsWhereEngineIsNull(int ruleType, int engineFamilyType) {
            return base.Channel.GetAnalyticRuleSettingsWhereEngineIsNull(ruleType, engineFamilyType);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsWhereEngineIsNullAsync(int ruleType, int engineFamilyType) {
            return base.Channel.GetAnalyticRuleSettingsWhereEngineIsNullAsync(ruleType, engineFamilyType);
        }
        
        public VTSWebService.DataContracts.AnalyticRuleSettingsDto[] GetAnalyticRuleSettingsByIds(long[] ids) {
            return base.Channel.GetAnalyticRuleSettingsByIds(ids);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.AnalyticRuleSettingsDto[]> GetAnalyticRuleSettingsByIdsAsync(long[] ids) {
            return base.Channel.GetAnalyticRuleSettingsByIdsAsync(ids);
        }
        
        public void SubmitAnalyticRuleSettings(VTSWebService.DataContracts.AnalyticRuleSettingsDto settings) {
            base.Channel.SubmitAnalyticRuleSettings(settings);
        }
        
        public System.Threading.Tasks.Task SubmitAnalyticRuleSettingsAsync(VTSWebService.DataContracts.AnalyticRuleSettingsDto settings) {
            return base.Channel.SubmitAnalyticRuleSettingsAsync(settings);
        }
        
        public void AggregateStatistics() {
            base.Channel.AggregateStatistics();
        }
        
        public System.Threading.Tasks.Task AggregateStatisticsAsync() {
            return base.Channel.AggregateStatisticsAsync();
        }
        
        public VTSWebService.DataContracts.PsaDatasetDto[] GetDatasetsForVehicle(string vin) {
            return base.Channel.GetDatasetsForVehicle(vin);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.PsaDatasetDto[]> GetDatasetsForVehicleAsync(string vin) {
            return base.Channel.GetDatasetsForVehicleAsync(vin);
        }
        
        public void UploadDataset(VTSWebService.DataContracts.PsaDatasetDto dataset) {
            base.Channel.UploadDataset(dataset);
        }
        
        public System.Threading.Tasks.Task UploadDatasetAsync(VTSWebService.DataContracts.PsaDatasetDto dataset) {
            return base.Channel.UploadDatasetAsync(dataset);
        }
        
        public void UploadDatasets(VTSWebService.DataContracts.PsaDatasetDto[] datasets) {
            base.Channel.UploadDatasets(datasets);
        }
        
        public System.Threading.Tasks.Task UploadDatasetsAsync(VTSWebService.DataContracts.PsaDatasetDto[] datasets) {
            return base.Channel.UploadDatasetsAsync(datasets);
        }
        
        public void DeleteDataset(long datasetId, string login, string passwordHash) {
            base.Channel.DeleteDataset(datasetId, login, passwordHash);
        }
        
        public System.Threading.Tasks.Task DeleteDatasetAsync(long datasetId, string login, string passwordHash) {
            return base.Channel.DeleteDatasetAsync(datasetId, login, passwordHash);
        }
        
        public void DeleteTrace(long traceId, string login, string passwordHash) {
            base.Channel.DeleteTrace(traceId, login, passwordHash);
        }
        
        public System.Threading.Tasks.Task DeleteTraceAsync(long traceId, string login, string passwordHash) {
            return base.Channel.DeleteTraceAsync(traceId, login, passwordHash);
        }
        
        public int GetDatasetsCount() {
            return base.Channel.GetDatasetsCount();
        }
        
        public System.Threading.Tasks.Task<int> GetDatasetsCountAsync() {
            return base.Channel.GetDatasetsCountAsync();
        }
        
        public int GetDatasetsCountForVehicle(long vehicleId) {
            return base.Channel.GetDatasetsCountForVehicle(vehicleId);
        }
        
        public System.Threading.Tasks.Task<int> GetDatasetsCountForVehicleAsync(long vehicleId) {
            return base.Channel.GetDatasetsCountForVehicleAsync(vehicleId);
        }
        
        public VTSWebService.DataContracts.PsaDatasetDto[] GetNextPageForVehicle(long lastId, int pageSize, long vehicleId) {
            return base.Channel.GetNextPageForVehicle(lastId, pageSize, vehicleId);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.PsaDatasetDto[]> GetNextPageForVehicleAsync(long lastId, int pageSize, long vehicleId) {
            return base.Channel.GetNextPageForVehicleAsync(lastId, pageSize, vehicleId);
        }
        
        public VTSWebService.DataContracts.PsaDatasetDto[] GetNextPage(long lastId, int pagesize) {
            return base.Channel.GetNextPage(lastId, pagesize);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.PsaDatasetDto[]> GetNextPageAsync(long lastId, int pagesize) {
            return base.Channel.GetNextPageAsync(lastId, pagesize);
        }
        
        public VTSWebService.DataContracts.SystemNewsDto[] NewsGetLast(int topCount) {
            return base.Channel.NewsGetLast(topCount);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.SystemNewsDto[]> NewsGetLastAsync(int topCount) {
            return base.Channel.NewsGetLastAsync(topCount);
        }
        
        public VTSWebService.DataContracts.SystemNewsDto[] NewsGetAll() {
            return base.Channel.NewsGetAll();
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.SystemNewsDto[]> NewsGetAllAsync() {
            return base.Channel.NewsGetAllAsync();
        }
        
        public VTSWebService.DataContracts.SystemNewsDto NewsGet(long id) {
            return base.Channel.NewsGet(id);
        }
        
        public System.Threading.Tasks.Task<VTSWebService.DataContracts.SystemNewsDto> NewsGetAsync(long id) {
            return base.Channel.NewsGetAsync(id);
        }
        
        public void NewsUpdate(VTSWebService.DataContracts.SystemNewsDto item) {
            base.Channel.NewsUpdate(item);
        }
        
        public System.Threading.Tasks.Task NewsUpdateAsync(VTSWebService.DataContracts.SystemNewsDto item) {
            return base.Channel.NewsUpdateAsync(item);
        }
        
        public void NewsPersist(VTSWebService.DataContracts.SystemNewsDto item) {
            base.Channel.NewsPersist(item);
        }
        
        public System.Threading.Tasks.Task NewsPersistAsync(VTSWebService.DataContracts.SystemNewsDto item) {
            return base.Channel.NewsPersistAsync(item);
        }
        
        public void NewsDelete(long id) {
            base.Channel.NewsDelete(id);
        }
        
        public System.Threading.Tasks.Task NewsDeleteAsync(long id) {
            return base.Channel.NewsDeleteAsync(id);
        }
    }
}
